<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>使用VMware创建CentOS7.6虚拟机</title>
      <link href="post/6b0/"/>
      <url>post/6b0/</url>
      
        <content type="html"><![CDATA[<h2 id="1-下载CentOS7-6映像文件"><a href="#1-下载CentOS7-6映像文件" class="headerlink" title="1. 下载CentOS7.6映像文件"></a>1. 下载CentOS7.6映像文件</h2><p>点击<a href="https://vault.centos.org/7.6.1810/isos/x86_64/">这里</a>下载CentOS7.6映像文件。</p><h2 id="2-新建虚拟机"><a href="#2-新建虚拟机" class="headerlink" title="2. 新建虚拟机"></a>2. 新建虚拟机</h2><p>打开VMware，点击 文件 - 新建虚拟机</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/359.jpeg" alt=""></p><p>选择 典型，点击 下一步</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/360.jpeg" alt=""></p><p>选择 稍后安装操作系统，点击 下一步</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/361.jpeg" alt=""></p><p>选择 Linux 和 Red Hat Enterprise Linux 7 64位，点击 下一步</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/362.jpeg" alt=""></p><p>设置虚拟机名称以及存放位置(<strong>路径最好不要有中文！</strong>)</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/363.jpeg" alt=""></p><p>设置磁盘大小为20G，并勾选 将虚拟机拆分成多个文件，点击 下一步</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/364.jpeg" alt=""></p><p>点击 自定义硬件，选择内存，设置为2G</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/365.jpeg" alt=""></p><p>根据自己的CPU选择处理器数量和每个处理器的内核数量，<strong>一般是主机CPU的一半</strong></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/366.jpeg" alt=""></p><p>例如查看我电脑的CPU数量和每个处理器的内核数量</p><p>打开任务管理器，选择 性能，接着打开 资源监听器</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/367.jpeg" alt=""></p><p>选择 CPU，可以看到两个红框框出来的表示电脑有两个CPU</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/368.jpeg" alt=""></p><p>从上图右侧可以看到，CPU是从CPU 0开始，从下图的CPU 7结束，则总共8个核，即我的电脑是2个CPU，每个CPU有4个核。这里给虚拟机分配一半也就是2个CPU，每个CPU2个核。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/369.jpeg" alt=""></p><p>网络适配器选择 NAT模式(<strong>一个难点！</strong>)</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/370.jpeg" alt=""></p><p>点击 关闭 - 完成，此时一个空白的虚拟机就建立好啦😁</p><h2 id="3-安装CentOS-7-6"><a href="#3-安装CentOS-7-6" class="headerlink" title="3. 安装CentOS 7.6"></a>3. 安装CentOS 7.6</h2><p>打开虚拟机，在CD这里挂载下载好的CentOS镜像文件。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/20210317214229.png" alt=""></p><p>开启虚拟机，选择第一个 Install CentOS 7</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/20210317214419.png" alt=""></p><p>稍等片刻后，看到这个界面，我们选择 <strong>软件选择</strong></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/20210317214626.png" alt=""></p><p>勾选图中的选项</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/20210317214845.png" alt=""></p><p>选择 <strong>安装位置</strong>，进行分区操作</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/20210317214922.png" alt=""></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/20210317215011.png" alt=""></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/20210317215049.png" alt=""></p><p>Linux一般分为三个区：boot(引导区)、swap区(交换区)、root区(根目录)</p><p>boot：1G<br>swap：一般和RAM大小相同，这里是2G<br>root：分配给虚拟机的剩余内存，这里是17G</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/20210317215454.png" alt=""></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/20210317215513.png" alt=""></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/20210317215606.png" alt=""></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/20210317215626.png" alt=""></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/20210317215712.png" alt=""></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/20210317215729.png" alt=""></p><p>点击完成</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/20210317215803.png" alt=""></p><p>点击接受更改</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/20210317215835.png" alt=""></p><p>这里不开启KDUMP，防止占用内存</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/20210317215917.png" alt=""></p><p>设置网络与主机名</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/20210317220043.png" alt=""></p><p>开始安装并设置root用户密码，新用户创不创建都可以</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/20210317220219.png" alt=""></p><p>等待安装好后重启就可以啦✨</p><p>点击许可证，选择同意</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/20210317220339.png" alt=""></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/20210317220423.png" alt=""></p><p>接下来就可以尽情享用CentOS 7.6了。</p><h2 id="4-安装vmtools"><a href="#4-安装vmtools" class="headerlink" title="4. 安装vmtools"></a>4. 安装vmtools</h2><p><em>安装vmtools后，可以设置windows和centos的共享文件夹。</em></p><p>进入CentOS，点击菜单的 重新安装VMware Tools</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/20210323225755.png" alt=""></p><p>可以看到桌面生成了一个iso文件</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/20210323225918.png" alt=""></p><p>打开后，将其中的tar文件放到<code>/opt</code>目录下[Linux默认管理软件安装包的目录]</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/20210323230344.png" alt=""></p><p>使用tar命令解压文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf VMwareTools- 10.3.21- 14772444.tar.gz</span><br></pre></td></tr></table></figure><p>进入刚刚解压的文件目录下，打开终端，执行</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./vmware-install.pl</span><br></pre></td></tr></table></figure><p>全部使用默认设置即可。（需要选择敲回车即可😁）</p><p>安装完成后，例如我在D盘中新建文件夹<code>MyShare</code>，在CentOS中设置好共享文件夹之后，windows和CentOS都可以使用该文件夹的文件啦。</p><p>右键虚拟机，点击 设置</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/20210323231048.png" alt=""></p><p>点击 选项，选择 共享文件夹，添加想要共享的文件夹即可</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/20210323231140.png" alt=""></p><p>添加成功就可以在<code>/mnt</code>（Linux的挂载文件夹下找到共享文件夹了。）</p><h2 id="5-参考"><a href="#5-参考" class="headerlink" title="5. 参考"></a>5. 参考</h2><ul><li><a href="https://www.bilibili.com/video/BV1Sv411r7vd?p=4">2021韩顺平一周学会Linux</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 虚拟机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端练习-九宫格</title>
      <link href="post/1ea5/"/>
      <url>post/1ea5/</url>
      
        <content type="html"><![CDATA[<p>为了复习一下原生JS和CSS，做了一个九宫格的小练习👀。</p><h2 id="1-效果"><a href="#1-效果" class="headerlink" title="1. 效果"></a>1. 效果</h2><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/352.gif" alt=""></p><p>点击<strong>开始闪烁</strong>，九宫格中的三个格子获取不同颜色；<br>点击<strong>结束闪烁</strong>，九宫格中的格子不再获取其它颜色。</p><p><a href="http://shenshilei1022.gitee.io/learn-front-end/Project1/">在线演示</a></p><h2 id="2-实现"><a href="#2-实现" class="headerlink" title="2. 实现"></a>2. 实现</h2><h3 id="2-1-布局"><a href="#2-1-布局" class="headerlink" title="2.1 布局"></a>2.1 布局</h3><p>首先要使用HTML+CSS将这个九宫格页面制作出来。</p><ul><li><code>&lt;!DOCTYPE&gt;</code>不是HTML标签，是指示浏览器该页面使用哪个<strong>HTML版本</strong>进行编写的指令。</li><li>尽量不要使用<strong>table</strong>来形成这种网格布局。</li></ul><p>这里使用弹性布局来进行整个页面的布局。</p><ol><li>采用弹性布局的元素，称为弹性容器。其子元素为弹性项目（Flex Items）</li><li><code>flex-wrap: wrap</code> 弹性项目一行排不下则进行换行，不在一行进行排列</li><li><code>justify-content</code> 项目横向居中</li><li><code>align-items</code> 项目纵向居中</li></ol><p>另外，还是用了<code>@media</code>使移动端也进行适配。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/354.jpg" alt=""><br>表示当屏幕最大宽度小于768px时，修改下面设定的样式。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>九宫格<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./me.css&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./favicon.ico&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box-wrap&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;button-wrap&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;开始闪烁&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;startFlash()&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;结束闪烁&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;endFlash()&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;./me.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box-wrap</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#d4d4f5</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">50px</span> auto <span class="number">10px</span> auto;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">2%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">29%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">29%</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">10%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: orange;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">1%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.button-wrap</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.button-wrap</span> <span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: large;</span><br><span class="line">    <span class="attribute">border-style</span>: none;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">color</span>: orange;</span><br><span class="line">    <span class="attribute">outline</span>: none;</span><br><span class="line">    <span class="attribute">transition</span>: background-color <span class="number">0.3s</span>;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.button-wrap</span> <span class="selector-tag">input</span><span class="selector-pseudo">:focus</span>, <span class="selector-class">.button-wrap</span> <span class="selector-tag">input</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: orange;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* mobile */</span></span><br><span class="line"><span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width:</span> <span class="number">768px</span>) &#123;</span><br><span class="line">    <span class="selector-class">.box-wrap</span> &#123;</span><br><span class="line">        <span class="attribute">background-color</span>: <span class="number">#d4d4f5</span>;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">400px</span>;</span><br><span class="line">        <span class="attribute">margin</span>: <span class="number">50px</span> auto <span class="number">10px</span> auto;</span><br><span class="line">        <span class="attribute">display</span>: flex;</span><br><span class="line">        <span class="attribute">flex-wrap</span>: wrap;</span><br><span class="line">        <span class="attribute">justify-content</span>: center;</span><br><span class="line">        <span class="attribute">align-items</span>: center;</span><br><span class="line">        <span class="attribute">border-radius</span>: <span class="number">2%</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-class">.button-wrap</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">        <span class="attribute">height</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">margin</span>: auto;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-2-逻辑"><a href="#2-2-逻辑" class="headerlink" title="2.2 逻辑"></a>2.2 逻辑</h3><p>JS在这里实现点击后的操作以及修改九宫格块的颜色。</p><p>问题：</p><ol><li>从9个box中，随机挑选三个上色，需要实现从0-8中，随机获取三个不同的随机数的函数。</li><li>获取随机颜色的函数。</li><li>实现点击后连续闪烁，直至点击<strong>停止闪烁</strong>后才停止。</li></ol><p>1 获取随机数：</p><p>首先新建一个数组，大小为9，其中的数字分别是0-8.利用<code>Math.floor(Math.random()*8)</code>得到0-8的一个随机数，将这个随机数作为索引，将数组对应的值放入结果数组，然后删除选取过的这个值。直到结果数组的长度为3，停止选取。</p><div class="note primary no-icon flat"><p>array.splice(index, howmany) 删除数组中对应index的元素，howmany表示删除元素的个数，这个操作会影响原数组。<br>array.slice(start, end) 从已有数组中返回选定的元素，不会修改数组，而是返回一个新数组。</p></div><p>2 获取随机颜色：</p><p>利用随机数产生0-ffff的一个随机数，然后转换为16进制的字符串即可。</p><p>3 连续闪烁</p><p>使用BOM中的<strong>setInterval(task, time), clearInterval()</strong>, 时间以毫秒为单位。</p><div class="note primary no-icon flat"><p>定时器返回一个id，将这个id传给clearInterval可以清除对应的定时器👍</p><p>这里的定时器是从一个函数启动，再另一个函数中关闭的。所以设置一个全局变量，来实现这个操作。</p></div><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 定义全局变量 方便结束定时器</span></span><br><span class="line"><span class="keyword">var</span> task = <span class="literal">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> startFlash = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    task = <span class="built_in">setInterval</span>(flash, <span class="number">500</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> endFlash = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="built_in">clearInterval</span>(task);</span><br><span class="line">    <span class="keyword">const</span> elements = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&quot;box&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; elements.length; i++) &#123;</span><br><span class="line">        elements[i].style.backgroundColor = <span class="string">&quot;orange&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> flash = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> elements = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&quot;box&quot;</span>);</span><br><span class="line">    <span class="keyword">const</span> randomNum = getRandomNum(<span class="number">3</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; elements.length; i++) &#123;</span><br><span class="line">        elements[i].style.backgroundColor = <span class="string">&quot;orange&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; randomNum.length; i++) &#123;</span><br><span class="line">        <span class="keyword">const</span> element = elements[randomNum[i]];</span><br><span class="line">        element.style.backgroundColor = getRandomColor();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> getRandomColor = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;#&#x27;</span> + <span class="built_in">Math</span>.floor( <span class="built_in">Math</span>.random() * <span class="number">0xffffff</span> ).toString(<span class="number">16</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> getRandomNum = <span class="function">(<span class="params">n</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> res = [];</span><br><span class="line">    <span class="keyword">const</span> arr = [];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++) &#123;</span><br><span class="line">        arr[i] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> index = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">8</span>);</span><br><span class="line">        <span class="keyword">if</span> (arr[index] == <span class="literal">undefined</span>) <span class="keyword">continue</span>;</span><br><span class="line">        res.push(arr[index]);</span><br><span class="line">        arr.splice(index, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span> (res.length == n) <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-总结"><a href="#3-总结" class="headerlink" title="3. 总结"></a>3. 总结</h2><p>对CSS布局更加了解了😂，再好好体会JS中函数也可以作为表达式赋值给常量的思想🤣</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> HTML </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-组合(每日一题)</title>
      <link href="post/7240/"/>
      <url>post/7240/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>给定两个整数 n 和 k，返回 1 … n 中所有可能的 k 个数的组合。</p></blockquote><div class="note warning no-icon flat"><p>示例:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">输入: n &#x3D; 4, k &#x3D; 2</span><br><span class="line">输出:</span><br><span class="line">[</span><br><span class="line">  [2,4],</span><br><span class="line">  [3,4],</span><br><span class="line">  [2,3],</span><br><span class="line">  [1,2],</span><br><span class="line">  [1,3],</span><br><span class="line">  [1,4],</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p></div><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><h3 id="1-DFS-回溯"><a href="#1-DFS-回溯" class="headerlink" title="1. DFS+回溯"></a>1. DFS+回溯</h3><p>思路：使用搜索+回溯来获取每一条路径</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/351.jpg" alt=""></p><p><strong>选择1之后，在2中就不能再选择1了，只能在[3, 4]中选择，防止重复情况的发生。</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> List&lt;List&lt;Integer&gt;&gt; res;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;Integer&gt;&gt; combine(<span class="keyword">int</span> n, <span class="keyword">int</span> k) &#123;</span><br><span class="line">        res = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (n &lt;= <span class="number">0</span> || k &lt;= <span class="number">0</span> || n &lt; k) <span class="keyword">return</span> res;</span><br><span class="line">        <span class="comment">// 路径</span></span><br><span class="line">        Stack&lt;Integer&gt; path = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        dfs(<span class="number">1</span>, path, n, k);</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> start, Stack&lt;Integer&gt; path, <span class="keyword">int</span> n, <span class="keyword">int</span> k)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 终止条件</span></span><br><span class="line">        <span class="keyword">if</span> (path.size() == k) &#123;</span><br><span class="line">            res.add(<span class="keyword">new</span> ArrayList&lt;&gt;(path));</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 对当前数字以及后面数字进行遍历</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = start; i &lt;= n; i++) &#123;</span><br><span class="line">            <span class="comment">// 添加数字进入path</span></span><br><span class="line">            path.push(i);</span><br><span class="line">            <span class="comment">// 只能添加比当前数字大的数字</span></span><br><span class="line">            dfs(i + <span class="number">1</span>, path, n, k);</span><br><span class="line">            <span class="comment">// 退回</span></span><br><span class="line">            path.pop();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://leetcode-cn.com/problems/combinations/solution/hui-su-suan-fa-jian-zhi-python-dai-ma-java-dai-ma-/">回溯算法 + 剪枝（Java）</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-前K个高频元素(每日一题)</title>
      <link href="post/aeeb/"/>
      <url>post/aeeb/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>给定一个非空的整数数组，返回其中出现频率前 k 高的元素。</p></blockquote><div class="note warning no-icon flat"><p>示例 1:</p><p>输入: nums = [1,1,1,2,2,3], k = 2<br>输出: [1,2]<br>示例 2:</p><p>输入: nums = [1], k = 1<br>输出: [1]</p></div><p>提示：</p><ul><li>你可以假设给定的 k 总是合理的，且 1 ≤ k ≤ 数组中不相同的元素的个数。</li><li>你的算法的时间复杂度必须优于$O(nlogn)$ , n 是数组的大小。</li><li>题目数据保证答案唯一，换句话说，数组中前 k 个高频元素的集合是唯一的。</li><li>你可以按任意顺序返回答案。</li></ul><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><h3 id="1-堆"><a href="#1-堆" class="headerlink" title="1. 堆"></a>1. 堆</h3><p>思路：使用HashMap储存每个数字出现的频次，然后进行排序，得到前k个高频元素。但这样时间复杂度会超过或等于$O(nlogn)$。可以维护一个大小为k的堆，将数字加入堆中，当有数字的频次高于堆顶数字的频次，就删除堆顶数字，将该数字入堆。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.PriorityQueue;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] topKFrequent(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> k) &#123;</span><br><span class="line">        <span class="keyword">if</span> (nums == <span class="keyword">null</span> || nums.length == <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">0</span>];</span><br><span class="line">        HashMap&lt;Integer, Integer&gt; map = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (map.containsKey(nums[i])) &#123;</span><br><span class="line">                map.put(nums[i], map.get(nums[i]) + <span class="number">1</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                map.put(nums[i], <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 使用优先队列实现堆</span></span><br><span class="line">        PriorityQueue&lt;<span class="keyword">int</span>[]&gt; pq = <span class="keyword">new</span> PriorityQueue&lt;&gt;(<span class="keyword">new</span> Comparator&lt;<span class="keyword">int</span>[]&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">compare</span><span class="params">(<span class="keyword">int</span>[] m, <span class="keyword">int</span>[] n)</span> </span>&#123;</span><br><span class="line">                <span class="keyword">return</span> m[<span class="number">1</span>] - n[<span class="number">1</span>];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 维护k大小的堆</span></span><br><span class="line">        <span class="keyword">for</span> (Integer num: map.keySet()) &#123;</span><br><span class="line">            <span class="keyword">int</span> n = num, count = map.get(num);</span><br><span class="line">            <span class="keyword">if</span> (pq.size() == k) &#123;</span><br><span class="line">                <span class="keyword">if</span> (pq.peek()[<span class="number">1</span>] &lt; count) &#123;</span><br><span class="line">                    pq.poll();</span><br><span class="line">                    pq.offer(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;n, count&#125;);</span><br><span class="line">                &#125; </span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                pq.offer(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;n, count&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span>[] res = <span class="keyword">new</span> <span class="keyword">int</span>[k];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; k; i++) &#123;</span><br><span class="line">            res[i] = pq.poll()[<span class="number">0</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> res;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(nlogk)$ 统计频次的时间复杂度为$n$，维护堆的时间复杂度为$logk$<br>空间复杂度为$O(n)$ 哈希表$O(n)$ 堆$O(k)$</p></div><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://leetcode-cn.com/problems/top-k-frequent-elements/solution/qian-k-ge-gao-pin-yuan-su-by-leetcode-solution/">前 K 个高频元素</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法汇总整理</title>
      <link href="post/7a42/"/>
      <url>post/7a42/</url>
      
        <content type="html"><![CDATA[<h2 id="LeetCode"><a href="#LeetCode" class="headerlink" title="LeetCode"></a>LeetCode</h2><ul><li><a href="https://blog.shenshilei.site/post/7240/">LeetCode-组合(每日一题)</a></li><li><a href="https://blog.shenshilei.site/post/aeeb/">LeetCode-前K个高频元素(每日一题)</a></li><li><a href="https://blog.shenshilei.site/post/651a/">LeetCode-二叉树的所有路径(每日一题)</a></li><li><a href="https://blog.shenshilei.site/post/71ac/">LeetCode-N皇后(每日一题)</a></li><li><a href="https://blog.shenshilei.site/post/3f2b/">LeetCode-表示数值的字符串(每日一题)</a></li><li><a href="https://blog.shenshilei.site/post/4c71/">LeetCode-预测赢家(每日一题)</a></li><li><a href="https://blog.shenshilei.site/post/dea6/">LeetCode-钥匙和房间(每日一题)</a></li><li><a href="https://blog.shenshilei.site/post/7ee8/">LeetCode-重复的子字符串(每日一题)</a></li><li><a href="https://blog.shenshilei.site/post/91d8/">LeetCode-数字范围按位与(每日一题)</a></li><li><a href="https://blog.shenshilei.site/post/b550/">LeetCode-24点游戏(每日一题)</a></li><li><a href="https://blog.shenshilei.site/post/3b3c/">LeetCode-二叉树的最小深度(每日一题)</a></li><li><a href="https://blog.shenshilei.site/post/9005/">LeetCode-扫雷游戏(每日一题)</a></li><li><a href="https://blog.shenshilei.site/post/622f/">LeetCode-回文子串(每日一题)</a></li><li><a href="https://blog.shenshilei.site/post/9709/">LeetCode-动态规划</a></li><li><a href="https://blog.shenshilei.site/post/9ab8/">LeetCode-两数之和</a></li></ul><h2 id="剑指Offer"><a href="#剑指Offer" class="headerlink" title="剑指Offer"></a>剑指Offer</h2><ul><li><a href="https://blog.shenshilei.site/post/c964/">剑指Offer-整数中1出现的次数(从1到n整数中1出现的次数)</a></li><li><a href="https://blog.shenshilei.site/post/e238/">剑指Offer-二维数组的查找</a></li><li><a href="https://blog.shenshilei.site/post/e1b0/">剑指Offer-二叉树</a></li><li><a href="https://blog.shenshilei.site/post/94c0/">剑指Offer-快速幂</a></li><li><a href="https://blog.shenshilei.site/post/390/">剑指Offer-动态规划</a></li><li><a href="https://blog.shenshilei.site/post/f6d6/">剑指Offer-不用加减乘除做加法</a></li><li><a href="https://blog.shenshilei.site/post/5a20/">剑指Offer-构建乘积数组</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-二叉树的所有路径(每日一题)</title>
      <link href="post/651a/"/>
      <url>post/651a/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>给定一个二叉树，返回所有从根节点到叶子节点的路径。 </p><p>说明: 叶子节点是指没有子节点的节点。</p></blockquote><div class="note warning no-icon flat"><p>示例:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">输入:</span><br><span class="line"></span><br><span class="line">   1</span><br><span class="line"> &#x2F;   \</span><br><span class="line">2     3</span><br><span class="line"> \</span><br><span class="line">  5</span><br><span class="line"></span><br><span class="line">输出: [&quot;1-&gt;2-&gt;5&quot;, &quot;1-&gt;3&quot;]</span><br></pre></td></tr></table></figure></p></div><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><h3 id="1-DFS"><a href="#1-DFS" class="headerlink" title="1. DFS"></a>1. DFS</h3><p>思路：根据官方题解写出。当遇到叶节点时，将字符串添加到结果中；否则对左右子节点进行深度优先搜索（每一个节点都传入一个新生成的字符串👀）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; ans;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;String&gt; <span class="title">binaryTreePaths</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        ans = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>) <span class="keyword">return</span> ans;</span><br><span class="line">        dfs(root, <span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(TreeNode node, String str)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 下面没有对左右节点是否为空的判断，需要在这里判断。</span></span><br><span class="line">        <span class="keyword">if</span> (node != <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="comment">// 添加节点到字符串</span></span><br><span class="line">            StringBuilder sb = <span class="keyword">new</span> StringBuilder(str);</span><br><span class="line">            sb.append(Integer.toString(node.val));</span><br><span class="line">            <span class="comment">// 遇到叶节点</span></span><br><span class="line">            <span class="keyword">if</span> (node.left == <span class="keyword">null</span> &amp;&amp; node.right == <span class="keyword">null</span>) &#123;</span><br><span class="line">                ans.add(sb.toString());</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                sb.append(<span class="string">&quot;-&gt;&quot;</span>);</span><br><span class="line">                <span class="comment">// 左节点</span></span><br><span class="line">                dfs(node.left, sb.toString());</span><br><span class="line">                <span class="comment">// 右节点</span></span><br><span class="line">                dfs(node.right, sb.toString());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(n^2)$ DFS会对n个节点进行一次访问，每次访问时对字符串进行拷贝构造，时间代价为$O(n)$，一共为$O(n^2)$<br>空间复杂度为$O(n^2)$ 递归栈的层数+字符串占用的变量</p></div><h3 id="2-DFS-回溯"><a href="#2-DFS-回溯" class="headerlink" title="2. DFS+回溯"></a>2. DFS+回溯</h3><p>思路：可能是昨天N皇后的后遗症😭，我一拿到题的思路就是深度优先搜索+回溯。使用一个path栈来储存一条路径，当到达叶节点时就将path添加到结果中；否则向左右子节点搜索，走完后回退。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> List&lt;String&gt; ans;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;String&gt; <span class="title">binaryTreePaths</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        ans = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>) <span class="keyword">return</span> ans;</span><br><span class="line">        Stack&lt;Integer&gt; path = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        dfs(root, path);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(TreeNode node, Stack&lt;Integer&gt; path)</span> </span>&#123;</span><br><span class="line">        path.push(node.val);</span><br><span class="line">        <span class="keyword">if</span> (node.left == <span class="keyword">null</span> &amp;&amp; node.right == <span class="keyword">null</span>) &#123;</span><br><span class="line">            StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; path.size() - <span class="number">1</span>; i++) &#123;</span><br><span class="line">                sb.append(path.get(i) + <span class="string">&quot;-&gt;&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            sb.append(path.get(path.size() - <span class="number">1</span>));</span><br><span class="line">            ans.add(sb.toString());</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (node.left != <span class="keyword">null</span>) &#123;</span><br><span class="line">                dfs(node.left, path);</span><br><span class="line">                <span class="comment">// 退回</span></span><br><span class="line">                path.pop();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (node.right != <span class="keyword">null</span>) &#123;</span><br><span class="line">                dfs(node.right, path);</span><br><span class="line">                <span class="comment">// 退回</span></span><br><span class="line">                path.pop();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>我这种方法减少了新建字符串缓存流和字符串的操作，但是最后添加路径需要使用循环应该是导致时间较慢的原因</strong></p><div class="note info no-icon flat"><p>时间复杂度为$O(n^2)$ DFS会对n个节点进行一次访问，每次访问时对字符串进行拷贝构造，时间代价为$O(n)$，一共为$O(n^2)$<br>空间复杂度为$O(n)$ 递归栈的层数以及栈的大小</p></div><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://leetcode-cn.com/problems/binary-tree-paths/solution/er-cha-shu-de-suo-you-lu-jing-by-leetcode-solution/">二叉树的所有路径</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-N皇后(每日一题)</title>
      <link href="post/71ac/"/>
      <url>post/71ac/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>n 皇后问题研究的是如何将 n 个皇后放置在 n×n 的棋盘上，并且使皇后彼此之间不能相互攻击。</p></blockquote><div class="note warning no-icon flat"><p>示例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">输入：4</span><br><span class="line">输出：[</span><br><span class="line"> [&quot;.Q..&quot;,  &#x2F;&#x2F; 解法 1</span><br><span class="line">  &quot;...Q&quot;,</span><br><span class="line">  &quot;Q...&quot;,</span><br><span class="line">  &quot;..Q.&quot;],</span><br><span class="line"></span><br><span class="line"> [&quot;..Q.&quot;,  &#x2F;&#x2F; 解法 2</span><br><span class="line">  &quot;Q...&quot;,</span><br><span class="line">  &quot;...Q&quot;,</span><br><span class="line">  &quot;.Q..&quot;]</span><br><span class="line">]</span><br><span class="line">解释: 4 皇后问题存在两个不同的解法。</span><br></pre></td></tr></table></figure></p></div><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><h3 id="1-回溯法"><a href="#1-回溯法" class="headerlink" title="1. 回溯法"></a>1. 回溯法</h3><p>思路：回溯算法是一种遍历算法，以<strong>深度优先搜索</strong>的方式尝试所有可能性。回溯算法是<strong>有方向性地</strong>搜索，区别于多层循环实现的暴力法。</p><div class="note primary flat"><p>回溯算法的思想是：不断尝试，直到不能尝试为止，回退到上一步，继续尝试。</p><p>例如：4皇后的递归树如下</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/347.jpg" alt=""></p><p>这里搜索的过程中包含了<strong>剪枝</strong>的思想，依据是N皇后的摆放规则：</p><ul><li>不在同一行</li><li>不在同一列</li><li>不在同一主对角线</li><li>不在同一副对角线</li></ul><p>我们可以使用数组来记住对应的占用。我们一行一行的摆放皇后的位置，所以可以使用三个数组分别保存列占用，主对角线占用以及副对角线占用。</p><p>主对角线</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/348.jpg" alt=""></p><p>主对角线上的列数和行数之差为一常数。<strong>为了将负值放在数组中，需要将对应的数字都向右平移(n - 1)，这里n=3</strong></p><p>副对角线</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/349.jpg" alt=""></p><p>副对角线上的列数与行数之和为一常数。</p></div><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 设置为成员变量，减少参数传递</span></span><br><span class="line">    <span class="comment">// 设置数组保存皇后的占位</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span>[] column;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span>[] dialog1;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">boolean</span>[] dialog2;</span><br><span class="line">    <span class="comment">// 结果</span></span><br><span class="line">    <span class="keyword">private</span> List&lt;List&lt;String&gt;&gt; ans;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> List&lt;List&lt;String&gt;&gt; solveNQueens(<span class="keyword">int</span> n) &#123;</span><br><span class="line">        ans = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (n &lt;= <span class="number">0</span>) <span class="keyword">return</span> ans;</span><br><span class="line">        column = <span class="keyword">new</span> <span class="keyword">boolean</span>[n];</span><br><span class="line">        dialog1 = <span class="keyword">new</span> <span class="keyword">boolean</span>[<span class="number">2</span> * n - <span class="number">1</span>];</span><br><span class="line">        dialog2 = <span class="keyword">new</span> <span class="keyword">boolean</span>[<span class="number">2</span> * n - <span class="number">1</span>];</span><br><span class="line">        <span class="comment">// path存放一个满足条件的结果</span></span><br><span class="line">        Stack&lt;Integer&gt; path = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">        <span class="comment">// 深度优先搜索</span></span><br><span class="line">        dfs(path, <span class="number">0</span>, n);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(Stack&lt;Integer&gt; path, <span class="keyword">int</span> row, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 如果row == n，说明前n-1行都填完了，此时path中的是一个满足条件的结果</span></span><br><span class="line">        <span class="comment">// 保存结果</span></span><br><span class="line">        <span class="keyword">if</span> (row == n) &#123;</span><br><span class="line">            List&lt;String&gt; result = convert2Res(path, n);</span><br><span class="line">            ans.add(result);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 否则在当前行中一个位置一个位置摆放</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> col = <span class="number">0</span>; col &lt; n; col++) &#123;</span><br><span class="line">            <span class="comment">// 如果对应要求的位置没有被占用，放入皇后</span></span><br><span class="line">            <span class="keyword">if</span> (!column[col] &amp;&amp; !dialog1[col - row + n - <span class="number">1</span>] &amp;&amp; !dialog2[col + row]) &#123;</span><br><span class="line">                path.push(col);</span><br><span class="line">                column[col] = <span class="keyword">true</span>;</span><br><span class="line">                dialog1[col - row + n - <span class="number">1</span>] = <span class="keyword">true</span>;</span><br><span class="line">                dialog2[col + row] = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 去下一行摆放</span></span><br><span class="line">                dfs(path, row + <span class="number">1</span>, n);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 摆放失败需要将当前步退后</span></span><br><span class="line">                path.pop();</span><br><span class="line">                column[col] = <span class="keyword">false</span>;</span><br><span class="line">                dialog1[col - row + n - <span class="number">1</span>] = <span class="keyword">false</span>;</span><br><span class="line">                dialog2[col + row] = <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> List&lt;String&gt; <span class="title">convert2Res</span><span class="params">(Stack&lt;Integer&gt; path, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        List&lt;String&gt; board = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (Integer num: path) &#123;</span><br><span class="line">            StringBuilder sb = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            sb.append(<span class="string">&quot;.&quot;</span>.repeat(n));</span><br><span class="line">            sb.replace(num, num + <span class="number">1</span>, <span class="string">&quot;Q&quot;</span>);</span><br><span class="line">            board.add(sb.toString());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> board;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(n!)$ 皇后依次有n, n - 1, n - 2, …, 1列可以选择<br>空间复杂度为$O(n)$ 储存占位的空间大小为n以及递归栈的层数</p></div><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://leetcode-cn.com/problems/n-queens/solution/nhuang-hou-by-leetcode-solution/">N皇后</a></li><li><a href="https://leetcode-cn.com/problems/n-queens/solution/gen-ju-di-46-ti-quan-pai-lie-de-hui-su-suan-fa-si-/">回溯算法（转换成全排列问题 + 剪枝）- 题解后有相关问题</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-表示数值的字符串(每日一题)</title>
      <link href="post/3f2b/"/>
      <url>post/3f2b/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>请实现一个函数用来判断字符串是否表示数值（包括整数和小数）。例如，字符串”+100”、”5e2”、”-123”、”3.1416”、”-1E-16”、”0123”都表示数值，但”12e”、”1a3.14”、”1.2.3”、”+-5”及”12e+5.4”都不是。</p></blockquote><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><h3 id="1-正则表达式"><a href="#1-正则表达式" class="headerlink" title="1. 正则表达式"></a>1. 正则表达式</h3><p>思路：一开始在剑指Offer上做这道题的时候使用正则表达式进行匹配。返回字符串是否能匹配正则表达式的结果。</p><ul><li>^ 匹配字符串开头(在方括号中使用表示‘非’)</li><li>$ 匹配字符串结尾</li><li>[] 可以有的结果</li><li>() 分组</li><li>\d 匹配数字</li><li>. 匹配任意字符(除了\n)</li><li>* 0个或多个</li><li>? 0个或一个</li><li>+ 一个或多个</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.regex.Pattern;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isNumber</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        String pattern = <span class="string">&quot;^[\\+\\-]?(\\d+(\\.\\d*)?|\\.\\d+)([eE][\\+\\-]?\\d+)?$&quot;</span>;</span><br><span class="line">        <span class="keyword">return</span> Pattern.matches(pattern, s.trim());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong><code>(\\d+(\\.\\d*)?|\\.\\d+)</code>用来匹配小数点前需要有数字以及小数点后需要有数字的情况，即匹配3.或者.1而防止仅有一个.的情况出现。</strong></p><h3 id="2-确定有限状态自动机"><a href="#2-确定有限状态自动机" class="headerlink" title="2. 确定有限状态自动机"></a>2. 确定有限状态自动机</h3><p>确定优先状态自动机是一种计算模型。它包含一系列状态，这些状态中：</p><ul><li>有一个特殊状态，称为<strong>初始状态</strong></li><li>还有一系列状态称为<strong>接受状态</strong></li></ul><p>起初，这个自动机处于<strong>初始状态</strong>。随后，按顺序读取每一个字符，根据当前状态和读取的字符，按照<strong>转移规则</strong>决定是否转移到下一个状态。整个字符串全部读完，此时自动机处于某个<strong>接收状态</strong>，判断字符串被接受，否则被拒绝。</p><p>转移过程中如果违反了转移规则，那么也判断字符串被拒绝。</p><p>它正是实现<strong>正则表达式</strong>的基础。</p><p>我们可以通过设置一系列标记来规定如何转移。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isNumber</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// null或者空字符串返回false</span></span><br><span class="line">        <span class="keyword">if</span> (s == <span class="keyword">null</span> || s.length() == <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="comment">// 设置标记</span></span><br><span class="line">        <span class="keyword">boolean</span> isNum = <span class="keyword">false</span>, isDot = <span class="keyword">false</span>, iseOrE = <span class="keyword">false</span>;</span><br><span class="line">        <span class="comment">// 去除首尾空格</span></span><br><span class="line">        String str = s.trim();</span><br><span class="line">        <span class="comment">// 遍历字符串</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; str.length(); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (str.charAt(i) &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; str.charAt(i) &lt;= <span class="string">&#x27;9&#x27;</span>) &#123;</span><br><span class="line">                <span class="comment">// 遇到数字，将isNum置为true</span></span><br><span class="line">                isNum = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (str.charAt(i) == <span class="string">&#x27;.&#x27;</span>) &#123;</span><br><span class="line">                <span class="comment">// 遇到小数点，如果之前有小数点或者e，返回false</span></span><br><span class="line">                <span class="keyword">if</span> (isDot || iseOrE) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                isDot = <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (str.charAt(i) == <span class="string">&#x27;e&#x27;</span> || str.charAt(i) == <span class="string">&#x27;E&#x27;</span>) &#123;</span><br><span class="line">                <span class="comment">// 遇到e，如果之前有e或者没有数字，返回false</span></span><br><span class="line">                <span class="keyword">if</span> (iseOrE || !isNum) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">                iseOrE = <span class="keyword">true</span>;</span><br><span class="line">                <span class="comment">// e后面也需要跟上数字，防止3e这种情况出现，将isNum置为false</span></span><br><span class="line">                isNum = <span class="keyword">false</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (str.charAt(i) == <span class="string">&#x27;-&#x27;</span> || str.charAt(i) == <span class="string">&#x27;+&#x27;</span>) &#123;</span><br><span class="line">                <span class="comment">// +-只能出现在第一位以及e后面一位</span></span><br><span class="line">                <span class="keyword">if</span> (i == <span class="number">0</span> || str.charAt(i - <span class="number">1</span>) == <span class="string">&#x27;e&#x27;</span> || str.charAt(i - <span class="number">1</span>) == <span class="string">&#x27;E&#x27;</span>) <span class="keyword">continue</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="comment">// 其它情况直接终止转移</span></span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 返回isNum的结果</span></span><br><span class="line">        <span class="keyword">return</span> isNum;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(n)$ 字符串长度<br>空间复杂度为$O(1)$ 使用了常数大小的额外空间</p></div><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://leetcode-cn.com/problems/biao-shi-shu-zhi-de-zi-fu-chuan-lcof/solution/biao-shi-shu-zhi-de-zi-fu-chuan-by-leetcode-soluti/">表示数值的字符串</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-预测赢家(每日一题)</title>
      <link href="post/4c71/"/>
      <url>post/4c71/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>给定一个表示分数的非负整数数组。 玩家 1 从数组任意一端拿取一个分数，随后玩家 2 继续从剩余数组任意一端拿取分数，然后玩家 1 拿，…… 。每次一个玩家只能拿取一个分数，分数被拿取之后不再可取。直到没有剩余分数可取时游戏结束。最终获得分数总和最多的玩家获胜。</p><p>给定一个表示分数的数组，预测玩家1是否会成为赢家。你可以假设每个玩家的玩法都会使他的分数最大化。</p></blockquote><div class="note warning no-icon flat"><p>示例 1：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：[1, 5, 2]</span><br><span class="line">输出：False</span><br></pre></td></tr></table></figure><br>解释：一开始，玩家1可以从1和2中进行选择。<br>如果他选择 2（或者 1 ），那么玩家 2 可以从 1（或者 2 ）和 5 中进行选择。如果玩家 2 选择了 5 ，那么玩家 1 则只剩下 1（或者 2 ）可选。<br>所以，玩家 1 的最终分数为 1 + 2 = 3，而玩家 2 为 5 。<br>因此，玩家 1 永远不会成为赢家，返回 False 。<br>示例 2：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：[1, 5, 233, 7]</span><br><span class="line">输出：True</span><br></pre></td></tr></table></figure><br>解释：玩家 1 一开始选择 1 。然后玩家 2 必须从 5 和 7 中进行选择。无论玩家 2 选择了哪个，玩家 1 都可以选择 233 。<br>     最终，玩家 1（234 分）比玩家 2（12 分）获得更多的分数，所以返回 True，表示玩家 1 可以成为赢家。</p></div><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><h3 id="1-递归法"><a href="#1-递归法" class="headerlink" title="1. 递归法"></a>1. 递归法</h3><p>思路：我们可以选择左边或者右边的元素，这样选择完之后就相当于是一个同样的子问题了。重点是递归的终止条件和应该返回什么。</p><p>当数组大小为1时，没有选择了，此时递归终止。</p><p>返回的应该是a与b相差的金额，即选择两个结果中的最大值进行返回(让a拿的多)。</p><p>最终判断得到的值是否大于0.</p><p><strong>递归需要关系的是当前函数应该返回什么以及终止条件，而不是重复的思考整个拿取的过程🚗</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">PredictTheWinner</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (nums == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = nums.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> ans = isWin(nums, left, right);</span><br><span class="line">        <span class="keyword">return</span> ans &gt;= <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">isWin</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (left == right) &#123;</span><br><span class="line">            <span class="keyword">return</span> nums[left];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 选择左边</span></span><br><span class="line">        <span class="keyword">int</span> leftAns = nums[left] - isWin(nums, left + <span class="number">1</span>, right);</span><br><span class="line">        <span class="comment">// 选择右边</span></span><br><span class="line">        <span class="keyword">int</span> rightAns = nums[right] - isWin(nums, left, right - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> Math.max(leftAns, rightAns);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(2^n)$ 每个值的选择有两种情况<br>空间复杂度为$O(n)$ 递归栈空间为数组大小</p></div><h3 id="2-记忆化递归"><a href="#2-记忆化递归" class="headerlink" title="2. 记忆化递归"></a>2. 记忆化递归</h3><p>思路：例如a拿7 b拿1和a拿1 b拿7剩下的都是5和233，可以用一个数组或者哈希表来存储结果，如果遇到相同的就不需要进行重复运算了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">// flag[i][j]表示左端为i, 右端为j时，a赢得分数</span></span><br><span class="line">    <span class="keyword">int</span>[][] flag;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">PredictTheWinner</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (nums == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">int</span> len = nums.length;</span><br><span class="line">        flag = <span class="keyword">new</span> <span class="keyword">int</span>[len][len];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; len; j++) &#123;</span><br><span class="line">                flag[i][j] = -<span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> left = <span class="number">0</span>, right = len - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> ans = isWin(nums, left, right);</span><br><span class="line">        <span class="keyword">return</span> ans &gt;= <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">isWin</span><span class="params">(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> left, <span class="keyword">int</span> right)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (flag[left][right] != -<span class="number">1</span>) <span class="keyword">return</span> flag[left][right];</span><br><span class="line">        <span class="keyword">if</span> (left == right) &#123;</span><br><span class="line">            flag[left][right] = nums[left];</span><br><span class="line">            <span class="keyword">return</span> flag[left][right];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> leftAns = nums[left] - isWin(nums, left + <span class="number">1</span>, right);</span><br><span class="line">        <span class="keyword">int</span> rightAns = nums[right] - isWin(nums, left, right - <span class="number">1</span>);</span><br><span class="line">        flag[left][right] = Math.max(leftAns, rightAns);</span><br><span class="line">        <span class="keyword">return</span> flag[left][right];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(2^n)$ 每个值的选择有两种情况<br>空间复杂度为$O(n^2)$ 使用额外的二维数组保存数据</p></div><h3 id="3-动态规划"><a href="#3-动态规划" class="headerlink" title="3. 动态规划"></a>3. 动态规划</h3><p>思路：又迎来了老生常谈的动态规划😂，还是要多去体会动态规划的思想才能更好的掌握啊。其实想明白了递归的思路就大概清楚动态规划应该怎么写了。</p><p>状态划分：a在n大小的数组赢得的分数可以由子问题n-1大小数组结果得来。<br>状态确定：$dp[i][j]$表示在左端为i，右端为j时的数组中a与b相差的分数。<br>状态转移：$dp[i][j] = max(nums[i] - dp[i+1][j], nums[j] - dp[i][j-1])$<br>确定边界：$i == j$   $dp[i][j] = nums[i]$ </p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">PredictTheWinner</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (nums == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">int</span> len = nums.length;</span><br><span class="line">        <span class="keyword">int</span>[][] dp = <span class="keyword">new</span> <span class="keyword">int</span>[len][len];</span><br><span class="line">        <span class="comment">// 边界条件</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; len; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (i == j) dp[i][j] = nums[i];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = len - <span class="number">2</span>; i &gt;= <span class="number">0</span>; i--) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; len; j++) &#123;</span><br><span class="line">                dp[i][j] = Math.max(nums[i] - dp[i + <span class="number">1</span>][j], nums[j] - dp[i][j - <span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> dp[<span class="number">0</span>][len - <span class="number">1</span>] &gt;= <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(n^2)$ 使用了双重循环<br>空间复杂度为$O(n^2)$ 使用额外的二维数组保存数据</p></div><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://leetcode-cn.com/problems/predict-the-winner/solution/yu-ce-ying-jia-by-leetcode-solution/">预测赢家</a></li><li><a href="https://leetcode-cn.com/problems/predict-the-winner/solution/shou-hua-tu-jie-san-chong-xie-fa-di-gui-ji-yi-hua-/">手画图解」三种写法：递归、记忆化递归、动态规划</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-钥匙和房间(每日一题)</title>
      <link href="post/dea6/"/>
      <url>post/dea6/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>有 N 个房间，开始时你位于 0 号房间。每个房间有不同的号码：0，1，2，…，N-1，并且房间里可能有一些钥匙能使你进入下一个房间。</p><p>在形式上，对于每个房间 i 都有一个钥匙列表 rooms[i]，每个钥匙 rooms[i][j] 由 [0,1，…，N-1] 中的一个整数表示，其中 N = rooms.length。 钥匙 rooms[i][j] = v 可以打开编号为 v 的房间。</p><p>最初，除 0 号房间外的其余所有房间都被锁住。</p><p>你可以自由地在房间之间来回走动。</p><p>如果能进入每个房间返回 true，否则返回 false。</p></blockquote><div class="note warning no-icon flat"><p>示例 1：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: [[1],[2],[3],[]]</span><br><span class="line">输出: true</span><br></pre></td></tr></table></figure><br>解释:<br>我们从 0 号房间开始，拿到钥匙 1。<br>之后我们去 1 号房间，拿到钥匙 2。<br>然后我们去 2 号房间，拿到钥匙 3。<br>最后我们去了 3 号房间。<br>由于我们能够进入每个房间，我们返回 true。</p><p>示例 2：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：[[1,3],[3,0,1],[2],[0]]</span><br><span class="line">输出：false</span><br></pre></td></tr></table></figure><br>解释：我们不能进入 2 号房间。</p></div><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>思路：本质上这个题就是把你放进0号房间，考察你是否能走完全部房间。这种提供了一个入口，考察是否能够走完的这类题目，都可以用DFS或BFS来搜索遍历(就如同之前做过的扫雷题目。)</p><h3 id="1-深度优先搜索"><a href="#1-深度优先搜索" class="headerlink" title="1. 深度优先搜索"></a>1. 深度优先搜索</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 对应的房间是否已经去过</span></span><br><span class="line">    <span class="keyword">boolean</span>[] flag;</span><br><span class="line">    <span class="keyword">int</span> count;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">canVisitAllRooms</span><span class="params">(List&lt;List&lt;Integer&gt;&gt; rooms)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (rooms == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">int</span> len = rooms.size();</span><br><span class="line">        flag = <span class="keyword">new</span> <span class="keyword">boolean</span>[len];</span><br><span class="line">        <span class="comment">// 从0号房间开始</span></span><br><span class="line">        dfs(rooms, <span class="number">0</span>);</span><br><span class="line">        <span class="comment">// 返回去过的房间数是否与全部房间数相等的结果</span></span><br><span class="line">        <span class="keyword">return</span> count == len;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(List&lt;List&lt;Integer&gt;&gt; rooms, <span class="keyword">int</span> num)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 进入房间</span></span><br><span class="line">        flag[num] = <span class="keyword">true</span>;</span><br><span class="line">        count++;</span><br><span class="line">        <span class="comment">// 在对应房间找钥匙</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i: rooms.get(num)) &#123;</span><br><span class="line">            <span class="comment">// 进入没进过的房间</span></span><br><span class="line">            <span class="keyword">if</span> (!flag[i]) &#123;</span><br><span class="line">                dfs(rooms, i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(n<em>m)$ 房屋总数</em>房间钥匙总数<br>空间复杂度为$O(n)$ 递归栈空间</p></div><h3 id="2-广度优先搜素"><a href="#2-广度优先搜素" class="headerlink" title="2. 广度优先搜素"></a>2. 广度优先搜素</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Queue;</span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">canVisitAllRooms</span><span class="params">(List&lt;List&lt;Integer&gt;&gt; rooms)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (rooms == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">int</span> len = rooms.size();</span><br><span class="line">        <span class="comment">// 记录是否进入过房间</span></span><br><span class="line">        <span class="keyword">boolean</span>[] flag = <span class="keyword">new</span> <span class="keyword">boolean</span>[len];</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 创建队列，保存待进入的房间</span></span><br><span class="line">        Queue&lt;List&lt;Integer&gt;&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">        <span class="comment">// 待进入0号房间</span></span><br><span class="line">        queue.offer(rooms.get(<span class="number">0</span>));</span><br><span class="line">        count++;</span><br><span class="line">        flag[<span class="number">0</span>] = <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">while</span>(!queue.isEmpty()) &#123;</span><br><span class="line">            <span class="comment">// 进入房间</span></span><br><span class="line">            List&lt;Integer&gt; room = queue.poll();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i: room) &#123;</span><br><span class="line">                <span class="keyword">if</span> (!flag[i]) &#123;</span><br><span class="line">                    <span class="comment">// 添加房间进入队列</span></span><br><span class="line">                    queue.offer(rooms.get(i));</span><br><span class="line">                    flag[i] = <span class="keyword">true</span>;</span><br><span class="line">                    count++;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count == len;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(n<em>m)$ 房屋总数</em>房间钥匙总数<br>空间复杂度为$O(n)$ 队列空间大小最大为房间总数</p></div><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://leetcode-cn.com/problems/keys-and-rooms/solution/yao-chi-he-fang-jian-by-leetcode-solution/">钥匙和房间</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-重复的子字符串(每日一题)</title>
      <link href="post/7ee8/"/>
      <url>post/7ee8/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>给定一个非空的字符串，判断它是否可以由它的一个子串重复多次构成。给定的字符串只含有小写英文字母，并且长度不超过10000。</p></blockquote><div class="note warning no-icon flat"><p>示例 1:</p><p>输入: “abab”</p><p>输出: True</p><p>解释: 可由子字符串 “ab” 重复两次构成。<br>示例 2:</p><p>输入: “aba”</p><p>输出: False<br>示例 3:</p><p>输入: “abcabcabcabc”</p><p>输出: True</p><p>解释: 可由子字符串 “abc” 重复四次构成。 (或者子字符串 “abcabc” 重复两次构成。)</p></div><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><h3 id="1-枚举"><a href="#1-枚举" class="headerlink" title="1. 枚举"></a>1. 枚举</h3><p>思路：如果满足条件的子字符串长度为$n’$，那么字符串长度$n$一定是$n’$的倍数。且对于索引大于$n’$的字符，他们一定相差一个周期$n’$，即$s[i] == s[i - n’] == s[i - 2 * n’]$</p><p>步骤是不断增加子字符串的长度，如果长度的倍数恰好为字符串长度，进行周期性判断。(每个长度都要判断，不能判断错误一次直接返回false，需要用flag标记)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">repeatedSubstringPattern</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (s.trim().equals(<span class="string">&quot;&quot;</span>)) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">int</span> len = s.length();</span><br><span class="line">        <span class="comment">// i 为子字符串的长度</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= len / <span class="number">2</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (len % i == <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">boolean</span> match = <span class="keyword">true</span>;</span><br><span class="line">                <span class="comment">// 检查对应字符是否相等</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> j = i; j &lt; len; j++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (s.charAt(j) != s.charAt(j - i)) &#123;</span><br><span class="line">                        match = <span class="keyword">false</span>;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (match) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(n^2)$ 使用了双重for循环。<br>空间复杂度为$O(1)$ 使用了常数大小的额外空间。</p></div><h3 id="2-双倍字符串"><a href="#2-双倍字符串" class="headerlink" title="2. 双倍字符串"></a>2. 双倍字符串</h3><p>思路：将字符串和自己相加，从这个双倍字符串的第一位开始匹配字符串本身。如果一个字符串不是由重复字符串构成的，那么匹配到的位置的索引将会是原字符串的长度；而该字符串是由重复字符串构成的，匹配到位置的索引一定小于原字符串长度。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/346.jpg" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">repeatedSubstringPattern</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (s + s).indexOf(s, <span class="number">1</span>) &lt; s.length();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>KMS还没学会的我可太菜了😭</p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://leetcode-cn.com/problems/repeated-substring-pattern/solution/zhong-fu-de-zi-zi-fu-chuan-by-leetcode-solution/">重复的子字符串</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-数字范围按位与(每日一题)</title>
      <link href="post/91d8/"/>
      <url>post/91d8/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>给定范围 [m, n]，其中 0 &lt;= m &lt;= n &lt;= 2147483647，返回此范围内所有数字的按位与（包含 m, n 两端点）。</p></blockquote><div class="note warning no-icon flat"><p>示例 1: </p><p>输入: [5,7]<br>输出: 4<br>示例 2:</p><p>输入: [0,1]<br>输出: 0</p></div><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><ol><li>位移</li></ol><p>思路：暴力法肯定不用考虑了，数字很大时一定会超时🤒。最开始的思路是将范围内的数字一位一位的做与运算，最后一想和暴力法区别不大。看了官方题解，学到了位移法。</p><p>可以发现，由于与运算的特性是有0则0，所以m, n范围内的数字相与就是这两个数字的最长公共前缀，然后在后面补上相应的0即可。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/344.jpg" alt=""></p><blockquote><p>8 12范围内按位与的结果为8</p></blockquote><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/345.jpg" alt=""></p><blockquote><p>4 12范围内按位与的结果为0</p></blockquote><p>步骤是这样的，判断m和n是否相等，如果不相等，m n均向右移一位，直到m n相等为止。记录下移动的位数，最终返回m左移移动的位数。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">rangeBitwiseAnd</span><span class="params">(<span class="keyword">int</span> m, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> shift = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (m != n) &#123;</span><br><span class="line">            m = m &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            n = n &gt;&gt; <span class="number">1</span>;</span><br><span class="line">            shift++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> m &lt;&lt; shift;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(logn)$ 因为$m &lt;= n$，所以取决于n的二进制数的位个数。<br>空间复杂度为$O(1)$ 使用了常数大小的额外空间。</p></div><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://leetcode-cn.com/problems/bitwise-and-of-numbers-range/solution/shu-zi-fan-wei-an-wei-yu-by-leetcode-solution/">数字范围按位与</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-24点游戏(每日一题)</title>
      <link href="post/b550/"/>
      <url>post/b550/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>你有 4 张写有 1 到 9 数字的牌。你需要判断是否能通过 *，/，+，-，(，) 的运算得到 24。</p><p>注意:</p><p>除法运算符 / 表示实数除法，而不是整数除法。例如 4 / (1 - 2/3) = 12 。<br>每个运算符对两个数进行运算。特别是我们不能用 - 作为一元运算符。例如，[1, 1, 1, 1] 作为输入时，表达式 -1 - 1 - 1 - 1 是不允许的。<br>你不能将数字连接在一起。例如，输入为 [1, 2, 1, 2] 时，不能写成 12 + 12 。</p></blockquote><div class="note warning no-icon flat"><p>示例 1:</p><p>输入: [4, 1, 8, 7]<br>输出: True<br>解释: (8-4) * (7-1) = 24<br>示例 2:</p><p>输入: [1, 2, 1, 2]<br>输出: False</p></div><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><h3 id="1-回溯"><a href="#1-回溯" class="headerlink" title="1. 回溯"></a>1. 回溯</h3><p>思路：这道题拿到手里我是一点想法都没有😑(太菜了)，直接看的官方题解。[其实这里也类似于DFS😮]</p><p>可以通过回溯的方法来遍历所有的不同可能性。具体做法是，使用一个列表储存所有数字，每次从列表中选出两个索引不同的数字，再选择一种运算操作，得到的数用来代替之前选的两个数，列表中的数字就减少1个。重复过程一直到列表只剩下一个数字，这个数字就是一种可能性结果。如果等于24，则可以通过运算得到24；如果所有可能结果都不等于24，则无法通过运算得到24。</p><p><strong>注意</strong></p><ul><li>除法运算为实数运算，不是整数除法，需要先转换为double类型。此时判断是否等于24需要考虑到精度，这里误差小于$10^{-6}$即可认为相等。</li><li>加法和乘法都具有交换律，所以如果是这两种运算，可以不考虑选择元素的顺序，减小运算量。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TARGET = <span class="number">24</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">double</span> EPSILON = <span class="number">1e-6</span>;</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> ADD = <span class="number">0</span>, MULTIPLY = <span class="number">1</span>, SUBSTRACT = <span class="number">2</span>, DIVIDED = <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">judgePoint24</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 建立集合，将数组中元素转换为double类型添加到集合中</span></span><br><span class="line">        <span class="keyword">if</span> (nums == <span class="keyword">null</span> || nums.length == <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        List&lt;Double&gt; list = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">            list.add((<span class="keyword">double</span>) nums[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> solve(list);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">solve</span><span class="params">(List&lt;Double&gt; list)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// if (list.size() == 0) return false;</span></span><br><span class="line">        <span class="comment">// 只剩一个数字，判断是否等于24</span></span><br><span class="line">        <span class="keyword">if</span> (list.size() == <span class="number">1</span>) <span class="keyword">return</span> Math.abs(list.get(<span class="number">0</span>) - TARGET) &lt; EPSILON;</span><br><span class="line">        <span class="comment">// 选择两个数字，两个数字不能相同</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; list.size(); j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (i != j) &#123;</span><br><span class="line">                    <span class="comment">// 将集合中剩下的元素添加到新集合中</span></span><br><span class="line">                    List&lt;Double&gt; list2 = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> k = <span class="number">0</span>; k &lt; list.size(); k++) &#123;</span><br><span class="line">                        <span class="keyword">if</span> (k != i &amp;&amp; k != j) list2.add(list.get(k));</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="comment">// 分别对选择的两个数进行不同的运算操作</span></span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> method = <span class="number">0</span>; method &lt; <span class="number">4</span>; method++) &#123;</span><br><span class="line">                        <span class="comment">// 加法与乘法对顺序没有要求</span></span><br><span class="line">                        <span class="keyword">if</span> (method &lt; <span class="number">2</span> &amp;&amp; i &gt; j) <span class="keyword">continue</span>;</span><br><span class="line">                        <span class="keyword">if</span> (method == ADD) &#123;</span><br><span class="line">                            list2.add(list.get(i) + list.get(j));</span><br><span class="line">                        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (method == MULTIPLY) &#123;</span><br><span class="line">                            list2.add(list.get(i) * list.get(j));</span><br><span class="line">                        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (method == SUBSTRACT) &#123;</span><br><span class="line">                            list2.add(list.get(i) - list.get(j));</span><br><span class="line">                        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (method == DIVIDED) &#123;</span><br><span class="line">                            <span class="comment">// 除法对0的判断</span></span><br><span class="line">                            <span class="keyword">if</span> (Math.abs(list.get(j)) &lt; EPSILON) <span class="keyword">continue</span>;</span><br><span class="line">                            list2.add(list.get(i) / list.get(j));</span><br><span class="line">                        &#125;</span><br><span class="line">                        <span class="comment">// 对剩下的数组进行递归判断</span></span><br><span class="line">                        <span class="keyword">if</span> (solve(list2)) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">                        <span class="comment">// 删除最后一个元素</span></span><br><span class="line">                        list2.remove(list2.size() - <span class="number">1</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(1)$ 因为牌只有四张，其排列组合的个数是确定的，规模不会改变，每个排列执行的代码次数也是常数的。<br>空间复杂度为$O(1)$ 递归栈空间大小为牌的张数4</p></div><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://leetcode-cn.com/problems/24-game/solution/24-dian-you-xi-by-leetcode-solution/">24 点游戏</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-二叉树的最小深度(每日一题)</title>
      <link href="post/3b3c/"/>
      <url>post/3b3c/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>给定一个二叉树，找出其最小深度。</p><p>最小深度是从根节点到最近叶子节点的最短路径上的节点数量。</p><p>说明: 叶子节点是指没有子节点的节点。</p></blockquote><div class="note warning no-icon flat"><p>示例:</p><p>给定二叉树 [3,9,20,null,null,15,7]</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">  3</span><br><span class="line"> &#x2F; \</span><br><span class="line">9  20</span><br><span class="line">  &#x2F;  \</span><br><span class="line"> 15   7</span><br></pre></td></tr></table></figure><p>返回它的最小深度  2.</p></div><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p><strong>注意：一定要到达叶节点！</strong></p><h3 id="1-DFS"><a href="#1-DFS" class="headerlink" title="1. DFS"></a>1. DFS</h3><p>思路：使用深度优先搜索遍历树，递归返回最小的深度。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minDepth</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 到达叶节点</span></span><br><span class="line">        <span class="keyword">if</span> (root.left == <span class="keyword">null</span> &amp;&amp; root.right == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> depth = Integer.MAX_VALUE;</span><br><span class="line">        <span class="keyword">if</span> (root.left != <span class="keyword">null</span>) &#123;</span><br><span class="line">            depth = Math.min(minDepth(root.left), depth);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (root.right != <span class="keyword">null</span>) &#123;</span><br><span class="line">            depth = Math.min(minDepth(root.right), depth);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> depth + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(n)$ 树的节点数<br>空间复杂度为$O(H)$ 递归栈空间大小为树的深度，一般情况下$logn$，最坏为$N$</p></div><h3 id="2-BFS"><a href="#2-BFS" class="headerlink" title="2. BFS"></a>2. BFS</h3><p>思路：使用广度优先搜索遍历树，由于是一层一层进行遍历，这时如果发现叶节点则一定保证是最小深度，直接返回深度即可。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="keyword">import</span> java.util.Queue;</span><br><span class="line"> <span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minDepth</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        Queue&lt;TreeNode&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">        queue.offer(root);</span><br><span class="line">        <span class="comment">// 记录每层的节点总数</span></span><br><span class="line">        <span class="keyword">int</span> count;</span><br><span class="line">        TreeNode node;</span><br><span class="line">        <span class="keyword">int</span> depth = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (!queue.isEmpty()) &#123;</span><br><span class="line">            count = queue.size();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">                node = queue.poll();</span><br><span class="line">                <span class="comment">// 找到叶节点了</span></span><br><span class="line">                <span class="keyword">if</span> (node.left == <span class="keyword">null</span> &amp;&amp; node.right == <span class="keyword">null</span>) <span class="keyword">return</span> depth + <span class="number">1</span>;</span><br><span class="line">                <span class="comment">// 否则就添加子节点到队列</span></span><br><span class="line">                <span class="keyword">if</span> (node.left != <span class="keyword">null</span>) queue.offer(node.left);</span><br><span class="line">                <span class="keyword">if</span> (node.right != <span class="keyword">null</span>) queue.offer(node.right);</span><br><span class="line">            &#125;</span><br><span class="line">            depth++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> depth;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(n)$ 树的节点数<br>空间复杂度为$O(n)$ 队列空间大小为树的节点数，最坏为$n$</p></div><h3 id="3-不知道名字法。。"><a href="#3-不知道名字法。。" class="headerlink" title="3. 不知道名字法。。"></a>3. 不知道名字法。。</h3><p>思路：这是我一开始看到题目的思路，有点动态规划的味道🤔一个树的最小深度必然由其左右子树的最小深度得来，状态转移方程为$dp[i] = min(dp[left] + dp[right]) + 1$，所以我开始的代码是这样的</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minDepth</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> depthLeft = minDepth(root.left);</span><br><span class="line">        <span class="keyword">int</span> depthRight = minDepth(root.right);</span><br><span class="line">        <span class="keyword">return</span> Math.min(depthLeft, depthRight) + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果是没有考虑到这种情况，按照我上面的代码，1的右子树为null，返回的值为0，比左子树的深度1小，所以返回 0 + 1 = 1，而深度是必须要到达叶节点的，所以这种情况的正确值是2.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">  1</span><br><span class="line"> &#x2F;</span><br><span class="line">2</span><br></pre></td></tr></table></figure><p>然后我以为我的想法是错的😢，就使用DFS和BFS去做了。结果在评论中发现一个相同思路的！只要将这种情况拎出来单独判断即可~</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">minDepth</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> depthLeft = minDepth(root.left);</span><br><span class="line">        <span class="keyword">int</span> depthRight = minDepth(root.right);</span><br><span class="line">        <span class="comment">// 此种特殊情况，要去相对大的值返回</span></span><br><span class="line">        <span class="keyword">if</span> (root.left == <span class="keyword">null</span> || root.right == <span class="keyword">null</span>) <span class="keyword">return</span> Math.max(depthLeft, depthRight) + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">return</span> Math.min(depthLeft, depthRight) + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>和使用DFS的复杂度相同<br>时间复杂度为$O(n)$ 树的节点数<br>空间复杂度为$O(H)$ 递归栈空间大小为树的深度，一般情况下$logn$，最坏为$N$</p></div><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://leetcode-cn.com/problems/minimum-depth-of-binary-tree/solution/er-cha-shu-de-zui-xiao-shen-du-by-leetcode-solutio/">二叉树的最小深度</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-扫雷游戏(每日一题)</title>
      <link href="post/9005/"/>
      <url>post/9005/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>让我们一起来玩扫雷游戏！</p><p>给定一个代表游戏板的二维字符矩阵。 <strong>‘M’</strong> 代表一个<strong>未挖出</strong>的地雷，<strong>‘E’</strong> 代表一个<strong>未挖出</strong>的空方块，<strong>‘B’</strong> 代表没有相邻（上，下，左，右，和所有4个对角线）地雷的<strong>已挖出</strong>的空白方块，<strong>数字</strong>（’1’ 到 ‘8’）表示有多少地雷与这块<strong>已挖出</strong>的方块相邻，<strong>‘X’</strong> 则表示一个<strong>已挖出</strong>的地雷。</p><p>现在给出在所有未挖出的方块中（’M’或者’E’）的下一个点击位置（行和列索引），根据以下规则，返回相应位置被点击后对应的面板：</p><ol><li>如果一个地雷（’M’）被挖出，游戏就结束了- 把它改为 ‘X’。</li><li>如果一个没有相邻地雷的空方块（’E’）被挖出，修改它为（’B’），并且所有和其相邻的未挖出方块都应该被递归地揭露。</li><li>如果一个至少与一个地雷相邻的空方块（’E’）被挖出，修改它为数字（’1’到’8’），表示相邻地雷的数量。</li><li>如果在此次点击中，若无更多方块可被揭露，则返回面板。</li></ol></blockquote><div class="note warning no-icon flat"><p>例如：</p><p>输入: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[[&#39;E&#39;, &#39;E&#39;, &#39;E&#39;, &#39;E&#39;, &#39;E&#39;],</span><br><span class="line"> [&#39;E&#39;, &#39;E&#39;, &#39;M&#39;, &#39;E&#39;, &#39;E&#39;],</span><br><span class="line"> [&#39;E&#39;, &#39;E&#39;, &#39;E&#39;, &#39;E&#39;, &#39;E&#39;],</span><br><span class="line"> [&#39;E&#39;, &#39;E&#39;, &#39;E&#39;, &#39;E&#39;, &#39;E&#39;]]</span><br></pre></td></tr></table></figure><p>Click : [3,0]</p><p>输出: </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[[&#39;B&#39;, &#39;1&#39;, &#39;E&#39;, &#39;1&#39;, &#39;B&#39;],</span><br><span class="line"> [&#39;B&#39;, &#39;1&#39;, &#39;X&#39;, &#39;1&#39;, &#39;B&#39;],</span><br><span class="line"> [&#39;B&#39;, &#39;1&#39;, &#39;1&#39;, &#39;1&#39;, &#39;B&#39;],</span><br><span class="line"> [&#39;B&#39;, &#39;B&#39;, &#39;B&#39;, &#39;B&#39;, &#39;B&#39;]]</span><br></pre></td></tr></table></figure></div><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>思路：这道题的逻辑其实比较简单，模拟扫雷的逻辑就可以了，难就难在我一开始没想到用什么方式来遍历😥题还是刷少了，很喜欢官方题解里这句话——<strong>整体看来，一次点击过程会从一个位置出发，逐渐向外圈扩散，这就引导我们使用【搜索】的方法实现</strong>。</p><p>对每个方块，我们有下面两种情况：</p><ul><li>当前点击的是<strong>未挖出的地雷</strong>，修改为X即可</li><li>当前点击的是<strong>未挖出的空方块</strong>，我们需要对其周围的八个方块进行判断。如果有地雷，需要统计地雷个数，将当前方块修改为数字；否则修改为B</li></ul><p><strong>为了代码简洁，我们可以设置两个数组保存当前元素要移动的步数</strong></p><p>我们可以使用<strong>深度优先搜索(Depth First Search, DFS)</strong>或<strong>广度优先搜索(Board First Search, BFS)</strong>来进行遍历，注意重复搜索的情况。</p><h3 id="1-DFS"><a href="#1-DFS" class="headerlink" title="1. DFS"></a>1. DFS</h3><p>对于深度优先搜索来说，我们递归地进行元素遍历。而只要遍历的元素不是E，即不是未挖出的空方块，说明其状态被修改过，就不需要遍历了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[] directR = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>, -<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, <span class="number">1</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span>[] directC = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">char</span>[][] updateBoard(<span class="keyword">char</span>[][] board, <span class="keyword">int</span>[] click) &#123;</span><br><span class="line">        <span class="keyword">int</span> x = click[<span class="number">0</span>], y = click[<span class="number">1</span>];</span><br><span class="line">        <span class="keyword">if</span> (board[x][y] == <span class="string">&#x27;M&#x27;</span>) &#123;</span><br><span class="line">            board[x][y] = <span class="string">&#x27;X&#x27;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// dfs遍历修改</span></span><br><span class="line">            dfs(board, x, y);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> board;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">char</span>[][] board, <span class="keyword">int</span> r, <span class="keyword">int</span> c)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> tr, tc;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) &#123;</span><br><span class="line">            tr = r + directR[i];</span><br><span class="line">            tc = c + directC[i];</span><br><span class="line">            <span class="comment">// 注意超界的判断</span></span><br><span class="line">            <span class="keyword">if</span> (tr &lt; <span class="number">0</span> || tr &gt; board.length - <span class="number">1</span> || tc &lt; <span class="number">0</span> || tc &gt; board[<span class="number">0</span>].length - <span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">            <span class="keyword">if</span> (board[tr][tc] == <span class="string">&#x27;M&#x27;</span>) &#123;</span><br><span class="line">                count++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            board[r][c] = (<span class="keyword">char</span>) (count + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            board[r][c] = <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">            <span class="comment">// 递归判断周围八个元素</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) &#123;</span><br><span class="line">                tr = r + directR[i];</span><br><span class="line">                tc = c + directC[i];</span><br><span class="line">                <span class="comment">// 如果元素不为E，则不遍历</span></span><br><span class="line">                <span class="keyword">if</span> (tr &lt; <span class="number">0</span> || tr &gt; board.length - <span class="number">1</span> || tc &lt; <span class="number">0</span> || tc &gt; board[<span class="number">0</span>].length - <span class="number">1</span> || board[tr][tc] != <span class="string">&#x27;E&#x27;</span>) <span class="keyword">continue</span>;</span><br><span class="line">                dfs(board, tr, tc);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(m \times n)$ 遍历board二维数组<br>空间复杂度为$O(m \times n)$ 最差递归栈空间存储全部元素</p></div><h3 id="2-BFS"><a href="#2-BFS" class="headerlink" title="2. BFS"></a>2. BFS</h3><p>对于广度优先搜索，我们将该节点周围的节点添加到队列中。解决重复的问题是，入列的E需要先改掉标记。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Queue;</span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">int</span>[] directR = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">1</span>, -<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, <span class="number">1</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span>[] directC = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>&#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">char</span>[][] updateBoard(<span class="keyword">char</span>[][] board, <span class="keyword">int</span>[] click) &#123;</span><br><span class="line">        <span class="keyword">int</span> x = click[<span class="number">0</span>], y = click[<span class="number">1</span>];</span><br><span class="line">        Queue&lt;<span class="keyword">int</span>[]&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">        <span class="keyword">if</span> (board[x][y] == <span class="string">&#x27;M&#x27;</span>) &#123;</span><br><span class="line">            board[x][y] = <span class="string">&#x27;X&#x27;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// bfs遍历修改</span></span><br><span class="line">            queue.offer(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;x, y&#125;);</span><br><span class="line">            <span class="keyword">int</span>[] index;</span><br><span class="line">            <span class="keyword">int</span> count, tr, tc;</span><br><span class="line">            <span class="keyword">while</span> (queue.size() != <span class="number">0</span>) &#123;</span><br><span class="line">                index = queue.poll();</span><br><span class="line">                count = <span class="number">0</span>;</span><br><span class="line">                <span class="comment">// 对周围八个元素进行判断</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) &#123;</span><br><span class="line">                    tr = index[<span class="number">0</span>] + directR[i];</span><br><span class="line">                    tc = index[<span class="number">1</span>] + directC[i];</span><br><span class="line">                    <span class="keyword">if</span> (tr &lt; <span class="number">0</span> || tr &gt; board.length - <span class="number">1</span> || tc &lt; <span class="number">0</span> || tc &gt; board[<span class="number">0</span>].length - <span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line">                    <span class="keyword">if</span> (board[tr][tc] == <span class="string">&#x27;M&#x27;</span>) &#123;</span><br><span class="line">                        count++;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">if</span> (count &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                    board[index[<span class="number">0</span>]][index[<span class="number">1</span>]] = (<span class="keyword">char</span>) (count + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                    board[index[<span class="number">0</span>]][index[<span class="number">1</span>]] = <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">                    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++) &#123;</span><br><span class="line">                    tr = index[<span class="number">0</span>] + directR[i];</span><br><span class="line">                    tc = index[<span class="number">1</span>] + directC[i];</span><br><span class="line">                    <span class="keyword">if</span> (tr &lt; <span class="number">0</span> || tr &gt; board.length - <span class="number">1</span> || tc &lt; <span class="number">0</span> || tc &gt; board[<span class="number">0</span>].length - <span class="number">1</span> || board[tr][tc] != <span class="string">&#x27;E&#x27;</span>) <span class="keyword">continue</span>;</span><br><span class="line">                    <span class="comment">// 改掉标记，防止重复入列</span></span><br><span class="line">                    board[tr][tc] = <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">                    queue.offer(<span class="keyword">new</span> <span class="keyword">int</span>[]&#123;tr, tc&#125;);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> board;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(m \times n)$ 遍历board二维数组<br>空间复杂度为$O(m \times n)$ 额外的队列空间储存元素</p></div><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://leetcode-cn.com/problems/minesweeper/solution/sao-lei-you-xi-by-leetcode-solution/">扫雷游戏</a></li><li><a href="https://leetcode-cn.com/problems/minesweeper/solution/dfs-he-bfs-jie-fa-bu-xu-yao-e-wai-kai-pi-kong-jian/">DFS 和 BFS 两种解法</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-回文子串(每日一题)</title>
      <link href="post/622f/"/>
      <url>post/622f/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>给定一个字符串，你的任务是计算这个字符串中有多少个回文子串。</p><p>具有不同开始位置或结束位置的子串，即使是由相同的字符组成，也会被视作不同的子串。</p></blockquote><div class="note warning no-icon flat"><p>例如：</p><p>输入：”abc”<br>输出：3<br>解释：三个回文子串: “a”, “b”, “c”</p><p>输入：”aaa”<br>输出：6<br>解释：6个回文子串: “a”, “a”, “a”, “aa”, “aa”, “aaa”</p></div><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><h3 id="1-暴力法"><a href="#1-暴力法" class="headerlink" title="1. 暴力法"></a>1. 暴力法</h3><p>思路：遍历出所有子串，然后判断字串是否为回文子串。由于遍历所有字串需要双重循环，对每个字串检查是否为回文子串也需要一重循环。所以时间复杂度为$O(n^3)$，太高了😭</p><h3 id="2-动态规划"><a href="#2-动态规划" class="headerlink" title="2. 动态规划"></a>2. 动态规划</h3><p>思路：一开始真没想到是动态规划🤣，看了题解评论之后才有思路的。</p><ul><li>状态划分：一个<strong>回文子串</strong>除去首尾字符，其子字符串也应该是<strong>回文子串</strong></li><li>状态确定：$dp[i][j]$表示索引为$i\ j$的字符可以构成回文子串</li><li>状态转移：<script type="math/tex; mode=display">s[i] == s[j]\ \ dp[i + 1][j - 1] == true\ \ dp[i][j] = true</script></li><li>确定边界：单个字符本身即为一个回文子串。</li></ul><p><strong>注意计算方向，即i j索引代表的含义要弄清！</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">countSubstrings</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (s.trim().equals(<span class="string">&quot;&quot;</span>)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> len = s.length();</span><br><span class="line">        <span class="keyword">boolean</span>[][] dp = <span class="keyword">new</span> <span class="keyword">boolean</span>[len][len];</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; len; j++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= j; i++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (s.charAt(i) == s.charAt(j) &amp;&amp; (j - i &lt; <span class="number">2</span> || dp[i + <span class="number">1</span>][j - <span class="number">1</span>])) &#123;</span><br><span class="line">                    count++;</span><br><span class="line">                    dp[i][j] = <span class="keyword">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(n^2)$ 双重for循环<br>空间复杂度为$O(n^2)$ 使用了大小为$n^2$的额外dp空间</p></div><h3 id="3-中心扩散"><a href="#3-中心扩散" class="headerlink" title="3. 中心扩散"></a>3. 中心扩散</h3><p>思路：这种方法类似于暴力法，但是利用了回文子串的特性。字符串中每个字符都可以当作一个回文子串的中心位置，然后使用指针检查它两端的字符是否相等。问题是有可能为<strong>奇数回文子串</strong>，也有可能是<strong>偶数回文子串</strong>。<strong>奇数回文子串</strong>的中心点有一个，而<strong>偶数回文子串</strong>的中心位置有两个。这里为了好理解，就都进行计算（官方题解是寻找规律，没想清楚。。🤒）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">countSubstrings</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (s.trim().equals(<span class="string">&quot;&quot;</span>)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 遍历每个回文子串中心</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; s.length(); i++) &#123;</span><br><span class="line">            <span class="comment">// 奇数回文子串</span></span><br><span class="line">            count = isPalindromic(i, i, s, count);</span><br><span class="line">            <span class="comment">// 偶数回文子串</span></span><br><span class="line">            count = isPalindromic(i, i + <span class="number">1</span>, s, count);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">isPalindromic</span><span class="params">(<span class="keyword">int</span> left, <span class="keyword">int</span> right, String s, <span class="keyword">int</span> count)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">while</span> (left &gt;= <span class="number">0</span> &amp;&amp; right &lt; s.length() &amp;&amp; s.charAt(left) == s.charAt(right)) &#123;</span><br><span class="line">            left--;</span><br><span class="line">            right++;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(n^2)$ 双重for循环<br>空间复杂度为$O(1)$ 几个变量使用常量大小的额外dp空间</p></div><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://leetcode-cn.com/problems/palindromic-substrings/solution/hui-wen-zi-chuan-by-leetcode-solution/">回文子串</a></li><li><a href="https://leetcode-cn.com/problems/palindromic-substrings/solution/shou-hua-tu-jie-dong-tai-gui-hua-si-lu-by-hyj8/">「手画图解」动态规划思路，以及降维优化</a></li><li><a href="https://leetcode-cn.com/problems/palindromic-substrings/solution/jian-dan-de-dong-tai-gui-hua-si-xiang-by-tinylife/">暴力法的优化-中心扩展法</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-动态规划</title>
      <link href="post/9709/"/>
      <url>post/9709/</url>
      
        <content type="html"><![CDATA[<p>之前刷过剑指Offer里的动态规划题，当时感觉掌握了，但回头再做这类题的时候，还是感觉很棘手。于是又在LeetCode里刷了几道动态规划的题，希望自己的能力有所提高😋</p><h2 id="1-动态规划"><a href="#1-动态规划" class="headerlink" title="1. 动态规划"></a>1. 动态规划</h2><p>动态规划适用于父问题的解由子问题而来。一般还用于优化递归过程(例如斐波那契数列。)</p><ul><li>状态划分</li><li>状态确定</li><li>状态转移</li><li>确定边界</li></ul><h2 id="2-题目"><a href="#2-题目" class="headerlink" title="2. 题目"></a>2. 题目</h2><h3 id="2-1-打家劫舍"><a href="#2-1-打家劫舍" class="headerlink" title="2.1 打家劫舍"></a>2.1 打家劫舍</h3><p>题目描述</p><blockquote><p>你是一个专业的小偷，计划偷窃沿街的房屋。每间房内都藏有一定的现金，影响你偷窃的唯一制约因素就是相邻的房屋装有相互连通的防盗系统，<strong>如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警。</strong></p><p>给定一个代表每个房屋存放金额的非负整数数组，计算<strong>不触动警报装置的情况下 ，一夜之内能够偷窃到的最高金额。</strong></p></blockquote><div class="note warning no-icon flat"><p>例如：</p><p>输入：[1,2,3,1]<br>输出：4<br>解释：偷窃 1 号房屋 (金额 = 1) ，然后偷窃 3 号房屋 (金额 = 3)。<br>     偷窃到的最高金额 = 1 + 3 = 4 。</p></div><p>解法</p><p>思路：我们直接用<strong>动态规划</strong>的步骤来思考。</p><ul><li>状态划分：偷窃n个房子的最高金额划分为偷窃n-1, n-2, …个房子的最高金额得来</li><li>状态确定：$dp[i]$表示$i$个房子偷取的最高金额</li><li>状态转移：由于不可以偷相邻的房子，那么对于第$i$个房子来说，可以选择偷，也可以选择不偷。如果偷，那么第$i - 1$个房子就不能偷了，此时，$dp[i] = nums[i] + dp[i - 2]$; 而如果不偷，$dp[i] = dp[i - 1]$。所以最终的状态转移方程为<script type="math/tex; mode=display">dp[i] = max(nums[i]+dp[i - 2], dp[i - 1])</script></li><li>确定边界：偷0个房子的最高金额为0</li></ul><p>空间优化：由于转移方程只与当前的前两个值有关，所以可以不使用数组，降低空间复杂度。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">rob</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (nums == <span class="keyword">null</span> || nums.length == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 用来放置i-1, i-2时的最高金额</span></span><br><span class="line">        <span class="keyword">int</span> first = <span class="number">0</span>, second = <span class="number">0</span>, cur = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">            cur = Math.max(nums[i] + first, second);</span><br><span class="line">            first = second;</span><br><span class="line">            second = cur;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cur;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(n)$ 遍历了nums数组<br>空间复杂度为$O(1)$ 几个变量使用常数大小的额外空间</p></div><h3 id="2-2-打家劫舍II"><a href="#2-2-打家劫舍II" class="headerlink" title="2.2 打家劫舍II"></a>2.2 打家劫舍II</h3><p>题目描述</p><blockquote><p>你是一个专业的小偷，计划偷窃沿街的房屋，每间房内都藏有一定的现金。这个地方所有的房屋都<strong>围成一圈</strong>，这意味着第一个房屋和最后一个房屋是紧挨着的。同时，相邻的房屋装有相互连通的防盗系统，如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警。</p><p>给定一个代表每个房屋存放金额的非负整数数组，计算你在不触动警报装置的情况下，能够偷窃到的最高金额。</p></blockquote><div class="note warning no-icon flat"><p>例如：</p><p>输入: [2,3,2]<br>输出: 3<br>解释: 你不能先偷窃 1 号房屋（金额 = 2），然后偷窃 3 号房屋（金额 = 2）, 因为他们是相邻的。</p></div><p>解法</p><p>思路：这里比最初的题目多了一个条件——<strong>房屋围成一圈</strong>，即头部屋子和尾部屋子不能同时偷取。可以将这个数组分成两个单排数组考虑${nums[0:length-2]\ \ nums[1:length-1]}$，这样就等效于首尾两个屋子不能同时偷了，而且包含两个屋子都不偷的情况。</p><p>ps: 注意数组长度为1的情况😶</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">rob</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (nums == <span class="keyword">null</span> || nums.length == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (nums.length == <span class="number">1</span>) <span class="keyword">return</span> nums[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">return</span> Math.max(myRob(Arrays.copyOfRange(nums, <span class="number">0</span>, nums.length - <span class="number">1</span>)), myRob(Arrays.copyOfRange(nums, <span class="number">1</span>, nums.length)));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 单排数组的打家劫舍</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">myRob</span><span class="params">(<span class="keyword">int</span>[] nums)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> first = <span class="number">0</span>, second = <span class="number">0</span>, cur = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">            cur = Math.max(nums[i] + first, second);</span><br><span class="line">            first = second;</span><br><span class="line">            second = cur;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> cur;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(2*n)$ 遍历了两个nums数组<br>空间复杂度为$O(1)$ 几个变量使用常数大小的额外空间</p></div><h3 id="2-3-打家劫舍III"><a href="#2-3-打家劫舍III" class="headerlink" title="2.3 打家劫舍III"></a>2.3 打家劫舍III</h3><p>题目描述</p><blockquote><p>在上次打劫完一条街道之后和一圈房屋后，小偷又发现了一个新的可行窃的地区。这个地区只有一个入口，我们称之为“根”。 除了“根”之外，每栋房子有且只有一个“父“房子与之相连。一番侦察之后，聪明的小偷意识到“这个地方的所有房屋的排列类似于一棵二叉树”。 如果两个直接相连的房子在同一天晚上被打劫，房屋将自动报警。</p><p>计算在不触动警报的情况下，小偷一晚能够盗取的最高金额。</p></blockquote><div class="note warning no-icon flat"><p>例如：</p><p>输入: [2,3,2]<br>输出: 3<br>解释: 你不能先偷窃 1 号房屋（金额 = 2），然后偷窃 3 号房屋（金额 = 2）, 因为他们是相邻的。</p></div><p>解法</p><p>思路：</p><ul><li>状态划分：当前节点的最高金额可由其子节点得来。</li><li>状态确定：使用Map保存数据，$mapA(i)$表示$i$节点不偷时的最高金额，$mapB(i)$表示$i$节点偷取时的最高金额。</li><li>状态转移：当不偷取$i$节点，它的左右子节点可以偷，也可以不偷，此时，$mapA(i) = max(mapA(i.left), mapB(i.left)) + max(mapA(i.right), mapB(i.right))$；偷取$i$节点时，它的左右子节点不可再偷，$mapB(i) = i.val + mapA(i.left) + map(i.right)$</li><li>确定边界：叶节点的子节点的偷取金额为0。</li></ul><p>空间优化：我们可以使用三个数组来保存当前节点及其左右子节点的最高偷取金额。</p><p>使用后序遍历来遍历树。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for a binary tree node.</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">rob</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span>[] result = dfs(root);</span><br><span class="line">        <span class="keyword">return</span> Math.max(result[<span class="number">0</span>], result[<span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>[] dfs(TreeNode node) &#123;</span><br><span class="line">        <span class="keyword">if</span> (node == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">        <span class="comment">// reuslt[0]表示不偷取当前节点 result[1]表示偷取当前节点。</span></span><br><span class="line">        <span class="keyword">int</span>[] left = dfs(node.left);</span><br><span class="line">        <span class="keyword">int</span>[] right = dfs(node.right);</span><br><span class="line">        <span class="keyword">int</span>[] result = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line">        result[<span class="number">0</span>] = Math.max(left[<span class="number">0</span>], left[<span class="number">1</span>]) + Math.max(right[<span class="number">0</span>], right[<span class="number">1</span>]);</span><br><span class="line">        result[<span class="number">1</span>] = node.val + left[<span class="number">0</span>] + right[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(n)$ 遍历了整个树<br>空间复杂度为$O(logn)$ 递归栈的空间为树的深度</p></div><h2 id="3-参考"><a href="#3-参考" class="headerlink" title="3. 参考"></a>3. 参考</h2><ul><li><a href="https://leetcode-cn.com/problems/house-robber/solution/da-jia-jie-she-by-leetcode-solution/">打家劫舍</a></li><li><a href="https://leetcode-cn.com/problems/house-robber-ii/solution/213-da-jia-jie-she-iidong-tai-gui-hua-jie-gou-hua-/">打家劫舍 II（动态规划，结构化思路，清晰题解）</a></li><li><a href="https://leetcode-cn.com/problems/house-robber-iii/solution/dfsji-yi-hua-you-hua-ji-bai-100-by-alexand_er/">dfs+记忆化优化,击败100%</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>剑指Offer-整数中1出现的次数(从1到n整数中1出现的次数)</title>
      <link href="post/c964/"/>
      <url>post/c964/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>求出1-13的整数中1出现的次数,并算出100-1300的整数中1出现的次数？为此他特别数了一下1-13中包含1的数字有1、10、11、12、13因此共出现6次,但是对于后面问题他就没辙了。ACMer希望你们帮帮他,并把问题更加普遍化,可以很快的求出任意非负整数区间中1出现的次数（从1 到 n 中1出现的次数）。</p></blockquote><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><ol><li>暴力法</li></ol><p>思路：直接从1遍历到n，对每个数字判断含1的个数。这种方法效率实在是太差了，直接被舍弃🤒</p><div class="note info no-icon flat"><p>时间复杂度为$O(n \times 10)$ Integer最大值为2147483647<br>空间复杂度为$O(1)$</p></div><ol><li>叫不上名字法😂</li></ol><p>从LeetCode大佬解法那里扒来的——<a href="https://leetcode-cn.com/problems/1nzheng-shu-zhong-1chu-xian-de-ci-shu-lcof/solution/mian-shi-ti-43-1n-zheng-shu-zhong-1-chu-xian-de-2/">面试题43. 1～n 整数中 1 出现的次数（清晰图解）</a></p><p>分别统计1-n中个位、十位、百位…1的个数并相加，则为1出现的总次数。</p><p>设数字$n$为$x$位数，并记$n$的第$i$位为$n<em>i$，那么$n$可以表示为$n_nn</em>{n-1}n<em>{n-2}…n_in</em>{i-1}…n_2n_1$</p><ul><li>$n_i$为当前位，即为$cur$</li><li>$high$为当前位左边的数</li><li>$low$为当前位右边的数</li><li>$digit$为当前位的位因子，值为$10^i$</li></ul><p>判断当前位上1的个数的方法是：</p><p>根据当前位$cur$值的不同，分为三种情况：</p><ul><li>当前位$cur = 0$：1的个数只由$high$决定，计算公式为$high \times digit$</li></ul><div class="note default no-icon flat"><p>例如 $n = 2304$, 求十位的1的个数</p></div><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/339.jpg" alt=""></p><ul><li>当前位$cur = 0$：1的个数由$high\ and\ low$决定，计算公式为$high \times digit + low + 1$ </li></ul><div class="note default no-icon flat"><p>例如 $n = 2314$, 求十位的1的个数</p></div><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/340.jpg" alt=""></p><p>ps: 即相当于在情况1的基础上加上10、11、…、14的个数。 </p><ul><li>当前位$cur &gt; 1$：1的个数由$high$决定，计算公式为$(high + 1) \times digit$ </li></ul><div class="note default no-icon flat"><p>例如 $n = 2324$, 求十位的1的个数</p></div><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/341.jpg" alt=""></p><p>ps: 即相当于在情况1的基础上加上10、11、…、19的个数。(正好为位因子的大小。)</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">NumberOf1Between1AndN_Solution</span><span class="params">(<span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (n &lt;= <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 初始化high, cur, low, digit</span></span><br><span class="line">        <span class="keyword">int</span> cur = n % <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">int</span> low = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> high = n / <span class="number">10</span>;</span><br><span class="line">        <span class="keyword">int</span> digit = <span class="number">1</span>;</span><br><span class="line">        <span class="comment">// 记录个数</span></span><br><span class="line">        <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 当high和cur同时为0说明已经越过最高位，跳出循环</span></span><br><span class="line">        <span class="keyword">while</span> (high != <span class="number">0</span> || cur != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (cur == <span class="number">0</span>) count += high * digit;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (cur == <span class="number">1</span>) count += high * digit + low + <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">else</span> count += (high + <span class="number">1</span>) * digit;</span><br><span class="line">            <span class="comment">// 构造下一轮的high, cur, low, digit</span></span><br><span class="line">            low += cur * digit;</span><br><span class="line">            digit *= <span class="number">10</span>;</span><br><span class="line">            cur = high % <span class="number">10</span>;</span><br><span class="line">            high = high / <span class="number">10</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> count;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(logn)$ 对数字n每次除以10进行遍历，次数为$log_{10}n$。<br>空间复杂度为$O(1)$ 几个变量使用常数大小的额外空间。</p></div>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 剑指Offer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>剑指Offer-二维数组的查找</title>
      <link href="post/e238/"/>
      <url>post/e238/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>在一个二维数组中（每个一维数组的长度相同），每一行都按照从左到右递增的顺序排序，每一列都按照从上到下递增的顺序排序。请完成一个函数，输入这样的一个二维数组和一个整数，判断数组中是否含有该整数。</p></blockquote><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><ol><li>暴力法</li></ol><p>思路：直接遍历数组，寻找二维数组中是否含有目标元素。（比较简单，这里就不多说了。）</p><div class="note info no-icon flat"><p>时间复杂度为$O(m \times n)$<br>空间复杂度为$O(1)$</p></div><ol><li>二分法</li></ol><p>思路：题中的有序条件我们没有用上，而一看到有序数组，就应该想到<strong>二分查找</strong>🧐。对于一维数组的二分查找，设置左右指针，计算中间指针的位置，如果target大于中间指针对应的元素，则将左指针设置为当前中间指针位置；否则设置右指针。重复这个过程，直到查找到元素或左指针等于右指针停止循环。</p><p>而对于二维数组，我们不能简单的设置左右指针了，也不能简单的从一维扩展到二维。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/337.jpg" alt=""></p><p>例如上图，我们按照一维二分的思路，将中间元素指针定为[1, 1]，但此时如果target大于对应元素，中间指针将有右、下两个方向可以走；同样地，target小于对应元素，也会有左、上两个方向走。</p><p>所以我们可以利用右上方元素。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/338.jpg" alt=""></p><p>如果target大于array[0][3]，那么指针向下走；若小于，则指针向左走。这样就确定指针的唯一移动方向👍</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">Find</span><span class="params">(<span class="keyword">int</span> target, <span class="keyword">int</span> [][] array)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (array == <span class="keyword">null</span> || array.length == <span class="number">0</span> || array[<span class="number">0</span>].length == <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">int</span> row = array.length - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">int</span> column = array[<span class="number">0</span>].length - <span class="number">1</span>;</span><br><span class="line">        <span class="comment">// 左上角元素</span></span><br><span class="line">        <span class="keyword">int</span> r = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> c = column;</span><br><span class="line">        <span class="keyword">while</span> (r &lt;= row &amp;&amp; c &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (target &gt; array[r][c]) r++;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span> (target &lt; array[r][c]) c--;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(m+n)$ target正好在左下角时最差。<br>空间复杂度为$O(1)$</p></div>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 剑指Offer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>剑指Offer-二叉树</title>
      <link href="post/e1b0/"/>
      <url>post/e1b0/</url>
      
        <content type="html"><![CDATA[<p>之前一直对树这种数据结构比较畏惧，感觉很难，就没啃这块骨头🤔。这两天就来啃它！实际上它确实难，但是没有我想象中的那么难😂</p><h2 id="1-为什么要使用树？"><a href="#1-为什么要使用树？" class="headerlink" title="1. 为什么要使用树？"></a>1. 为什么要使用树？</h2><p>对于有序数组，我们知道它查找非常快（二分查找）。但是想要在数组中插入一个数据，我们就需要先找到插入数据的位置，将所有插入位置后的数据都向后移一位，才能完成一个数据的插入。平均需要$n/2$次。很费时，删除数据也是一样的道理。</p><p>对于链表，正好和数组相反，它插入和删除数据非常快速，我们只需要修改引用即可，但查找数据只能从链表的头部或尾部开始一个一个查找，这样查找平均也需要$n/2$次。</p><p>所以希望有一种数据结构能够同时具有查找快和插入删除快的优点，于是便有了树👍。</p><h2 id="2-树"><a href="#2-树" class="headerlink" title="2. 树"></a>2. 树</h2><p>树是一种抽象数据结构（Abstract Data Type, ADT），用来模拟具有树状结构性质的数据集合。它是由n(n &gt; 0)个<strong>节点</strong>通过连接它们的<strong>边</strong>组成的具有层次关系的集合。叫它“树”的原因是这样的结构看起来很像一棵倒挂的树，即它是根在上，叶在下的。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/326.jpg" alt=""></p><ul><li>节点：图中的黄色圆圈都表示节点。这棵树中共有8个节点。在Java中，节点一般代表对象。</li><li>边：连接节点的线称为边。在Java中，边一般是引用。</li></ul><p>树有很多种，像上图就称为多路树（节点的子节点数大于两个）。这里主要先学习二叉树[节点的子节点数小于等于两个]。</p><h2 id="3-树的常用名词"><a href="#3-树的常用名词" class="headerlink" title="3. 树的常用名词"></a>3. 树的常用名词</h2><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/327.jpg" alt=""></p><ul><li>根：树顶端的节点。一棵树只有一个根，从根到其它节点的路径有且只能有一条，否则不能称之为树。</li><li>父节点：若一个节点含有子节点，那么称这个节点是子节点的父节点。例如B是D的父节点。</li><li>子节点：和父节点是相对的概念，若一个节点有父节点，那么称这个节点是父节点的子节点。例如D是B的子节点。</li><li>兄弟节点：具有相同父节点的节点称为兄弟节点。例如D和E是兄弟节点。</li><li>叶节点：没有子节点的节点称为叶节点。例如D, E, F, G</li><li>子树：每个节点都可以作为子树的根，例如在这棵树中，节点B, D, E组成子树，B是子树的根。</li><li>节点的层次：从根开始定义，根为第一层，根的子节点为第二层，依次类推。</li><li>深度：对于任意节点n，n的深度是从根到n的唯一路径长。根的深度为0。例如D的深度为2，B的深度为1。</li><li>高度：对于任意节点n，n的高度是从n到一个叶节点的最长路径长。叶节点的高度为0。例如B的高度为1，A的高度为2。</li></ul><h2 id="4-二叉树"><a href="#4-二叉树" class="headerlink" title="4. 二叉树"></a>4. 二叉树</h2><p>二叉树的每个节点最多只能有两个子节点。</p><p>如果给二叉树加一个条件，可以得到一种<strong>二叉搜索树(binary search tree)</strong> 的特殊二叉树。</p><p>它的条件是这样的：对于它的一个节点，如果节点的左子树不为空，那么它左子树的值都小于该节点；如果节点的右子树不为空，那么它右子树的值都大于该节点。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/328.jpg" alt=""></p><h2 id="5-树的遍历"><a href="#5-树的遍历" class="headerlink" title="5. 树的遍历"></a>5. 树的遍历</h2><ul><li>前序遍历：根节点 -&gt; 左子节点 -&gt; 右子节点</li><li>中序遍历：左子节点 -&gt; 根节点 -&gt; 右子节点</li><li>后序遍历：左子节点 -&gt; 右子节点 -&gt; 根节点</li></ul><p><em>可以根据箭头方向来记忆</em><br><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/329.jpg" alt=""></p><p>例如上图的二叉搜索树，经过遍历后的结果如下：</p><blockquote><p>前序遍历：5 3 1 4 8 6 10<br>中序遍历：1 3 4 5 6 8 10<br>后序遍历：1 4 3 6 10 8 5</p></blockquote><p>我们可以发现几个规律：</p><ol><li>前序遍历得到的序列的第一个元素是树的根节点。</li><li>后续遍历得到的序列的最后一个元素是树的根节点。</li><li>对于二叉搜索树，经过中序遍历得到的序列是一个<strong>有序数列！（很重要）</strong></li></ol><h2 id="6-几个关于树的题目"><a href="#6-几个关于树的题目" class="headerlink" title="6. 几个关于树的题目"></a>6. 几个关于树的题目</h2><h3 id="6-1-二叉树的深度"><a href="#6-1-二叉树的深度" class="headerlink" title="6.1 二叉树的深度"></a>6.1 二叉树的深度</h3><blockquote><p>题目描述：输入一棵二叉树，求该树的深度。从根节点到叶节点依次经过的节点（含根、叶节点）形成树的一条路径，最长路径的长度为树的深度。</p></blockquote><p>这里因为包括根和叶节点，这里要求的树的深度相当于树的层数。</p><p>解法：</p><ol><li><strong>递归法</strong></li></ol><p>思路：对于一个节点，判断其左右子树的高度，最终返回高度较大的值加1.（终止条件：当节点为null时，返回0）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">public class TreeNode &#123;</span></span><br><span class="line"><span class="comment">    int val = 0;</span></span><br><span class="line"><span class="comment">    TreeNode left = null;</span></span><br><span class="line"><span class="comment">    TreeNode right = null;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    public TreeNode(int val) &#123;</span></span><br><span class="line"><span class="comment">        this.val = val;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">TreeDepth</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> l = TreeDepth(root.left);</span><br><span class="line">        <span class="keyword">int</span> r = TreeDepth(root.right);</span><br><span class="line">        <span class="keyword">return</span> (l &gt; r ? l : r) + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(n)$，空间复杂度为$O(n)$</p></div><ol><li><strong>层次遍历</strong></li></ol><p>思路：使用队列作为辅助空间。</p><ul><li>让节点进入队列。此时记录下队列的长度，这个大小就是树当前层的总节点个数。</li><li>遍历这个大小，让节点出队，将节点的左右子节点入队。</li><li>循环结束，表示当前层遍历完毕，深度加一。</li><li>重复前面这个过程直到队列为空停止。<br><strong>这是一个模板算法，牢记！</strong></li></ul><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/330.jpg" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">public class TreeNode &#123;</span></span><br><span class="line"><span class="comment">    int val = 0;</span></span><br><span class="line"><span class="comment">    TreeNode left = null;</span></span><br><span class="line"><span class="comment">    TreeNode right = null;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    public TreeNode(int val) &#123;</span></span><br><span class="line"><span class="comment">        this.val = val;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"><span class="keyword">import</span> java.util.Queue;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">TreeDepth</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        Queue&lt;TreeNode&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">        queue.offer(root);</span><br><span class="line">        <span class="keyword">int</span> depth = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> count;</span><br><span class="line">        TreeNode node;</span><br><span class="line">        <span class="keyword">while</span> (queue.size() != <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// 当前层总节点个数</span></span><br><span class="line">            count = queue.size();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">                <span class="comment">// 队列中节点出队</span></span><br><span class="line">                node = queue.poll();</span><br><span class="line">                <span class="comment">// 将节点的左右子节点入队</span></span><br><span class="line">                <span class="keyword">if</span> (node.left != <span class="keyword">null</span>) queue.offer(node.left);</span><br><span class="line">                <span class="keyword">if</span> (node.right != <span class="keyword">null</span>) queue.offer(node.right);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 一个循环结束，说明遍历完一层</span></span><br><span class="line">            depth++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> depth;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(n)$，二叉树每个节点遍历一次。<br>空间复杂度为$O(n)$，（最差）。树平衡时，队列最多存储$n/2$个节点。</p></div><h3 id="6-2-二叉树的镜像"><a href="#6-2-二叉树的镜像" class="headerlink" title="6.2 二叉树的镜像"></a>6.2 二叉树的镜像</h3><blockquote><p>题目描述：操作给定的二叉树，将其变换为源二叉树的镜像。</p></blockquote><div class="note primary no-icon flat"><p>二叉树的镜像定义：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">   源二叉树</span><br><span class="line">    8</span><br><span class="line">   &#x2F;  \</span><br><span class="line">  6   10</span><br><span class="line"> &#x2F; \  &#x2F; \</span><br><span class="line">5  7 9 11</span><br><span class="line">镜像二叉树</span><br><span class="line">    8</span><br><span class="line">   &#x2F;  \</span><br><span class="line">  10   6</span><br><span class="line"> &#x2F; \  &#x2F; \</span><br><span class="line">11 9 7  5</span><br></pre></td></tr></table></figure></p></div><p>解法：</p><ol><li><strong>递归法</strong></li></ol><p>思路：对当前节点的左右节点进行互换。接着对当前节点的左节点和右节点进行递归。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">public class TreeNode &#123;</span></span><br><span class="line"><span class="comment">    int val = 0;</span></span><br><span class="line"><span class="comment">    TreeNode left = null;</span></span><br><span class="line"><span class="comment">    TreeNode right = null;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    public TreeNode(int val) &#123;</span></span><br><span class="line"><span class="comment">        this.val = val;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Mirror</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>) <span class="keyword">return</span> ;</span><br><span class="line">        TreeNode temp = root.left;</span><br><span class="line">        root.left = root.right;</span><br><span class="line">        root.right = temp;</span><br><span class="line">        Mirror(root.left);</span><br><span class="line">        Mirror(root.right);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(n)$，二叉树每个节点遍历一次。<br>空间复杂度为$O(n)$，每个节点都会在递归栈中存一次。</p></div><ol><li><strong>层次遍历</strong></li></ol><p>思路：使用上面学到的层次遍历，对每个节点的左右节点进行左右互换。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">public class TreeNode &#123;</span></span><br><span class="line"><span class="comment">    int val = 0;</span></span><br><span class="line"><span class="comment">    TreeNode left = null;</span></span><br><span class="line"><span class="comment">    TreeNode right = null;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    public TreeNode(int val) &#123;</span></span><br><span class="line"><span class="comment">        this.val = val;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"><span class="keyword">import</span> java.util.Queue;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Mirror</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>) <span class="keyword">return</span>;</span><br><span class="line">        Queue&lt;TreeNode&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">        queue.offer(root);</span><br><span class="line">        <span class="keyword">int</span> count;</span><br><span class="line">        TreeNode cur;</span><br><span class="line">        TreeNode temp;</span><br><span class="line">        <span class="keyword">while</span> (queue.size() != <span class="number">0</span>) &#123;</span><br><span class="line">            count = queue.size();</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; count; i++) &#123;</span><br><span class="line">                cur = queue.poll();</span><br><span class="line">                <span class="keyword">if</span> (cur.left != <span class="keyword">null</span>) queue.offer(cur.left);</span><br><span class="line">                <span class="keyword">if</span> (cur.right != <span class="keyword">null</span>) queue.offer(cur.right);</span><br><span class="line">                <span class="comment">// 交换节点</span></span><br><span class="line">                temp = cur.left;</span><br><span class="line">                cur.left = cur.right;</span><br><span class="line">                cur.right = temp;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(n)$，二叉树每个节点遍历一次。<br>空间复杂度为$O(n)$，（最差）。树平衡时，队列最多存储$n/2$个节点。</p></div><h3 id="6-3-重建二叉树"><a href="#6-3-重建二叉树" class="headerlink" title="6.3 重建二叉树"></a>6.3 重建二叉树</h3><blockquote><p>题目描述：输入某二叉树的前序遍历和中序遍历的结果，请重建出该二叉树。假设输入的前序遍历和中序遍历的结果中都不含重复的数字。例如输入前序遍历序列{1,2,4,7,3,5,6,8}和中序遍历序列{4,7,2,1,5,3,8,6}，则重建二叉树并返回。</p></blockquote><p>思路：由于前序遍历的第一个元素即是树的根节点，再通过根节点在中序遍历中划分数组（根节点左边的元素即为左树元素，右边的元素即为右树元素。），重复这个过程，直到遍历完中序遍历序列。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for binary tree</span></span><br><span class="line"><span class="comment"> * public class TreeNode &#123;</span></span><br><span class="line"><span class="comment"> *     int val;</span></span><br><span class="line"><span class="comment"> *     TreeNode left;</span></span><br><span class="line"><span class="comment"> *     TreeNode right;</span></span><br><span class="line"><span class="comment"> *     TreeNode(int x) &#123; val = x; &#125;</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">import</span> java.util.Arrays;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> TreeNode <span class="title">reConstructBinaryTree</span><span class="params">(<span class="keyword">int</span> [] pre,<span class="keyword">int</span> [] in)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (pre == <span class="keyword">null</span> || in == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">if</span> (pre.length == <span class="number">0</span> || in.length == <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        <span class="comment">// 创建根节点</span></span><br><span class="line">        TreeNode root = <span class="keyword">new</span> TreeNode(pre[<span class="number">0</span>]);</span><br><span class="line">        <span class="comment">// 根据根节点划分中序遍历序列，为根节点添加左右子树</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; in.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (root.val == in[i]) &#123;</span><br><span class="line">                <span class="comment">// 左子树</span></span><br><span class="line">                root.left = reConstructBinaryTree(Arrays.copyOfRange(pre, <span class="number">1</span>, i + <span class="number">1</span>), Arrays.copyOfRange(in, <span class="number">0</span>, i));</span><br><span class="line">                <span class="comment">// 右子树</span></span><br><span class="line">                root.right = reConstructBinaryTree(Arrays.copyOfRange(pre, i + <span class="number">1</span>, pre.length), Arrays.copyOfRange(in, i + <span class="number">1</span>, in.length));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>同理，根据后序遍历和中序遍历，也能重建一个二叉树。（后序遍历的最后一个元素是根节点。🔑）</p><h3 id="6-4-序列化二叉树"><a href="#6-4-序列化二叉树" class="headerlink" title="6.4 序列化二叉树"></a>6.4 序列化二叉树</h3><blockquote><p>题目描述：请实现两个函数，分别用来序列化和反序列化二叉树<br>二叉树的序列化是指：把一棵二叉树按照某种遍历方式的结果以某种格式保存为字符串，从而使得内存中建立起来的二叉树可以持久保存。序列化可以基于先序、中序、后序、层序的二叉树遍历方式来进行修改，序列化的结果是一个字符串，序列化时通过 某种符号表示空节点（#），以 ！ 表示一个结点值的结束（value!）。<br>二叉树的反序列化是指：根据某种遍历顺序得到的序列化字符串结果str，重构二叉树。<br>例如，我们可以把一个只有根节点为1的二叉树序列化为”1,”，然后通过自己的函数来解析回这个二叉树</p></blockquote><p>思路：对于序列化，可以将树遍历一遍，将对应的节点转换为字符串即可；对于反序列化，将每一个节点添加到队列中，为其添加左右子节点，直到队列为空。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">public class TreeNode &#123;</span></span><br><span class="line"><span class="comment">    int val = 0;</span></span><br><span class="line"><span class="comment">    TreeNode left = null;</span></span><br><span class="line"><span class="comment">    TreeNode right = null;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    public TreeNode(int val) &#123;</span></span><br><span class="line"><span class="comment">        this.val = val;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"><span class="keyword">import</span> java.util.Queue;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function">String <span class="title">Serialize</span><span class="params">(TreeNode root)</span> </span>&#123;</span><br><span class="line">        StringBuilder result = <span class="keyword">new</span> StringBuilder(<span class="string">&quot;&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>) <span class="keyword">return</span> result.toString();</span><br><span class="line">        <span class="comment">// 层序遍历</span></span><br><span class="line">        Queue&lt;TreeNode&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">        queue.offer(root);</span><br><span class="line">        <span class="comment">// 添加父节点</span></span><br><span class="line">        result.append(String.valueOf(root.val) + <span class="string">&quot;!&quot;</span>);</span><br><span class="line">        TreeNode temp;</span><br><span class="line">        <span class="keyword">while</span> (!queue.isEmpty()) &#123;</span><br><span class="line">            <span class="comment">// 只添加子节点</span></span><br><span class="line">            temp = queue.poll();</span><br><span class="line">            <span class="keyword">if</span> (temp.left != <span class="keyword">null</span>) &#123;</span><br><span class="line">                result.append(String.valueOf(temp.left.val) + <span class="string">&quot;!&quot;</span>);</span><br><span class="line">                queue.offer(temp.left);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                result.append(<span class="string">&quot;#!&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (temp.right != <span class="keyword">null</span>) &#123;</span><br><span class="line">                result.append(String.valueOf(temp.right.val) + <span class="string">&quot;!&quot;</span>);</span><br><span class="line">                queue.offer(temp.right);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                result.append(<span class="string">&quot;#!&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result.toString();</span><br><span class="line">  &#125;</span><br><span class="line">    <span class="function">TreeNode <span class="title">Deserialize</span><span class="params">(String str)</span> </span>&#123;</span><br><span class="line">       <span class="comment">// 注意字符串比较</span></span><br><span class="line">        <span class="keyword">if</span> (str.equals(<span class="string">&quot;&quot;</span>)) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">        String[] list = str.split(<span class="string">&quot;!&quot;</span>);</span><br><span class="line">        <span class="comment">// 先建立根节点</span></span><br><span class="line">        TreeNode root = <span class="keyword">new</span> TreeNode(Integer.parseInt(list[<span class="number">0</span>]));</span><br><span class="line">        <span class="comment">// 使用队列管理需要添加子节点的节点</span></span><br><span class="line">        Queue&lt;TreeNode&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">        queue.offer(root);</span><br><span class="line">        TreeNode temp;</span><br><span class="line">        <span class="comment">// 使用index来遍历list，其中index元素的左右子节点分别为2*index+1, 2*index+2</span></span><br><span class="line">        <span class="keyword">int</span> index = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> (!queue.isEmpty() &amp;&amp; index &lt; list.length) &#123;</span><br><span class="line">            temp = queue.poll();</span><br><span class="line">            <span class="comment">// 这里注意超界问题，index小于list.length, 但2*index+1不一定小于list.length</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="number">2</span> * index + <span class="number">1</span> &lt; list.length &amp;&amp; !list[<span class="number">2</span> * index + <span class="number">1</span>].equals(<span class="string">&quot;#&quot;</span>)) &#123;</span><br><span class="line">                temp.left = <span class="keyword">new</span> TreeNode(Integer.parseInt(list[<span class="number">2</span> * index + <span class="number">1</span>]));</span><br><span class="line">                <span class="comment">// 添加到队列</span></span><br><span class="line">                queue.offer(temp.left);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                temp.left = <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">2</span> * index + <span class="number">2</span> &lt; list.length &amp;&amp; !list[<span class="number">2</span> * index + <span class="number">2</span>].equals(<span class="string">&quot;#&quot;</span>)) &#123;</span><br><span class="line">                temp.right = <span class="keyword">new</span> TreeNode(Integer.parseInt(list[<span class="number">2</span> * index + <span class="number">2</span>]));</span><br><span class="line">                <span class="comment">// 添加到队列</span></span><br><span class="line">                queue.offer(temp.right);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                temp.right = <span class="keyword">null</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 增加索引值</span></span><br><span class="line">            index++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> root;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-5-二叉搜索树的后序遍历序列"><a href="#6-5-二叉搜索树的后序遍历序列" class="headerlink" title="6.5 二叉搜索树的后序遍历序列"></a>6.5 二叉搜索树的后序遍历序列</h3><blockquote><p>题目描述：输入一个整数数组，判断该数组是不是某二叉搜索树的后序遍历的结果。如果是则输出Yes，否则输出No。假设输入的数组的任意两个数字都互不相同。</p></blockquote><p>思路：后序遍历的序列是树的根节点，然后遍历除去根节点的序列，找到第一个大于根节点值的索引，此时索引左边为左子树的元素（均小于根节点），而右边为右子树的元素（应大于根节点）[不满足这一条直接返回false]。最终左索引大于等于右索引返回true。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">VerifySquenceOfBST</span><span class="params">(<span class="keyword">int</span> [] sequence)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (sequence == <span class="keyword">null</span> || sequence.length == <span class="number">0</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">return</span> judgeOrder(sequence, <span class="number">0</span>, sequence.length - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">judgeOrder</span><span class="params">(<span class="keyword">int</span>[] sequence, <span class="keyword">int</span> start, <span class="keyword">int</span> end)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 结束条件</span></span><br><span class="line">        <span class="keyword">if</span> (start &gt;= end) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="comment">// 根节点</span></span><br><span class="line">        <span class="keyword">int</span> root = sequence[end];</span><br><span class="line">        <span class="comment">// 分割节点索引</span></span><br><span class="line">        <span class="keyword">int</span> split = start;</span><br><span class="line">        <span class="keyword">while</span> (split &lt; end &amp;&amp; sequence[split] &lt; root) split++;</span><br><span class="line">        <span class="comment">// 判断右子树中是否有不满足条件的情况</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = split; i &lt; end; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (sequence[i] &lt; root) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 注意end - 1，将当前的根节点剔除</span></span><br><span class="line">        <span class="keyword">return</span> judgeOrder(sequence, start, split - <span class="number">1</span>) &amp;&amp; judgeOrder(sequence, split, end - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-6-树的子结构"><a href="#6-6-树的子结构" class="headerlink" title="6.6 树的子结构"></a>6.6 树的子结构</h3><blockquote><p>题目描述：输入两颗二叉树A, B，判断B是不是A的子结构。（ps: 我们约定空树不是任意一个树的子结构）</p></blockquote><p>思路：首先我们应该遍历大树（A树），找到节点和小树（B树）的根节点相同，然后递归判断节点下的左右子节点是否相同。直到子树遍历完，说明B是A的子结构；否则不是。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/331.jpg" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">public class TreeNode &#123;</span></span><br><span class="line"><span class="comment">    int val = 0;</span></span><br><span class="line"><span class="comment">    TreeNode left = null;</span></span><br><span class="line"><span class="comment">    TreeNode right = null;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    public TreeNode(int val) &#123;</span></span><br><span class="line"><span class="comment">        this.val = val;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"><span class="keyword">import</span> java.util.Queue;</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">HasSubtree</span><span class="params">(TreeNode root1,TreeNode root2)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (root2 == <span class="keyword">null</span> || root1 == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        Queue&lt;TreeNode&gt; queue = <span class="keyword">new</span> LinkedList&lt;&gt;();</span><br><span class="line">        queue.offer(root1);</span><br><span class="line">        TreeNode temp;</span><br><span class="line">        <span class="keyword">while</span> (!queue.isEmpty()) &#123;</span><br><span class="line">            temp = queue.poll();</span><br><span class="line">            <span class="keyword">if</span> (temp.val == root2.val) &#123;</span><br><span class="line">                <span class="keyword">if</span> (judge(temp, root2)) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (temp.left != <span class="keyword">null</span>) queue.offer(temp.left);</span><br><span class="line">            <span class="keyword">if</span> (temp.right != <span class="keyword">null</span>) queue.offer(temp.right);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">judge</span><span class="params">(TreeNode root1, TreeNode root2)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 如果小树递归到空，则一定为大树的子结构</span></span><br><span class="line">        <span class="keyword">if</span> (root2 == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="comment">// 如果小树不为空而大树为空，则小树不为大树的子结构</span></span><br><span class="line">        <span class="keyword">if</span> (root1 == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="keyword">if</span> (root1.val == root2.val) &#123;</span><br><span class="line">            <span class="keyword">return</span> judge(root1.left, root2.left) &amp;&amp; judge(root1.right, root2.right);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-7-二叉树中和为某一值的路径"><a href="#6-7-二叉树中和为某一值的路径" class="headerlink" title="6.7 二叉树中和为某一值的路径"></a>6.7 二叉树中和为某一值的路径</h3><blockquote><p>题目描述：输入一颗二叉树的根节点和一个整数，按字典序打印出二叉树中节点值的和为输入整数的所有路径。路径定义为从树的根节点开始往下一直到叶节点所经过的节点形成一条路径。</p></blockquote><p>思路：首先添加节点到路径中，target减去节点的值，判断target是否等于0且节点是否为叶节点，满足则将路径添加到结果中，否则继续递归左右子节点。递归完成后要将路径的最后一个节点删除（即向后走一步，给兄弟节点腾位置。）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">public class TreeNode &#123;</span></span><br><span class="line"><span class="comment">    int val = 0;</span></span><br><span class="line"><span class="comment">    TreeNode left = null;</span></span><br><span class="line"><span class="comment">    TreeNode right = null;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    public TreeNode(int val) &#123;</span></span><br><span class="line"><span class="comment">        this.val = val;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    ArrayList&lt;ArrayList&lt;Integer&gt;&gt; result = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    ArrayList&lt;Integer&gt; path = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">public</span> ArrayList&lt;ArrayList&lt;Integer&gt;&gt; FindPath(TreeNode root,<span class="keyword">int</span> target) &#123;</span><br><span class="line">        <span class="keyword">if</span> (root == <span class="keyword">null</span>) <span class="keyword">return</span> result;</span><br><span class="line">        path.add(root.val);</span><br><span class="line">        target -= root.val;</span><br><span class="line">        <span class="keyword">if</span> (target == <span class="number">0</span> &amp;&amp; root.left == <span class="keyword">null</span> &amp;&amp; root.right == <span class="keyword">null</span>) &#123;</span><br><span class="line">            result.add(<span class="keyword">new</span> ArrayList&lt;&gt;(path));</span><br><span class="line">        &#125;</span><br><span class="line">        FindPath(root.left, target);</span><br><span class="line">        FindPath(root.right, target);</span><br><span class="line">        path.remove(path.size() - <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-8-对称的二叉树"><a href="#6-8-对称的二叉树" class="headerlink" title="6.8 对称的二叉树"></a>6.8 对称的二叉树</h3><blockquote><p>题目描述：请实现一个函数，用来判断一颗二叉树是不是对称的。注意，如果一个二叉树同此二叉树的镜像是同样的，定义其为对称的。</p></blockquote><p>思路：下图即为一个对称二叉树。我们需要判断根节点的左右节点是否相等，以及左节点的左子节点与右节点的右子节点是否相等，左节点的右子节点与右节点的左子节点是否相等。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/332.jpg" alt=""></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">public class TreeNode &#123;</span></span><br><span class="line"><span class="comment">    int val = 0;</span></span><br><span class="line"><span class="comment">    TreeNode left = null;</span></span><br><span class="line"><span class="comment">    TreeNode right = null;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    public TreeNode(int val) &#123;</span></span><br><span class="line"><span class="comment">        this.val = val;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">isSymmetrical</span><span class="params">(TreeNode pRoot)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (pRoot == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="keyword">return</span> isEquals(pRoot.left, pRoot.right);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">boolean</span> <span class="title">isEquals</span><span class="params">(TreeNode node1, TreeNode node2)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 如果两个节点同时为空，返回true</span></span><br><span class="line">        <span class="keyword">if</span> (node1 == <span class="keyword">null</span> &amp;&amp; node2 == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">        <span class="comment">// 如果两个节点不同时为空，返回false</span></span><br><span class="line">        <span class="keyword">if</span> (node1 == <span class="keyword">null</span> || node2 == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        <span class="comment">// 判断节点值是否相等</span></span><br><span class="line">        <span class="keyword">if</span> (node1.val == node2.val) &#123;</span><br><span class="line">            <span class="keyword">return</span> isEquals(node1.left, node2.right) &amp;&amp; isEquals(node1.right, node2.left);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 剑指Offer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>剑指Offer-快速幂</title>
      <link href="post/94c0/"/>
      <url>post/94c0/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>给定一个double类型的浮点数base和int类型的整数exponent。求base的exponent次方。保证base和exponent不同时为0</p></blockquote><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><h3 id="1-暴力法"><a href="#1-暴力法" class="headerlink" title="1. 暴力法"></a>1. 暴力法</h3><p>思路：使用循环进行累乘，多少次方就循环多少次。（注意exponent可能为负数的情况！）</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">Power</span><span class="params">(<span class="keyword">double</span> base, <span class="keyword">int</span> exponent)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (base == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">double</span> result = <span class="number">1.0f</span>;</span><br><span class="line">    <span class="comment">// exponent负数情况</span></span><br><span class="line">    <span class="keyword">if</span> (exponent &lt; <span class="number">0</span>) &#123;</span><br><span class="line">      exponent = -exponent;</span><br><span class="line">      base = <span class="number">1</span> / base;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; exponent; i++) &#123;</span><br><span class="line">      result *= base;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(n)$，空间复杂度为$O(1)$</p></div><h3 id="2-快速幂"><a href="#2-快速幂" class="headerlink" title="2. 快速幂"></a>2. 快速幂</h3><p>上面的暴力法时间复杂度是$O(n)$，看起来挺好，但当exponent特别大时，性能就变得很低了。而快速幂算法可以将时间复杂度降为$O(logn)$，十分优秀👍。</p><p>快速幂：快速求出幂指数的一种算法。思路是将指数换算为二进制数，根据权重（当前位是否为1）来考虑是否乘当前位的数值。</p><div class="note primary no-icon flat"><p>例如计算$3^9$</p><p>暴力法：$1<em>3</em>3<em>3</em>…<em>3</em>3*3$ 需要乘9个3，即乘9次。</p><p>快速幂：将9换算为二进制数为1001<br>$3^9 = 3^{(2^3<em>1 + 2^2</em>0 + 2^1<em>0 + 2^0</em>1)} = 3^{2^3<em>1}</em>3^{(2^0*1)}$ 可以看到转换为二进制后，只需要乘4次。</p></div><p>接下来用代码实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">double</span> <span class="title">Power</span><span class="params">(<span class="keyword">double</span> base, <span class="keyword">int</span> exponent)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (base == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">double</span> result = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (exponent &lt; <span class="number">0</span>) &#123;</span><br><span class="line">      exponent = -exponent;</span><br><span class="line">      base = <span class="number">1</span> / base;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 初始化基底（即base^(2^0)）</span></span><br><span class="line">    <span class="keyword">double</span> a = base;</span><br><span class="line">    <span class="comment">// exponent为0时，停止循环</span></span><br><span class="line">    <span class="keyword">while</span> (exponent != <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="comment">// 使用&amp;操作判断exponent的二进制数最后一位是否为1</span></span><br><span class="line">      <span class="keyword">if</span> ((exponent &amp; <span class="number">1</span>) == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="comment">// 此时说明权重为1，应乘上基底</span></span><br><span class="line">        result *= a;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="comment">// 将exponent二进制右移一位，准备检查下一位是否为1</span></span><br><span class="line">      exponent = exponent &gt;&gt; <span class="number">1</span>;</span><br><span class="line">      <span class="comment">// 更新基底</span></span><br><span class="line">      a = a * a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(logn)$，空间复杂度为$O(1)$</p></div><p>题目中提到算某个数的次方，就要想到快速幂！！！</p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 剑指Offer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>剑指Offer-动态规划</title>
      <link href="post/390/"/>
      <url>post/390/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>HZ偶尔会拿些专业问题来忽悠那些非计算机专业的同学。今天测试组开完会后,他又发话了:在古老的一维模式识别中,常常需要计算连续子向量的最大和,当向量全为正数的时候,问题很好解决。但是,如果向量中包含负数,是否应该包含某个负数,并期望旁边的正数会弥补它呢？例如:{6,-3,-2,7,-15,1,2,2},连续子向量的最大和为8(从第0个开始,到第3个为止)。给一个数组，返回它的最大连续子序列的和，你会不会被他忽悠住？(子向量的长度至少是1)</p></blockquote><div class="note default no-icon flat"><p>例如:{6,-3,-2,7,-15,1,2,2},连续子向量的最大和为8(从第0个开始,到第3个为止)。</p></div><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><h3 id="1-暴力法"><a href="#1-暴力法" class="headerlink" title="1. 暴力法"></a>1. 暴力法</h3><p>思路：枚举所有可能的子序列的和。通过三重循环每次求出一个数组下标范围为[index1, index2]的子序列的和，每次求出和后进行判断，更新最大值。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">FindGreatestSumOfSubArray</span><span class="params">(<span class="keyword">int</span>[] array)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (array == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 初始化最大值</span></span><br><span class="line">    <span class="keyword">int</span> max = array[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">int</span> sum;</span><br><span class="line">    <span class="comment">// 遍历区间下界索引</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index1 = <span class="number">0</span>; index1 &lt; array.length; index1++) &#123;</span><br><span class="line">      <span class="comment">// 遍历区间上界索引</span></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> index2 = index1; index2 &lt; array.length; index2++) &#123;</span><br><span class="line">        sum = <span class="number">0</span>;</span><br><span class="line">        <span class="comment">// 计算区间[index1, index2]的和</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = index1; i &lt;= index2; i++) &#123;</span><br><span class="line">          sum += array[i];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 更新最大值</span></span><br><span class="line">        <span class="keyword">if</span> (max &lt; sum) &#123;</span><br><span class="line">          max = sum;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(n^3)$，空间复杂度为$O(1)$</p></div><h3 id="2-优化暴力法"><a href="#2-优化暴力法" class="headerlink" title="2. 优化暴力法"></a>2. 优化暴力法</h3><p>思路：去掉第三层循环，在第二层遍历区间上界的时候就进行累加判断。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">FindGreatestSumOfSubArray</span><span class="params">(<span class="keyword">int</span>[] array)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (array == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 初始化最大值</span></span><br><span class="line">    <span class="keyword">int</span> max = array[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">int</span> sum;</span><br><span class="line">    <span class="comment">// 遍历区间下界索引</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> index1 = <span class="number">0</span>; index1 &lt; array.length; index1++) &#123;</span><br><span class="line">      <span class="comment">// 遍历区间上界索引</span></span><br><span class="line">      sum = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> index2 = index1; index2 &lt; array.length; index2++) &#123;</span><br><span class="line">        sum += array[index2];</span><br><span class="line">        <span class="keyword">if</span> (max &lt; sum) &#123;</span><br><span class="line">          max = sum;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(n^2)$，空间复杂度为$O(1)$</p></div><h3 id="3-动态规划"><a href="#3-动态规划" class="headerlink" title="3. 动态规划"></a>3. 动态规划</h3><p>重头戏来了👊，这道题是动态规划的经典题型。那么，什么是动态规划呢？</p><p>按照定义，动态规划（Dynamic Programming）是把一堆大问题拆成一堆小问题（最优解肯定是由最优的子解转移而来的思想），而且<strong>这些小问题会被重复调用</strong>。</p><p>动态规划一般分为四个过程：</p><ul><li>划分状态：即划分子问题</li><li>状态确定：告诉计算机理解子问题</li><li>状态转移：父问题如何由子问题推导出来</li><li>确定边界：确定初始状态是什么？最小的子问题是什么？最终状态又是什么？</li></ul><p>在这个问题中</p><ul><li>划分状态：我们可以将问题——求大小为n的数组的最大连续子序列和划分成<strong>求解大小为n-1, n-2, …, i的最大连续子序列和</strong>。</li><li>状态确定：建立dp集合，dp[i]表示前i个数的最大连续子序列和。</li><li>状态转移：dp[i-1]是前i-1个数的最大连续子序列和，如果它是正数，那么正数加任意一个数一定比本身大；如果是负数，说明将第i个数反而减小了，所以直接取自身。<br>$dp[i] = max(array[i], array[i] + dp[i - 1])$</li><li>确定边界：大小为1的数组的最大连续子序列和就是元素本身😀。最终的最大连续子序列和就是这里面的最大值（可以使用max变量直接更新。）</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">FindGreatestSumOfSubArray</span><span class="params">(<span class="keyword">int</span>[] array)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (array == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 状态确定</span></span><br><span class="line">    List&lt;Integer&gt; dp = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="comment">// 确定边界</span></span><br><span class="line">    dp.add(array[<span class="number">0</span>]);</span><br><span class="line">    <span class="keyword">int</span> max = array[<span class="number">0</span>];</span><br><span class="line">    <span class="comment">// 状态转移</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (dp.get(i - <span class="number">1</span>) &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        dp.add(array[i]);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        dp.add(array[i] + dp.get(i - <span class="number">1</span>));</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (max &lt; dp.get[i]) &#123;</span><br><span class="line">        max = dp.get[i];</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(n)$，空间复杂度为$O(n)$</p></div><h3 id="4-优化动态规划"><a href="#4-优化动态规划" class="headerlink" title="4. 优化动态规划"></a>4. 优化动态规划</h3><p>我们能够发现，上面的dp空间在计算时实际只用到了dp[i-1]的值，所以没必要建立一个集合，使用一个变量就好啦🤪</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">FindGreatestSumOfSubArray</span><span class="params">(<span class="keyword">int</span>[] array)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (array == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// 记录i-1个元素的连续子序列和</span></span><br><span class="line">    <span class="keyword">int</span> curSum = array[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">int</span> max = array[<span class="number">0</span>];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; array.length; i++) &#123;</span><br><span class="line">      <span class="keyword">if</span> (curSum &lt; <span class="number">0</span>) &#123;</span><br><span class="line">        curSum = array[i];</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        curSum += array[i];</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> (max &lt; curSum) &#123;</span><br><span class="line">        max = curSum;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> max;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(n)$，空间复杂度为$O(1)$</p></div><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://blog.csdn.net/zjwreal/article/details/91049705?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-1.nonecase">【leetcode】300 最长上升子序列（动态规划，贪心，二分查找</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 剑指Offer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>剑指Offer-用两个栈实现队列</title>
      <link href="post/9ab8/"/>
      <url>post/9ab8/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>用两个栈来实现一个队列，完成队列的Push和Pop操作。 队列中的元素为int类型。</p></blockquote><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>首先得了解这两种数据结构的特性。</p><ol><li>队列：先进先出。</li></ol><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/318.jpg" alt=""></p><ol><li>栈：先进后出。</li></ol><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/319.jpg" alt=""></p><p>接下来我们可以用一个例子来模拟一下这个过程</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/320.jpg" alt=""></p><ul><li>首先向“虚拟队列”中压入三个数据a, b, c，可以看到这一步直接压入Stack1就🆗了。</li><li>然后要弹出一个元素，对于队列来说，a是先进来的，所以要先出去。将Stack1的数据一个一个弹出来再压入Stack2，再弹出Stack2的栈顶数据，就正好是a啦，从而实现了队列的先进先出。</li><li>再向“虚拟队列”中压入数据d。</li><li>此时需要弹出元素，则需要看看Stack2中是否还有元素，如果有，就弹Stack2的；否则，应该先把Stack1的数据一个一个弹出来再压入Stack2，再弹Stack2的栈顶数据。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Stack;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  Stack&lt;Integer&gt; stack1 = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line">  Stack&lt;Integer&gt; stack2 = <span class="keyword">new</span> Stack&lt;&gt;();</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">push</span><span class="params">(<span class="keyword">int</span> node)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 插入操作：直接压入stack1</span></span><br><span class="line">    stack1.push(node);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">pop</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 弹出操作：先判断stack2是否为空：不为空直接弹stack2的数据；否则先把stack1的数据弹出压入到stack2，再弹出。</span></span><br><span class="line">    <span class="keyword">if</span> (stack2.size() == <span class="number">0</span>) &#123;</span><br><span class="line">      <span class="keyword">while</span> (stack1.size != <span class="number">0</span>) &#123;</span><br><span class="line">        stack2.push(stack1.pop());</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> stack2.pop();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>push时间复杂度为$O(1)$，pop空间复杂度为$O(1)$</p></div><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://blog.nowcoder.net/n/ee03f62d5a6e4b5ea571d61ad7eb64c8?f=comment">【剑指offer】用两个栈实现队列 — Java实现</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 剑指Offer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>剑指Offer-不用加减乘除做加法</title>
      <link href="post/f6d6/"/>
      <url>post/f6d6/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>写一个函数，求两个整数之和，要求在函数体内不得使用+、-、*、/四则运算符号。</p></blockquote><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>这里需要学习位运算的知识😀。</p><ul><li>按位与&amp;：有0则0，全1则1</li><li>按位或|：有1则1，全0则0</li><li>异或^：相同则0，不同则1</li></ul><p>我们可以使用位运算来完成加法。</p><div class="table-container"><table><thead><tr><th>正常加法</th><th>异或</th></tr></thead><tbody><tr><td>1 + 1 = 2</td><td>1 ^ 1 = 0 ❌</td></tr><tr><td>1 + 0 = 1</td><td>1 ^ 0 = 1 ✅</td></tr><tr><td>0 + 1 = 1</td><td>0 ^ 1 = 1 ✅</td></tr><tr><td>0 + 0 = 0</td><td>0 ^ 0 = 0 ✅</td></tr></tbody></table></div><p>可以发现使用异或，只有1 + 1这里对不上，而这个问题是由于没有进位导致的🙄，如何计算进位呢？</p><h2 id="按位与"><a href="#按位与" class="headerlink" title="| 按位与 |"></a>| 按位与 |</h2><p>|1 &amp; 1 = 1 |<br>|1 &amp; 0 = 0 |<br>|0 &amp; 1 = 0 |<br>|0 &amp; 0 = 0 |</p><p>与运算成功实现了进位，我们再把它左移一位，就真正的在计算上实现了进位。</p><p>再将使用异或计算的结果和与运算计算的结果加起来，然后再计算是否有进位，重复这个操作，直至进位为0，加法就计算完成了👀。</p><p>代码实现</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">Add</span><span class="params">(<span class="keyword">int</span> num1, <span class="keyword">int</span> num2)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// 结果和进位变量</span></span><br><span class="line">    <span class="keyword">int</span> result = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> carry = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">do</span> &#123;</span><br><span class="line">      <span class="comment">// 无进位加法</span></span><br><span class="line">      result = num1 ^ num2;</span><br><span class="line">      <span class="comment">// 计算进位</span></span><br><span class="line">      carry = (num1 &amp; num2) &lt;&lt; <span class="number">1</span>;</span><br><span class="line">      <span class="comment">// 将值赋给num1, num2 进行循环</span></span><br><span class="line">      num1 = result;</span><br><span class="line">      num2 = carry;</span><br><span class="line">    &#125; <span class="keyword">while</span> (carry != <span class="number">0</span>); <span class="comment">// 使用do while可以使循环至少执行一次</span></span><br><span class="line">    <span class="keyword">return</span> result;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(1)$[<em>最高执行32次，因为int最大32位</em>]，空间复杂度为$O(1)$</p></div><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://blog.nowcoder.net/n/07f2bd03162d40ddaebefd666e0d71b2">不用加减乘除做加法</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 剑指Offer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>剑指Offer-构建乘积数组</title>
      <link href="post/5a20/"/>
      <url>post/5a20/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>给定一个数组A[0,1,…,n-1],请构建一个数组B[0,1,…,n-1],其中B中的元素B[i]=A[0]<em>A[1]</em>…<em>A[i-1]</em>A[i+1]<em>…</em>A[n-1]。不能使用除法。（注意：规定B[0] = A[1] <em> A[2] </em> … <em> A[n-1]，B[n-1] = A[0] </em> A[1] <em> … </em> A[n-2];）</p></blockquote><p><strong>对于A长度为1的情况，B无意义，故而无法构建，因此该情况不会存在。</strong></p><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>如果能用除法我将绝杀，可惜用不得🙃。先用暴力法，能通过再说。</p><h3 id="1-暴力法"><a href="#1-暴力法" class="headerlink" title="1. 暴力法"></a>1. 暴力法</h3><p>题目要求B中的元素等于A的所有元素相乘但不乘A的对应索引的元素。</p><div class="note default no-icon flat"><p>例如 B[2] = A[0]*A[1]*A[3]*…*A[n-1]</p></div><p>则可以使用双重循环算出每一个B的值，再放入B中即可。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">int</span>[] multiply(<span class="keyword">int</span>[] A) &#123;</span><br><span class="line">    <span class="keyword">if</span> (A == <span class="keyword">null</span> || A.length &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 初始化数组</span></span><br><span class="line">    <span class="keyword">int</span>[] B = <span class="keyword">new</span> <span class="keyword">int</span>[A.length];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; B.length; i++) &#123;</span><br><span class="line">      <span class="keyword">int</span> product = <span class="number">1</span>;</span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; A.length; j++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (i != j) &#123;</span><br><span class="line">          product *= A[j];</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">      B[i] = product;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> B;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(n^2)$，空间复杂度为$O(1)$</p></div><h3 id="2-找规律"><a href="#2-找规律" class="headerlink" title="2. 找规律"></a>2. 找规律</h3><p>暴力法的时间复杂度实在是太高了，数据量一大就很费时间，所以找寻题目中的规律，换个方法做。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/316.jpg" alt=""></p><p>通过看上面这个图可以发现，B的值是由左边和右边乘起来的，而左边的规律是</p><div class="note default no-icon flat"><p>left[i + 1] = left[i] * A[i + 1]</p></div><p>同样地，右边也是如此。</p><p>我们可以先用循环把所有B的left值算出来，再计算right的值乘起来就可以了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="keyword">int</span>[] multiply(<span class="keyword">int</span>[] A) &#123;</span><br><span class="line">    <span class="keyword">if</span> (A == <span class="keyword">null</span> || A.length &lt;= <span class="number">1</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> len = A.length;</span><br><span class="line">    <span class="comment">// 新建B并初始化B</span></span><br><span class="line">    <span class="keyword">int</span>[] B = <span class="keyword">new</span> <span class="keyword">int</span>[len];</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; len; i++) &#123;</span><br><span class="line">      B[i] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> left = <span class="number">1</span>, right = <span class="number">1</span>;</span><br><span class="line">    <span class="comment">// 从B[1]开始计算left</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; len; i++) &#123;</span><br><span class="line">      left *= A[i - <span class="number">1</span>];</span><br><span class="line">      B[i] = left;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 从B[n-2]开始计算right</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = len - <span class="number">2</span>; j &gt;= <span class="number">0</span>; j--) &#123;</span><br><span class="line">      right *= A[j + <span class="number">1</span>];</span><br><span class="line">      B[j] *= right;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> B;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><div class="note info no-icon flat"><p>时间复杂度为$O(n)$，空间复杂度为$O(1)$</p></div><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://www.nowcoder.com/questionTerminal/94a4d381a68b47b7a8bed86f2975db46?answerType=1&amp;f=discussion">构建乘积数组</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 剑指Offer </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客部署到Coding并绑定自定义域名</title>
      <link href="post/f32c/"/>
      <url>post/f32c/</url>
      
        <content type="html"><![CDATA[<p>之前一直用的Gitee，如果想绑定自定义域名需要购买Pro服务，所以转战Coding（Gitee上还是会更新的😋），记录一下整个过程踩到的坑👀。</p><h2 id="1-部署到Coding"><a href="#1-部署到Coding" class="headerlink" title="1. 部署到Coding"></a>1. 部署到Coding</h2><p>登录<a href="https://coding.net/">Coding</a>官网，注册团队，登录。</p><blockquote><p>这里我最开始是用微信登录的，很坑的就是之后把博客文件推送到远端仓库时会让你登录，这时就不知道填什么账户密码。。😓所以登录好之后，选择<code>个人账户设置</code>，点击图中标注的<code>修改</code>进行设置。</p></blockquote><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/311.jpg" alt=""></p><p>接下来<code>新建仓库</code>，这些代码托管平台都大同小异。</p><p>打开博客根目录下的_config.yml，在部署中添加Coding仓库的地址。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/312.jpg" alt=""></p><p><code>hexo d</code>即可推送到远端Coding仓库（我没有设置SSH公钥，所以会提示输入账号密码，输入之前设置的账号密码就可以了。）</p><p>推送完之后在网页中打开项目，进入<code>项目设置</code>(这个入口对我来说实在是太隐蔽了😭)</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/313.jpg" alt=""></p><p>选择 功能开关 - 持续部署，勾选上<code>持续部署</code>就🆗了。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/314.jpg" alt=""></p><p>返回项目管理页，选择 持续部署 - 静态网站，在设置中勾选代码更新时自动部署，保存修改。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/315.jpg" alt=""></p><p>然后点击<code>立即部署</code>，稍微等待一下，就可以从上面的访问地址中进入部署好的博客啦😋。</p><h2 id="2-绑定自定义域名"><a href="#2-绑定自定义域名" class="headerlink" title="2. 绑定自定义域名"></a>2. 绑定自定义域名</h2><p>狠狠心买了个域名😋，绑上。</p><p>先在域名购买处做域名解析</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/321.jpg" alt=""></p><blockquote><p>CNAME记录指向域名，A记录指向IP地址。</p></blockquote><p>然后进入Coding，点击 静态网站设置</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/322.jpg" alt=""></p><p>填入买的域名就🆗啦。</p><h2 id="3-参考"><a href="#3-参考" class="headerlink" title="3. 参考"></a>3. 参考</h2><ul><li><a href="https://www.marxcbr.cn/archives/dbd2cb4b.html#%E6%B3%A8%E5%86%8C-coding-%E8%B4%A6%E5%8F%B7%E8%BF%9B%E8%A1%8C%E9%83%A8%E7%BD%B2">Github Pages + Coding Pages 同时部署 HEXO 并绑定自定义域名</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>随笔1</title>
      <link href="post/6a69/"/>
      <url>post/6a69/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">请输入密码...</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="dbbd4be4f6a77dc193b8e1b940475734556bd1fd8cd6304983e59071de7deaaf">9a0cfd7086a3cc6e1a0e8bcb4b2bbd386f2058b968f4e2c50d54abf4851f8e228a8689c613fcc5267d341aba670124d82e38c24177b3662a3a5055f64a2d17bc6ab780678b6aa66b4ab4387fd86887d17ff5ac4dd9428469f991b2ae4a6013e74f82e92fbf19dcc232540fdb8c2786e8d65281af0f024fb15407ded5b6262e71941757e8b1f1721843be69b8f301571df4f5acda6532130378662408bc7064fa73878b846a19d4030f1e09aafc5544758c92874544dbbc85cacdaf020728af3c98387db3e5808ca280e9c8ee3878a3582fc75b7aee970bdaee698762f8e39ab75b2c99182835de812a5bf57a7cd1ff9703ce3c46756b57dc0e7d979d2ae006ca60d75adb0659976fa06d41697d657cb168237f09e348c025841cc567fc80445fad4ce9f7bca45984043e46fdb1cc78f356b9bf52bc25bc51a757307f63971df75dfb9ee3641a4760d67347edd26beeb2a053c15726c011ceab8b43ac6c0b842394b73090733389b511dc5d986dd7a34470f467a3ee7f996cc7309bdefd8409fbb44417664e29a2fecd5cef1bfd8fec0bb3306db075e51093323f69807d7bb1d6d4b53c0e87076a6832e5f256858bd786276428464bc51d4736fa1fa26324441906ff3dafc23fba27d1a4bd8c3c01a6b70e4c561a08bebc0339f4986c982c5cea3b188a6d947acbcf6e03079a9cd96d262dce44e6ce4cb3902bb0dc8014d15bfe7c2efbb9e6b8c4291b2bb319988af7f20d8fa3d73571f4fcede16f37e35b32b6183525d68e4866261b265e29cfa75c5e05e745fccc3bf17e54f5824160bfe027b9d07532652879d53c5c49dcdf7eadeba0a5c2cc9bbfc9543798b4f7a133008aa8b3e27a0781a52a516f565c36b913150da212037417f7131d575e6aebafdb3275761affc9779463df007164cbac422364554a99f25837df225a09a83e703927de650781249bc5205c0420eea0f1853cc6dc5a27d314d74e655bc7196262852c628ff54e959ede3a3a08f74b5567e70d301be16fa0d8406906313ceba845ca37e161ee75cca47d473ebb2e7f1ca141a116eee0641f455fd54ced2742c3c47f60cedb014281d7a352356c326d5d891d30733d3031952ed189765c20bee5bce1358b4830622aeece6dc681009fab3279c57b0c5056400c459d1d9467d271701713f2a24cf51bd1d5365539f139252fe8e93d0206e34e7b87ceb7fd981f63e17a49eed3a190dbbbf91b54a8df5b88aee4ef237f32c24756c98e4b55e5d6341dfff7ab8abbfdbfcae4dd68c9d852421f7631ce6fda6b36b43842cd0c1be042a68d2a797bd2e1b41e517332f0ce3d050bed2d647ba6c10eec61b72e548b47ddaabd3d6b22a10010b20e50c01fc53fd1fb2d6733b1c7fb1e8a1c2a6e22f736557e7cbdaf337c3cbcd2e84966c01542c0091571f1f49bb74bb024006853c14c4862a58a2a7b6dc2191f070e8ccbf8a6666b36dc9c6cf6c5ba72a21e40d7962b8eee5da31a72ed58648617d3a5265c546cff5930418a1128321134223ee2c8855e2e2f85012cd3bc22c80d6adbd2819271b53fcf0dc39e2dfdd4ac421a77693e2ba40d50376d63db60523b1f3d90f272999f3317ef818899cced73ff5ea2a11f4a9ae5e124415b4d10d6a795dae22443004f5a61217cd4a493f7f3a76ea65d6506b78790</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux使用Nginx部署Vue项目</title>
      <link href="post/8f93/"/>
      <url>post/8f93/</url>
      
        <content type="html"><![CDATA[<p>这里记录了在Linux系统上使用Nginx服务器部署Vue项目的过程🤪</p><h2 id="1-上传打包文件"><a href="#1-上传打包文件" class="headerlink" title="1. 上传打包文件"></a>1. 上传打包文件</h2><p>使用<a href="https://www.netsarang.com/zh/xftp/">Xftp</a>将打包好的项目文件上传到<code>/usr/local/webapp</code>路径下。</p><h2 id="2-修改配置文件"><a href="#2-修改配置文件" class="headerlink" title="2. 修改配置文件"></a>2. 修改配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /usr/<span class="built_in">local</span>/nginx/conf/nginx.conf</span><br></pre></td></tr></table></figure><p>修改如下</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  server_name localhost;</span><br><span class="line"></span><br><span class="line">  location / &#123;</span><br><span class="line">    root /usr/local/webapp/项目名;</span><br><span class="line">    index /index.html;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-启动服务"><a href="#3-启动服务" class="headerlink" title="3. 启动服务"></a>3. 启动服务</h2><p>重新载入配置文件并重启<code>Nginx</code>🍙</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./nginx -s reload</span><br><span class="line">./nginx -s stop</span><br><span class="line">./nginx</span><br></pre></td></tr></table></figure><p>可以发现项目部署成功啦，输入自己服务器公网IP查看项目部署情况</p><h2 id="4-一些问题"><a href="#4-一些问题" class="headerlink" title="4. 一些问题"></a>4. 一些问题</h2><h3 id="4-1-网站图标"><a href="#4-1-网站图标" class="headerlink" title="4.1 网站图标"></a>4.1 网站图标</h3><p>这里显示的是Nginx的favicon，如果没配置这个，即使项目弄好了favicon，部署好项目之后仍然不会显示favicon。所以要为Nginx配置favicon。</p><p>修改配置文件，在<code>server</code>中添加如下代码</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># favicon</span><br><span class="line">location =  /favicon.ico &#123;</span><br><span class="line">  root  你的favicon.ico文件路径;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>清理缓存，重启浏览器即可看到图标显示了。</p><h3 id="4-2-跨域"><a href="#4-2-跨域" class="headerlink" title="4.2 跨域"></a>4.2 跨域</h3><p>已经重复很多次跨域这个问题了😂，这次使用服务器部署Vue项目，配置好代理，就不存在数据有时加载不出来的问题啦。</p><p>首先项目中的链接直接设置为<code>/api</code>开头。</p><p>然后修改<code>nginx.conf</code></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location ~ /api/ &#123;</span><br><span class="line">  proxy_pass API域名(不要带定位符，即单斜杠🤔);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重启Nginx服务器就🆗啦</p><h2 id="5-参考"><a href="#5-参考" class="headerlink" title="5. 参考"></a>5. 参考</h2><ul><li><a href="https://www.cnblogs.com/hyry/p/11927550.html">Linux 部署vue项目(使用nginx)</a></li><li><a href="https://www.jb51.net/article/174383.htm">通过Nginx代理转发配置实现跨域的方法（API代理转发）</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
            <tag> Linux </tag>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux安装NodeJS和Nginx</title>
      <link href="post/9577/"/>
      <url>post/9577/</url>
      
        <content type="html"><![CDATA[<p>忍不住买了腾讯云的服务器😀，准备把之前的音乐播放器部署在服务器上，同时也多熟悉和学习一下Linux。</p><blockquote><p>Linux环境：CentOS 7.6 64位</p></blockquote><h2 id="1-安装NodeJS"><a href="#1-安装NodeJS" class="headerlink" title="1. 安装NodeJS"></a>1. 安装NodeJS</h2><p>由于直接使用yum安装的NodeJS版本太低，所以这里安装从官网下载的最新的NodeJS版本。</p><p>进入<a href="http://nodejs.cn/download/">NodeJS</a>官网，选择<code>Linux二进制文件</code>，复制下载链接</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/299.jpg" alt=""></p><p>在Linux中使用<code>wget</code>下载文件[<code>-c</code>参数表示断点续传]</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -c https://npm.taobao.org/mirrors/node/v14.6.0/node-v14.6.0-linux-x64.tar.xz</span><br></pre></td></tr></table></figure><p>解压文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf node-v14.6.0-linux-x64.tar.xz</span><br></pre></td></tr></table></figure><p>我会把要安装的软件放在<code>/usr/local/application</code>路径下</p><p>移动文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv node-v14.6.0-linux-x64 /usr/<span class="built_in">local</span>/application</span><br></pre></td></tr></table></figure><p>接下来为它设置环境变量，修改<code>/etc/profile</code>文件</p><p><strong>注意：修改重要配置文件前先备份！</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/profile /etc/profile.bak</span><br></pre></td></tr></table></figure><p>然后修改<code>profile</code>文件，添加<code>bin</code>目录的路径到环境变量中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/300.jpg" alt=""></p><p>查看<code>node</code>和<code>npm</code>版本，出现下图所示则安装成功⏰</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/301.jpg" alt=""></p><h2 id="2-安装Nginx"><a href="#2-安装Nginx" class="headerlink" title="2. 安装Nginx"></a>2. 安装Nginx</h2><p>首先安装各种依赖（不是很懂，安就完事了🆗）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#gcc安装，nginx源码编译需要</span></span><br><span class="line">yum install gcc-c++</span><br><span class="line"></span><br><span class="line"><span class="comment">#PCRE pcre-devel 安装，nginx 的 http 模块使用 pcre 来解析正则表达式</span></span><br><span class="line">yum install -y pcre pcre-devel</span><br><span class="line"></span><br><span class="line"><span class="comment">#zlib安装，nginx 使用zlib对http包的内容进行gzip</span></span><br><span class="line">yum install -y zlib zlib-devel</span><br><span class="line"></span><br><span class="line"><span class="comment">#OpenSSL 安装，强大的安全套接字层密码库，nginx 不仅支持 http 协议，还支持 https（即在ssl协议上传输http）</span></span><br><span class="line">yum install -y openssl openssl-devel</span><br></pre></td></tr></table></figure><p>同样地，去<a href="https://nginx.org/en/download.html">Nginx官网</a>获得下载链接</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/303.jpg" alt=""></p><blockquote><p>我安装的是1.12版本的，现在的稳定版是1.18🏓</p></blockquote><p>使用<code>wget</code>下载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -c https://nginx.org/download/nginx-1.12.0.tar.gz</span><br></pre></td></tr></table></figure><p>解压文件，并将解压的文件放在<code>/usr/local/application</code>路径下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf nginx-1.12.0.tar.gz</span><br><span class="line">mv nginx-1.12.0 /usr/<span class="built_in">local</span>/application</span><br></pre></td></tr></table></figure><p>切换到<code>nginx-1.12.0</code>文件夹下，使用默认配置并编译安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/application/nginx-1.12.0</span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p>安装完后查询安装路径，一般都是<code>usr/local/nginx</code>👦</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/304.jpg" alt=""></p><p>切换到安装路径下的<code>sbin</code>文件夹下，查看Nginx版本</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/305.jpg" alt=""></p><p>安装成功啦🔗</p><blockquote><p>Nginx一些常用指令（当前路径都需要在<code>sbin</code>路径下）：<br>启动：./nginx<br>停止：./nginx -s stop<br>重新载入配置：./nginx -s reload</p></blockquote><p>启动后，输入服务器公网IP看到如下界面，则启动成功~</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/302.jpg" alt=""></p><h2 id="3-参考"><a href="#3-参考" class="headerlink" title="3. 参考"></a>3. 参考</h2><ul><li><a href="https://www.cnblogs.com/sirdong/p/11447739.html">Linux系统安装Nodejs</a></li><li><a href="https://www.cnblogs.com/liujuncm5/p/6713784.html">CentOS 7 下安装 Nginx</a></li><li><a href="https://my.oschina.net/yueshengwujie/blog/3099219">centos7安装Nginx、使用nginx记录</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> Nginx </tag>
            
            <tag> NodeJS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Vue-Cli的踩坑笔记</title>
      <link href="post/f964/"/>
      <url>post/f964/</url>
      
        <content type="html"><![CDATA[<h2 id="1-使用webpack创建Vue项目"><a href="#1-使用webpack创建Vue项目" class="headerlink" title="1. 使用webpack创建Vue项目"></a>1. 使用webpack创建Vue项目</h2><p>最开始我是用<code>vue ui</code>来创建一个Vue项目结构的，发现这样得到的目录结构和网上教程的结构不一样，没有<code>config</code>文件夹，对于开发环境和生产环境的设置都不方便，于是使用webpack来创建Vue项目。</p><p>使用<code>vue init webpack 项目名</code>指令来创建一个Vue项目。</p><div class="note warning no-icon flat"><p>有可能使用上述命令后会遇到这个错误：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Command vue init requires a global addon to be installed.</span><br><span class="line">Please run npm install -g @vue&#x2F;cli-init and try again.</span><br></pre></td></tr></table></figure><br>意思是如果你要使用命令vue init还需在全局下安装cli-init。<br>安装cli-init <code>cnpm install -g @vue/cli-init</code></p></div><p>就可以得到一个如下目录的Vue项目啦</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/296.jpg" alt=""></p><p>执行<code>npm run dev</code>在本地启动项目。</p><h2 id="2-修改项目名称"><a href="#2-修改项目名称" class="headerlink" title="2. 修改项目名称"></a>2. 修改项目名称</h2><p>最开始新建项目的时候把项目名取错了😅（不是文件夹名称😭）。修改的话需要改<code>package.json</code>和<code>index.html</code>中的项目名，然后在项目根目录下执行<code>cnpm i</code>重新安装依赖就🆗了。</p><h2 id="3-跨域问题"><a href="#3-跨域问题" class="headerlink" title="3. 跨域问题"></a>3. 跨域问题</h2><p>之前写过一篇博客记录了跨域的问题——<a href="https://shenshilei1022.gitee.io/post/dfad/">解决Vue使用Api时的跨域问题</a>。这样只能在开发环境中解决跨域问题，项目打包后是不起作用的。而且不在目前的项目结构中适用🎈。</p><h3 id="3-1-开发环境"><a href="#3-1-开发环境" class="headerlink" title="3.1 开发环境"></a>3.1 开发环境</h3><p>打开 config - index.js，将下面代码添加到<code>proxyTable</code>中</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">  target: <span class="string">&#x27;api地址&#x27;</span>,</span><br><span class="line">  <span class="comment">// 允许跨域</span></span><br><span class="line">  changeOrigin: <span class="literal">true</span>,</span><br><span class="line">  ws: <span class="literal">true</span>,</span><br><span class="line">  pathRewrite: &#123;</span><br><span class="line">      <span class="string">&#x27;^/api&#x27;</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-2-生产环境"><a href="#3-2-生产环境" class="headerlink" title="3.2 生产环境"></a>3.2 生产环境</h3><p>项目打包后，Vue-Cli就不起作用了，自然之前配置的代理也就无效了。一般解决生产环境跨域问题是使用<code>nginx</code>配置代理，因为我这里没有部署到服务器上😐，所以采用生产环境将调用Api链接补全的方式解决这个问题（治标不治本😭）</p><p>在<code>main.js</code>中设置一个全局函数</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Vue.prototype.getUrl = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">return</span> process.env.NODE_ENV === <span class="string">&#x27;production&#x27;</span> ? <span class="string">&#x27;api地址&#x27;</span> : <span class="string">&#x27;/api/&#x27;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用Api时链接格式为<code>this.getUrl() + &#39;后续链接&#39;</code></p><p>这样就可以根据当前环境拿到不同的链接了。</p><h2 id="4-项目打包"><a href="#4-项目打包" class="headerlink" title="4. 项目打包"></a>4. 项目打包</h2><p>执行<code>npm run build</code>将项目打包，打包后的文件在项目根目录下<code>dist</code>文件内。</p><h3 id="4-1-项目出现空白"><a href="#4-1-项目出现空白" class="headerlink" title="4.1 项目出现空白"></a>4.1 项目出现空白</h3><p>启动打包后的项目发现浏览器中什么内容也没有😣。可以将 config - index.js 中<code>build</code>下<code>assetsPublicPath</code>的值改为<code>./</code>，让它从打包后的当前路径下寻找资源，而不是根目录。</p><h3 id="4-2-element-UI样式丢失"><a href="#4-2-element-UI样式丢失" class="headerlink" title="4.2 element-UI样式丢失"></a>4.2 element-UI样式丢失</h3><p>打包后发现使用的element-UI部分样式丢失，这同样也是路径的问题。打开 build - util.js, 添加如下代码</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/297.jpg" alt=""></p><blockquote><p>这里要使用element-UI还需要在<code>main.js</code>中引入对应的CSS样式 <code>import &#39;element-ui/lib/theme-chalk/index.css&#39;</code></p></blockquote><h3 id="4-3-网站图标"><a href="#4-3-网站图标" class="headerlink" title="4.3 网站图标"></a>4.3 网站图标</h3><p>把<code>favicon.ico</code>放在项目根目录中，<code>build</code>文件夹下的<code>webpack.dev.conf.js</code>和<code>webpack.prod.conf.js</code>都做如下修改即可</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/298.jpg" alt=""></p><h2 id="5-参考"><a href="#5-参考" class="headerlink" title="5. 参考"></a>5. 参考</h2><ul><li><a href="https://moechu.cn/2019/11/09/110.html">Vue.js 解决开发生产环境跨域</a></li><li><a href="https://blog.csdn.net/thankseveryday/article/details/90263579">使用命令”vue init webpack 项目名称”出错</a></li><li><a href="https://www.cnblogs.com/yjiangling/p/12922314.html">vue采坑：vue项目打包后，elementUI 部分样式失效</a></li><li><a href="https://www.cnblogs.com/lvxj-litchi/p/11827560.html">VUE添加网站favicon.ico图标</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue组件之间传递数据</title>
      <link href="post/2df2/"/>
      <url>post/2df2/</url>
      
        <content type="html"><![CDATA[<p>写播放器项目时，需要将播放链接从推荐组件传到播放器组件，但它们的关系又是下图这样的😓</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/293.jpg" alt=""></p><p>没有父子关系，Vue也没有为这种非父子关系的组件提供传输数据的方法，于是搜索到使用公共bus组件来完成这一操作，记录下来。</p><h2 id="1-新建eventBus-js"><a href="#1-新建eventBus-js" class="headerlink" title="1. 新建eventBus.js"></a>1. 新建eventBus.js</h2><p>在项目根路径下新建<code>eventBus.js</code>，内容为</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">&#x27;vue&#x27;</span></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Vue()</span><br></pre></td></tr></table></figure><h2 id="2-emit方法存入数据"><a href="#2-emit方法存入数据" class="headerlink" title="2. $emit方法存入数据"></a>2. $emit方法存入数据</h2><p>这里我在推荐组件中存入播放链接</p><p>先导入<code>bus</code></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> bus <span class="keyword">from</span> <span class="string">&#x27;../../eventBus.js&#x27;</span></span><br></pre></td></tr></table></figure><p>然后使用<code>$emit</code>方法存入数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bus.$emit(<span class="string">&#x27;data&#x27;</span>, url)</span><br></pre></td></tr></table></figure><h2 id="3-on方法使用数据"><a href="#3-on方法使用数据" class="headerlink" title="3. $on方法使用数据"></a>3. $on方法使用数据</h2><p>同样需要导入<code>bus</code></p><blockquote><p>这里通常挂载监听在Vue生命周期created和mounted当中的一个.</p></blockquote><p>切换到播放器组件，在mounted钩子函数中使用<code>$on</code>方法调用数据</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bus.$on(<span class="string">&#x27;data&#x27;</span>, <span class="function">(<span class="params">url</span>) =&gt;</span> &#123;</span><br><span class="line">  <span class="built_in">this</span>.url = url</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-清除eventBus"><a href="#4-清除eventBus" class="headerlink" title="4. 清除eventBus"></a>4. 清除eventBus</h2><p>最后，在<code>beforeDestroy</code>或者<code>destroyed</code>中用Vue实例的<code>$off</code>方法清楚eventBus</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bus.$off(<span class="string">&#x27;data&#x27;</span>)</span><br></pre></td></tr></table></figure><div class="note warning flat"><p>因为不手动清除，它是会一直存在的。这样的话，就会出现反复进入到传递数据的组件内获取数据的问题，原本只执行一次的获取的操作将会执行多次。项目大了的话是会影响性能的👀，反正记得清楚事件总线。</p></div><h2 id="5-参考"><a href="#5-参考" class="headerlink" title="5. 参考"></a>5. 参考</h2><ul><li><a href="https://www.cnblogs.com/singerlee-changealive/p/10519822.html">vue中央事件总线eventBus的简单理解和使用</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决Vue使用Api时的跨域问题</title>
      <link href="post/dfad/"/>
      <url>post/dfad/</url>
      
        <content type="html"><![CDATA[<p>最近使用Vue做一个音乐播放器小项目，在本地测试时发现调用Api控制台总会报错。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/291.jpg" alt=""></p><p>记录一下解决问题的过程。</p><h2 id="1-问题原因"><a href="#1-问题原因" class="headerlink" title="1. 问题原因"></a>1. 问题原因</h2><blockquote><p>跨域：指的是浏览器不能执行其它网站的脚本，它是由浏览器同源策略造成的，是浏览器对javascript施加的安全限制。</p><p>同源策略：是指协议、域名、端口都要相同，其中有一个不同都会造成跨域，在请求数据时，浏览器会在控制台中报一个异常，提示拒绝访问。</p></blockquote><p>比如这里我在本地测试使用的地址是<code>http://localhost:8000</code>，而我使用的Api却是<code>https</code>协议，就会造成跨域问题。</p><h2 id="2-解决跨域问题"><a href="#2-解决跨域问题" class="headerlink" title="2. 解决跨域问题"></a>2. 解决跨域问题</h2><h3 id="2-1-配置baseURL"><a href="#2-1-配置baseURL" class="headerlink" title="2.1 配置baseURL"></a>2.1 配置baseURL</h3><p>打开项目根目录下的<code>main.js</code>，添加全局<code>axios</code>和<code>baseURL</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import axios from &#39;axios&#39;</span><br><span class="line"></span><br><span class="line">Vue.config.$axios &#x3D; axios</span><br><span class="line">axios.defaults.baseURL &#x3D; &#39;&#x2F;api&#39;</span><br></pre></td></tr></table></figure><h3 id="2-2-配置vue-config-js"><a href="#2-2-配置vue-config-js" class="headerlink" title="2.2 配置vue.config.js"></a>2.2 配置vue.config.js</h3><p>在项目根目录下新建<code>vue.config.js</code>，添加如下代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">module</span>.exports = &#123;</span><br><span class="line">    devServer: &#123;</span><br><span class="line">        proxy: &#123;</span><br><span class="line">            <span class="string">&#x27;/api&#x27;</span>: &#123;</span><br><span class="line">                target: <span class="string">&#x27;你的api域名&#x27;</span>,</span><br><span class="line">                <span class="comment">// 允许跨域</span></span><br><span class="line">                changeOrigin: <span class="literal">true</span>,</span><br><span class="line">                ws: <span class="literal">true</span>,</span><br><span class="line">                pathRewrite: &#123;</span><br><span class="line">                    <span class="string">&#x27;^/api&#x27;</span>: <span class="string">&#x27;&#x27;</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-3-调用Api"><a href="#2-3-调用Api" class="headerlink" title="2.3 调用Api"></a>2.3 调用Api</h3><div class="note warning flat"><p>做完上两步后，重启一下项目。</p></div><p>打开需要调用Api的地方，将原本需要填的链接改写为<code>/api/......</code>即可。</p><div class="note info flat"><p>举个例子，需要调用的Api是<code>https://www.baidu.com/haha</code>，那么在第二步的<code>target</code>中填写<code>https://www.baidu.com/</code>，第三步调用Api时填写<code>/api/haha</code>就可以啦🙌</p></div><h2 id="3-配置多个跨域目标链接"><a href="#3-配置多个跨域目标链接" class="headerlink" title="3. 配置多个跨域目标链接"></a>3. 配置多个跨域目标链接</h2><blockquote><p>2020/7/19更新</p></blockquote><p>修改<code>vue.config.js</code>配置文件，在<code>proxy</code>中添加并列的api域名，这里需要注意的是，如果第一个简称是<code>/api</code>了，那么后面添加的简称就不要在包含<code>api</code>字样，否则会不起作用👊。</p><h2 id="4-参考"><a href="#4-参考" class="headerlink" title="4. 参考"></a>4. 参考</h2><ul><li><a href="https://www.cnblogs.com/l-y-h/p/11815452.html">axios解决跨域问题（vue-cli3.0）</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> Vue </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly主题添加文章统计页面</title>
      <link href="post/eb7e/"/>
      <url>post/eb7e/</url>
      
        <content type="html"><![CDATA[<p>网上冲浪的时候看到<a href="https://cndrew.cn/analytics/">Uncle_drew</a>的文章数据分析界面，样式好看的同时功能也挺强大，琢磨着给自己也加一个。看了他的教程——<a href="https://cndrew.cn/2020/03/03/post-charts/">花里胡哨的Hexo | 给你的hexo博客加上文章分析</a>之后我发现可太难了🤒，原因就是大佬使用的主题用的是ejs模板，而我用的Butterfly主题使用了pug模板，教程中的代码不能直接套用。因为不是很熟悉pug的写法，本来想放弃的，但还是抱着试一试的心态做了下来🤔值得夸奖哈哈</p><h2 id="1-遇到的问题"><a href="#1-遇到的问题" class="headerlink" title="1. 遇到的问题"></a>1. 遇到的问题</h2><div class="note primary no-icon flat"><p>如何在pug模板文件中使用JS或CSS？</p></div><p>也怪我看官方文档不仔细，翻了翻主题里源文件才知道，只写一个script或style标签是无法达到目的的，需要在标签后紧跟一个<code>.</code>，即可在后面书写JS或CSS语句了。</p><p>传送门：<a href="https://www.pugjs.cn/language/plain-text.html">https://www.pugjs.cn/language/plain-text.html</a></p><div class="note primary no-icon flat"><p>如何在script内部使用Hexo的内置变量获取博客信息？</p></div><p>这也是我翻主题源文件学到的（这方面信息太少😥），使用<code>#&#123; 变量名 &#125;</code>的格式获取外部的变量内容。而且这里的变量和我看的教程的也不尽相同，比如教程中的<code>site.posts</code>在这里要使用<code>site.posts.data</code>，其它的也同理。</p><blockquote><p>这两个问题最开始的时候困扰了我好久，最终也是通过自己解决了，开心~</p></blockquote><h2 id="2-实现"><a href="#2-实现" class="headerlink" title="2. 实现"></a>2. 实现</h2><p>解决了上面两个问题之后，实现效果就变得比较容易了。基本的画图逻辑和教程中的相同，有一个旭日图我是自己判断分类关系重新修改代码画的😛。</p><p>新建页面<code>analytics</code>，<code>index.md</code>的内容改为：</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章数据统计</span><br><span class="line">date: 2020-07-12 18:26:21</span><br><span class="line">aside: false</span><br><span class="line">comments: false</span><br><span class="line">type: &quot;analytics&quot;</span><br><span class="line">top<span class="emphasis">_img: </span></span><br><span class="line"><span class="emphasis">---</span></span><br><span class="line"><span class="emphasis"></span></span><br></pre></td></tr></table></figure><p>进入主题目录，打开 layout - page.pug，在判断语句中添加一条判断</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">else if page.type &#x3D;&#x3D;&#x3D; &#39;analytics&#39;</span><br><span class="line">  include analytics.pug</span><br></pre></td></tr></table></figure><p>核心内容就在<code>analytics.pug</code>中进行，新建<code>analytics.pug</code>文件在<code>page.pug</code>的同级目录下，复制下面代码就可以了</p><blockquote><p>这里我获得数据的方法还是比较笨，如果有小伙伴有好的方法可以在下面评论呀🙂</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br></pre></td><td class="code"><pre><span class="line">#charts</span><br><span class="line">  #posts-chart(style&#x3D;&quot;width: 100%;height:500px;&quot;)</span><br><span class="line">  #categories-chart(style&#x3D;&quot;width: 100%;height:500px;&quot;)</span><br><span class="line">  #tags-chart(style&#x3D;&quot;width: 100%;height:500px;&quot;)</span><br><span class="line">  - var postDate &#x3D; &quot;&quot;</span><br><span class="line">    each post, index in site.posts.data</span><br><span class="line">      if index &#x3D;&#x3D;&#x3D; site.posts.length-1</span><br><span class="line">        - postDate &#x3D; postDate + post.date.format(&#39;YYYY-MM&#39;)</span><br><span class="line">      else</span><br><span class="line">        - postDate &#x3D; postDate + post.date.format(&#39;YYYY-MM&#39;) + &quot;,&quot;</span><br><span class="line">  - var categoryName &#x3D; &quot;&quot;</span><br><span class="line">  - var categoryLength &#x3D; &quot;&quot;</span><br><span class="line">  - var categoryParent &#x3D; &quot;&quot;</span><br><span class="line">  - var categoryId &#x3D; &quot;&quot;</span><br><span class="line">    each category, index in site.categories.data</span><br><span class="line">      if index &#x3D;&#x3D;&#x3D; site.categories.length-1</span><br><span class="line">        - categoryName &#x3D; categoryName + category.name</span><br><span class="line">        - categoryLength &#x3D; categoryLength + category.length</span><br><span class="line">        - categoryParent &#x3D; categoryParent + category.parent</span><br><span class="line">        - categoryId &#x3D; categoryId + category._id</span><br><span class="line">      else</span><br><span class="line">        - categoryName &#x3D; categoryName + category.name + &quot;,&quot;</span><br><span class="line">        - categoryLength &#x3D; categoryLength + category.length + &quot;,&quot;</span><br><span class="line">        - categoryParent &#x3D; categoryParent + category.parent + &quot;,&quot;</span><br><span class="line">        - categoryId &#x3D; categoryId + category._id + &quot;,&quot;</span><br><span class="line">  - var tagName &#x3D; &quot;&quot;</span><br><span class="line">  - var tagLength &#x3D; &quot;&quot;</span><br><span class="line">    each tag, index in site.tags.data</span><br><span class="line">      if index &#x3D;&#x3D;&#x3D; site.tags.length-1</span><br><span class="line">        - tagName &#x3D; tagName + tag.name</span><br><span class="line">        - tagLength &#x3D; tagLength + tag.length</span><br><span class="line">      else</span><br><span class="line">        - tagName &#x3D; tagName + tag.name + &quot;,&quot;</span><br><span class="line">        - tagLength &#x3D; tagLength + tag.length + &quot;,&quot;</span><br><span class="line"></span><br><span class="line">script(src&#x3D;&quot;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;echarts&#x2F;dist&#x2F;echarts.min.js&quot;)</span><br><span class="line">script(src&#x3D;&quot;http:&#x2F;&#x2F;cdn.staticfile.org&#x2F;moment.js&#x2F;2.24.0&#x2F;moment.js&quot;)</span><br><span class="line">script.</span><br><span class="line">  &#x2F;&#x2F; 基于准备好的dom，初始化echarts实例</span><br><span class="line">  let postsChart &#x3D; echarts.init(document.getElementById(&#39;posts-chart&#39;));</span><br><span class="line">  let categoriesChart &#x3D; echarts.init(document.getElementById(&#39;categories-chart&#39;));</span><br><span class="line">  let tagsChart &#x3D; echarts.init(document.getElementById(&#39;tags-chart&#39;));</span><br><span class="line"></span><br><span class="line">  &#x2F;* calculate postsOption data. *&#x2F;</span><br><span class="line">  var startDate &#x3D; moment().subtract(1, &#39;years&#39;).startOf(&#39;month&#39;);</span><br><span class="line">  var endDate &#x3D; moment().endOf(&#39;month&#39;);</span><br><span class="line"></span><br><span class="line">  var monthMap &#x3D; new Map();</span><br><span class="line">  var dayTime &#x3D; 3600 * 24 * 1000;</span><br><span class="line">  for (var time &#x3D; startDate; time &lt;&#x3D; endDate; time +&#x3D; dayTime) &#123;</span><br><span class="line">    var month &#x3D; moment(time).format(&#39;YYYY-MM&#39;);</span><br><span class="line">    if (!monthMap.has(month)) &#123;</span><br><span class="line">      monthMap.set(month, 0);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  var postDate &#x3D; &#39;#&#123; postDate &#125;&#39;;</span><br><span class="line">  var postDateArr &#x3D; postDate.split(&quot;,&quot;);</span><br><span class="line">  </span><br><span class="line">  for (let i &#x3D; 0; i &lt; postDateArr.length; i++) &#123;</span><br><span class="line">    if (monthMap.has(postDateArr[i])) &#123;</span><br><span class="line">      monthMap.set(postDateArr[i], monthMap.get(postDateArr[i])+1)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  var monthArr &#x3D; Array.from(monthMap.keys());</span><br><span class="line">  var monthValueArr &#x3D; Array.from(monthMap.values());</span><br><span class="line"></span><br><span class="line">  let postsOption &#x3D; &#123;</span><br><span class="line">        title: &#123;</span><br><span class="line">            text: &#39;文章发布统计图&#39;,</span><br><span class="line">            top: 0,</span><br><span class="line">            x: &#39;center&#39;</span><br><span class="line">        &#125;,</span><br><span class="line">        tooltip: &#123;</span><br><span class="line">            trigger: &#39;axis&#39;</span><br><span class="line">        &#125;,</span><br><span class="line">        xAxis: &#123;</span><br><span class="line">            type: &#39;category&#39;,</span><br><span class="line">            data: monthArr</span><br><span class="line">        &#125;,</span><br><span class="line">        yAxis: &#123;</span><br><span class="line">            type: &#39;value&#39;,</span><br><span class="line">        &#125;,</span><br><span class="line">        series: [</span><br><span class="line">            &#123;</span><br><span class="line">                name: &#39;postsNumberName&#39;,</span><br><span class="line">                type: &#39;line&#39;,</span><br><span class="line">                color: [&#39;#6772e5&#39;],</span><br><span class="line">                data: monthValueArr,</span><br><span class="line">                lineStyle: &#123;</span><br><span class="line">                  width: 2.5</span><br><span class="line">                &#125;,</span><br><span class="line">                markPoint: &#123;</span><br><span class="line">                  symbolSize: 45,</span><br><span class="line">                  color: [&#39;#fa755a&#39;,&#39;#3ecf8e&#39;,&#39;#82d3f4&#39;],</span><br><span class="line">                  data: [&#123;</span><br><span class="line">                      type: &#39;max&#39;,</span><br><span class="line">                      itemStyle: &#123;color: [&#39;#3ecf8e&#39;]&#125;,</span><br><span class="line">                      name: &#39;maximum&#39;</span><br><span class="line">                  &#125;, &#123;</span><br><span class="line">                      type: &#39;min&#39;,</span><br><span class="line">                      itemStyle: &#123;color: [&#39;#fa755a&#39;]&#125;,</span><br><span class="line">                      name: &#39;minimum&#39;</span><br><span class="line">                  &#125;]</span><br><span class="line">                &#125;,</span><br><span class="line">                markLine: &#123;</span><br><span class="line">                  itemStyle: &#123;color: [&#39;#ab47bc&#39;]&#125;,</span><br><span class="line">                  data: [</span><br><span class="line">                      &#123;type: &#39;average&#39;, name: &#39;average&#39;&#125;</span><br><span class="line">                  ]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">  &#x2F;* calculate categoriesOption data. *&#x2F;</span><br><span class="line">  var categoryArr &#x3D; [];</span><br><span class="line">  var categoryName &#x3D; &#39;#&#123; categoryName &#125;&#39;;</span><br><span class="line">  var categoryNameArr &#x3D; categoryName.split(&quot;,&quot;);</span><br><span class="line">  var categoryLength &#x3D; &#39;#&#123; categoryLength &#125;&#39;;</span><br><span class="line">  var categoryLengthArr &#x3D; categoryLength.split(&quot;,&quot;);</span><br><span class="line">  var categoryLengthArr &#x3D; categoryLengthArr.map(Number);</span><br><span class="line">  var categoryParent &#x3D; &#39;#&#123; categoryParent &#125;&#39;;</span><br><span class="line">  var categoryParentArr &#x3D; categoryParent.split(&quot;,&quot;);</span><br><span class="line">  var categoryId &#x3D; &#39;#&#123; categoryId &#125;&#39;;</span><br><span class="line">  var categoryIdArr &#x3D; categoryId.split(&quot;,&quot;);</span><br><span class="line"></span><br><span class="line">  for (let i &#x3D; 0; i &lt; categoryNameArr.length; i++) &#123;</span><br><span class="line">    categoryArr.push(&#123;name: categoryNameArr[i], value: categoryLengthArr[i], id: categoryIdArr[i], parent: categoryParentArr[i]&#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  var childMap &#x3D; new Map();</span><br><span class="line">  var parentArr &#x3D; [];</span><br><span class="line"></span><br><span class="line">  &#x2F;* 分开子母分类 *&#x2F;</span><br><span class="line">  for (let i &#x3D; 0; i &lt; categoryArr.length; i++) &#123;</span><br><span class="line">    if (categoryArr[i][&#39;parent&#39;] !&#x3D; &#39;undefined&#39;) &#123;</span><br><span class="line">      if (childMap.has(categoryArr[i][&#39;parent&#39;])) &#123;</span><br><span class="line">        child &#x3D; childMap.get(categoryArr[i][&#39;parent&#39;]);</span><br><span class="line">        child.push(&#123;name: categoryNameArr[i], value: categoryLengthArr[i]&#125;);</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">        childMap.set(categoryArr[i][&#39;parent&#39;], [&#123;name: categoryNameArr[i], value: categoryLengthArr[i]&#125;]);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      parentArr.push(&#123;name: categoryNameArr[i], value: categoryLengthArr[i], id: categoryIdArr[i]&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  for (let i &#x3D; 0; i &lt; parentArr.length; i++) &#123;</span><br><span class="line">    if (childMap.has(parentArr[i][&#39;id&#39;])) &#123;</span><br><span class="line">      child &#x3D; childMap.get(parentArr[i][&#39;id&#39;]);</span><br><span class="line">      parentArr[i][&#39;children&#39;] &#x3D; child;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  let categoriesOption &#x3D; &#123;</span><br><span class="line">    title: &#123;</span><br><span class="line">        text: &#39;文章分类统计图&#39;,</span><br><span class="line">        top: 1,</span><br><span class="line">        x: &#39;center&#39;</span><br><span class="line">    &#125;,</span><br><span class="line">    tooltip: &#123;</span><br><span class="line">            trigger: &#39;item&#39;,</span><br><span class="line">            formatter: &quot;categories &lt;br&#x2F;&gt;&#123;b&#125; : &#123;c&#125;&quot;</span><br><span class="line">        &#125;,</span><br><span class="line">    series: [</span><br><span class="line">        &#123;</span><br><span class="line">            type: &#39;sunburst&#39;,</span><br><span class="line">            radius: [&#39;10%&#39;, &#39;85%&#39;],</span><br><span class="line">            center: [&#39;50%&#39;, &#39;55%&#39;],</span><br><span class="line">            data: parentArr,</span><br><span class="line">            label: &#123;</span><br><span class="line">              align: &#39;center&#39;</span><br><span class="line">            &#125;,</span><br><span class="line">            itemStyle: &#123;</span><br><span class="line">              opacity: 0.95</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    color: [&#39;#37a2da&#39;, &#39;#67e0e3&#39;, &#39;#9fe6b8&#39;, &#39;#ffdb5c&#39;,&#39;#ff9f7f&#39;, &#39;#ca8622&#39;, &#39;#9d96f5&#39;,&#39;#8378ea&#39;, &#39;#96bfff&#39;]</span><br><span class="line">  &#125;;</span><br><span class="line">  &#x2F;&#x2F; 计算top10标签</span><br><span class="line">  var tagArr &#x3D; [];</span><br><span class="line">  var tagName &#x3D; &#39;#&#123; tagName &#125;&#39;;</span><br><span class="line">  var tagNameArr &#x3D; tagName.split(&quot;,&quot;);</span><br><span class="line">  var tagLength &#x3D; &#39;#&#123; tagLength &#125;&#39;;</span><br><span class="line">  var tagLengthArr &#x3D; tagLength.split(&quot;,&quot;);</span><br><span class="line">  var tagLengthArr &#x3D; tagLengthArr.map(Number);</span><br><span class="line">  </span><br><span class="line">  for (let i &#x3D; 0; i &lt; tagNameArr.length; i++) &#123;</span><br><span class="line">    tagArr.push(&#123;name: tagNameArr[i], value: tagLengthArr[i]&#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  tagArr.sort((a, b) &#x3D;&gt; &#123;return b.value - a.value&#125;);</span><br><span class="line"></span><br><span class="line">  var tagXAxisArr &#x3D; [];</span><br><span class="line">  var tagCountArr &#x3D; [];</span><br><span class="line">  for (var i &#x3D; 0, len &#x3D; Math.min(tagArr.length, 10); i &lt; len; i++) &#123;</span><br><span class="line">    tagXAxisArr.push(tagArr[i].name);</span><br><span class="line">    tagCountArr.push(tagArr[i].value);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  let tagsOption &#x3D; &#123;</span><br><span class="line">        title: &#123;</span><br><span class="line">            text: &#39;Top10标签统计图 &#39;,</span><br><span class="line">            top: 2,</span><br><span class="line">            x: &#39;center&#39;</span><br><span class="line">        &#125;,</span><br><span class="line">        tooltip: &#123;&#125;,</span><br><span class="line">        xAxis: [</span><br><span class="line">            &#123;</span><br><span class="line">                type: &#39;category&#39;,</span><br><span class="line">                data: tagXAxisArr</span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        yAxis: [</span><br><span class="line">            &#123;</span><br><span class="line">                type: &#39;value&#39;</span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        series: [</span><br><span class="line">            &#123;</span><br><span class="line">                type: &#39;bar&#39;,</span><br><span class="line">                color: [&#39;#82d3f4&#39;],</span><br><span class="line">                barWidth : 18,</span><br><span class="line">                data: tagCountArr,</span><br><span class="line">                markPoint: &#123;</span><br><span class="line">                    symbolSize: 45,</span><br><span class="line">                    data: [&#123;</span><br><span class="line">                        type: &#39;max&#39;,</span><br><span class="line">                        itemStyle: &#123;color: [&#39;#3ecf8e&#39;]&#125;,</span><br><span class="line">                        name: &#39;maximum&#39;</span><br><span class="line">                    &#125;, &#123;</span><br><span class="line">                        type: &#39;min&#39;,</span><br><span class="line">                        itemStyle: &#123;color: [&#39;#fa755a&#39;]&#125;,</span><br><span class="line">                        name: &#39;minimum&#39;</span><br><span class="line">                    &#125;],</span><br><span class="line">                &#125;,</span><br><span class="line">                markLine: &#123;</span><br><span class="line">                    itemStyle: &#123;color: [&#39;#ab47bc&#39;]&#125;,</span><br><span class="line">                    data: [</span><br><span class="line">                        &#123;type: &#39;average&#39;, name: &#39;average&#39;&#125;</span><br><span class="line">                    ]</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        ]</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  &#x2F;&#x2F; 使用刚指定的配置项和数据显示图表。</span><br><span class="line">  postsChart.setOption(postsOption);</span><br><span class="line">  categoriesChart.setOption(categoriesOption);</span><br><span class="line">  tagsChart.setOption(tagsOption);</span><br></pre></td></tr></table></figure><p>效果如下：</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/288.png" alt=""></p><h2 id="3-参考"><a href="#3-参考" class="headerlink" title="3. 参考"></a>3. 参考</h2><ul><li><a href="https://cndrew.cn/2020/03/03/post-charts/">花里胡哨的Hexo | 给你的hexo博客加上文章分析</a></li><li><a href="http://momentjs.cn/">Moment.js</a></li><li><a href="https://echarts.apache.org/zh/index.html">ECHARTS</a></li><li><a href="https://www.pugjs.cn/api/getting-started.html">Pug 模板引擎中文文档</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo添加说说页面</title>
      <link href="post/b72c/"/>
      <url>post/b72c/</url>
      
        <content type="html"><![CDATA[<p>利用<a href="https://artitalk.js.org/">Artitalk.js</a>拥有自己的说说页面，可在线发布、删除说说😀</p><p>目前效果：</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/278.jpg" alt=""></p><p>可以参考以下我的配置流程🙌</p><h2 id="1-LeanCloud国际版"><a href="#1-LeanCloud国际版" class="headerlink" title="1. LeanCloud国际版"></a>1. LeanCloud国际版</h2><p>打开<a href="https://console.leancloud.app/login.html#/signin">LeanCloud国际版</a>，注册账号，创建应用，这些都说过很多次啦，就不赘述了👀</p><p>创建好应用artitalk之后，进入应用设置</p><p>选择 存储 - 结构化数据 - _User - 添加行，添加用户名和密码，到时候在线发布说说需要用到。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/279.jpg" alt=""></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/280.jpg" alt=""></p><p>设置好用户之后，选择 添加列，列名称填img，默认值填说说要使用的头像链接，不设置的话默认为Artitalk的默认头像😀</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/281.jpg" alt=""></p><p>修改_User的权限，将增删改查的权限都设置为指定用户（刚刚设置的那个用户）</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/282.jpg" alt=""></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/283.jpg" alt=""></p><p>修改完之后权限如下显示</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/284.jpg" alt=""></p><p>同样地，还需要新建shuoshuo类，也将权限改为与上述相同。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/285.jpg" alt=""></p><p>到这里LeanCloud的工作就准备好啦。</p><div class="note warning flat"><p>❗ 关于设置权限的这几步</p><p>这几步一定要设置好，才可以保证不被“闲人”破解发布说说的验证</p></div><h2 id="2-博客设置"><a href="#2-博客设置" class="headerlink" title="2. 博客设置"></a>2. 博客设置</h2><p>创建artitalk页面，在index.md中做如下设置</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 说说</span><br><span class="line">noDate: true</span><br><span class="line">comments: false</span><br><span class="line">aside: false</span><br><span class="line">top<span class="emphasis">_img: https://gitee.com/shenshilei1022/hugo_</span>image<span class="emphasis">_resource/raw/master/imgs/277.jpg</span></span><br><span class="line"><span class="emphasis">---</span></span><br><span class="line"><span class="emphasis"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://libs.baidu.com/jquery/2.0.0/jquery.min.js&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">    &#123;% raw %&#125;</span></span><br><span class="line"><span class="emphasis">    <span class="xml"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">    var appID = &quot;你的LeanCloud应用appID&quot;;</span></span><br><span class="line"><span class="emphasis">    var appKEY = &quot;你的LeanCloud应用appKEY&quot;;</span></span><br><span class="line"><span class="emphasis">    var per = &quot;5&quot;; //每页显示说说的数量</span></span><br><span class="line"><span class="emphasis">    var username = &quot;shenshilei&quot;; //Leancloud中设置的用户名</span></span><br><span class="line"><span class="emphasis">    var placeholder1=&quot;只有shenshilei才能发布哦~&quot;; //在编辑说说的输入框中的占位符</span></span><br><span class="line"><span class="emphasis">    var placeholder2=&quot;没有密码，不能发布！&quot;;  //在编辑密码的输入框中的占位符</span></span><br><span class="line"><span class="emphasis">    var lazy = 1; //是否开启懒加载动画</span></span><br><span class="line"><span class="emphasis">    var bgimg = &quot;https://gitee.com/shenshilei1022/hugo_</span>image<span class="emphasis">_resource/raw/master/imgs/214.jpg&quot;; //背景动画</span></span><br><span class="line"><span class="emphasis">    var color1 = &quot;linear-gradient(60deg,rgba(255,165,150,.5),rgba(0,228,255,.35))&quot;;</span></span><br><span class="line"><span class="emphasis">    var color2 = &quot;linear-gradient(60deg,rgba(255,165,150,.5),rgba(0,228,255,.35))&quot;;</span></span><br><span class="line"><span class="emphasis">    var color3 = &quot;#000&quot;;</span></span><br><span class="line"><span class="emphasis">    <span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">    &#123;% endraw %&#125;</span></span><br><span class="line"><span class="emphasis">    <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;artitalk_main&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">    <span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/artitalk&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span></span><br></pre></td></tr></table></figure><p>更详细的配置请参阅官方文档——<a href="https://artitalk.js.org/settings.html#%E5%BF%85%E5%A1%AB">Artitalk-配置项</a></p><p>现在在博客中切换到对应的路径就会显示说说页面咯~</p><h2 id="3-参考"><a href="#3-参考" class="headerlink" title="3. 参考"></a>3. 参考</h2><ul><li><a href="https://artitalk.js.org/">Artitalk.js</a></li><li><a href="https://cungudafa.top/post/96c.html#3-%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE">hexo（butterfly）添加说说页面（Artitalk可在线发布）</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 说说 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>解决Valine因流控原因而唤醒失败的问题</title>
      <link href="post/ac2/"/>
      <url>post/ac2/</url>
      
        <content type="html"><![CDATA[<p>昨天弄好的时候没发现这个问题，正偷着乐呢，结果今天就遇到了😢。因为很多人博客的评论都一个点开始唤醒，所以官方对免费版有了这个限制。看了网上的博客——<a href="https://www.aimtao.net/slef-wake-leancloud/">Gtihub Action｜一行命令解决 LeanCloud 流控问题</a>，准备使用Github Actions来解决这个问题。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/271.jpg" alt=""></p><h2 id="1-思路"><a href="#1-思路" class="headerlink" title="1. 思路"></a>1. 思路</h2><p>唤醒这个实例，也就是通过浏览器输入之前绑定的域名来访问它，实际上也就是向那个网络地址发送一个请求。再将这个动作做一个定时，让它帮我们按时去唤醒就好啦⏰</p><h2 id="2-解决方法"><a href="#2-解决方法" class="headerlink" title="2. 解决方法"></a>2. 解决方法</h2><h3 id="2-1-配置Github-Actions"><a href="#2-1-配置Github-Actions" class="headerlink" title="2.1 配置Github Actions"></a>2.1 配置Github Actions</h3><p>触发Github Actions需要在项目仓库新建一个<code>.github/workflows</code>子目录，里面是<strong>YAML</strong>配置文件，文件名可以随便取。Github只要发现该配置文件，就会运行Actions。</p><h3 id="2-2-写配置文件"><a href="#2-2-写配置文件" class="headerlink" title="2.2 写配置文件"></a>2.2 写配置文件</h3><h4 id="2-2-1-触发条件"><a href="#2-2-1-触发条件" class="headerlink" title="2.2.1 触发条件"></a>2.2.1 触发条件</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">name:</span> <span class="string">&#x27;Github Actions Wake LeanCloud&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 触发条件</span></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">  <span class="attr">schedule:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">cron:</span> <span class="string">&#x27;*/25 0-15 * * ?&#x27;</span> <span class="comment"># 北京时间 8:00 - 23:59, 每25分钟触发一次</span></span><br></pre></td></tr></table></figure><p>其中，<code>name</code>字段是配置文件的描述，<code>on</code>字段是触发条件。这里指定两种条件触发，一是push到仓库的时候触发；二是定时任务，北京时间 8:00 - 23:59, 每25分钟触发一次。</p><h4 id="2-2-2-运行流程"><a href="#2-2-2-运行流程" class="headerlink" title="2.2.2 运行流程"></a>2.2.2 运行流程</h4><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 运行流程</span></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">curl-my-site:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">&#x27;wake&#x27;</span></span><br><span class="line">        <span class="attr">env:</span> </span><br><span class="line">          <span class="attr">MY_SITE:</span> <span class="string">$&#123;&#123;</span> <span class="string">secrets.SITE</span> <span class="string">&#125;&#125;</span></span><br><span class="line">        <span class="comment"># 发送GET请求</span></span><br><span class="line">        <span class="attr">run:</span></span><br><span class="line">          <span class="string">curl</span> <span class="string">$MY_SITE</span></span><br></pre></td></tr></table></figure><p><code>job</code>字段是运行流程，<code>curl-my-site</code>为流程名，<code>runs-on: ubuntu-latest</code>指运行环境为最新版的Ubuntu，<code>steps</code>字段是流程步骤，这里只有一步<code>wake</code>，功能是向我的二级域名发送GET请求。</p><h3 id="2-2-3-设置秘密环境变量"><a href="#2-2-3-设置秘密环境变量" class="headerlink" title="2.2.3 设置秘密环境变量"></a>2.2.3 设置秘密环境变量</h3><p>将项目推送到Github仓库。</p><p>打开 Settings - Secrets，设置变量 SITE，值为之前国际版给的那个二级域名👍</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/272.jpg" alt=""></p><div class="note primary no-icon flat"><p>项目仓库：<a href="https://github.com/shenshilei1022/wakeLeanCloud.git">https://github.com/shenshilei1022/wakeLeanCloud.git</a></p></div><h2 id="3-参考"><a href="#3-参考" class="headerlink" title="3. 参考"></a>3. 参考</h2><ul><li><a href="https://www.aimtao.net/slef-wake-leancloud/">Gtihub Action｜一行命令解决 LeanCloud 流控问题</a></li><li><a href="http://www.ruanyifeng.com/blog/2019/12/github_actions.html">GitHub Actions 教程：定时发送天气邮件</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Valine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为Valine评论添加邮件通知</title>
      <link href="post/67bb/"/>
      <url>post/67bb/</url>
      
        <content type="html"><![CDATA[<p>这两天在别人博客留下评论之后，有人回复我的话则会自动给我发邮件提醒。这个功能简直太方便了8，于是琢磨琢磨给我的博客中也加上😋</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/259.jpg" alt=""></p><p>由于官方的邮件通知自1.4版本以来就已经下线，这里使用<strong>第三方邮件提醒——<a href="https://github.com/DesertsP/Valine-Admin">Valine-Admin</a></strong></p><div class="note warning flat"><p>为了避免出现不必要的问题，这里使用LeanCloud国际版！（国际版还有二级域名，国内版就没有😖，可惜我的留言和评论了[虽然不多🤒]）</p></div><h2 id="1-国际版LeanCloud"><a href="#1-国际版LeanCloud" class="headerlink" title="1. 国际版LeanCloud"></a>1. 国际版LeanCloud</h2><p>首先创建好应用，这些和国内版没啥区别，之前没了解过的小伙伴可以先看我这篇文章——<a href="https://shenshilei1022.gitee.io/post/e277/">给Hugo个人博客添加Valine评论系统</a></p><p>打开 设置 - 安全中心，服务开关按需打开，将博客主页链接设置到Web安全域名中(<strong>带https的！</strong>)</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/260.jpg" alt=""></p><h2 id="2-环境变量"><a href="#2-环境变量" class="headerlink" title="2. 环境变量"></a>2. 环境变量</h2><p>打开 云引擎 - 设置， 设置环境变量（先设置环境变量，在部署项目就能少部署一次了🤔）</p><p>需要设置的变量有这些：</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/261.jpg" alt=""></p><p>先别急着设置，把页面往下翻翻：</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/262.jpg" alt=""></p><p>可以看到有一个云引擎域名，红色方框中的内容可以随意设置，然后作为云引擎的地址（比国内版良心太多👍）。</p><p>然后设置环境变量，图中除了MAIL_TEMPLATE不是必须设置，其它最好都设置上才不会报错，想要了解更多信息的朋友可以查看github中的官方文档——<a href="https://github.com/DesertsP/Valine-Admin">Valine-Admin</a>。</p><div class="table-container"><table><thead><tr><th>变量</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>ADMIN_URL</td><td>云引擎域名</td><td>例如我这里的<a href="https://shenshilei1022.avosapps.us/">https://shenshilei1022.avosapps.us/</a></td></tr><tr><td>MAIL_TEMPLATE</td><td>回复邮件模板</td><td>模板内容放在下面</td></tr><tr><td>SENDER_EMAIL</td><td>发件邮箱</td><td>自己的邮箱😁</td></tr><tr><td>SENDER_NAME</td><td>发件人</td><td>邮件标题，怎么取都🆗</td></tr><tr><td>SITE_NAME</td><td>博客名称</td><td>ShenShilei’s Blog</td></tr><tr><td>SITE_URL</td><td>博客地址</td><td><a href="https://shenshilei1022.gitee.io/">https://shenshilei1022.gitee.io/</a></td></tr><tr><td>SMTP_PASS</td><td>SMTP登录密码</td><td>去邮箱设置找找SMTP就好啦</td></tr><tr><td>SMTP_SERVICE</td><td>邮箱服务商</td><td>这里我用的QQ邮箱就填QQ</td></tr><tr><td>SMTP_USER</td><td>SMTP登录用户</td><td>还是自己的邮箱😁</td></tr></tbody></table></div><p>提醒邮件使用彩虹模板 </p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/263.jpg" alt=""></p><p>则将MAIL_TEMPLATE的值设置为如下html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;border-radius: 10px 10px 10px 10px;font-size:13px;    color: #555555;width: 666px;font-family:&#x27;Century Gothic&#x27;,&#x27;Trebuchet MS&#x27;,&#x27;Hiragino Sans GB&#x27;,微软雅黑,&#x27;Microsoft Yahei&#x27;,Tahoma,Helvetica,Arial,&#x27;SimSun&#x27;,sans-serif;margin:50px auto;border:1px solid #eee;max-width:100%;background: #ffffff repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 1px 5px rgba(0, 0, 0, 0.15);&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;width:100%;background:#49BDAD;color:#ffffff;border-radius: 10px 10px 0 0;background-image: -moz-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));background-image: -webkit-linear-gradient(0deg, rgb(67, 198, 184), rgb(255, 209, 244));height: 66px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;font-size:15px;word-break:break-all;padding: 23px 32px;margin:0;background-color: hsla(0,0%,100%,.4);border-radius: 10px 10px 0 0;&quot;</span>&gt;</span>您在<span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">&quot;text-decoration:none;color: #ffffff;&quot;</span> <span class="attr">href</span>=<span class="string">&quot;$&#123;SITE_URL&#125;&quot;</span>&gt;</span> $&#123;SITE_NAME&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span>上的留言有新回复啦！<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;margin:40px auto;width:90%&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>$&#123;PARENT_NICK&#125; 同学，您曾在文章上发表评论：<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;&quot;</span>&gt;</span>$&#123;PARENT_COMMENT&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>$&#123;NICK&#125; 给您的回复如下：<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;background: #fafafa repeating-linear-gradient(-45deg,#fff,#fff 1.125rem,transparent 1.125rem,transparent 2.25rem);box-shadow: 0 2px 5px rgba(0, 0, 0, 0.15);margin:20px 0px;padding:15px;border-radius:5px;font-size:14px;color:#555555;&quot;</span>&gt;</span>$&#123;COMMENT&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>您可以点击<span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">&quot;text-decoration:none; color:#12addb&quot;</span> <span class="attr">href</span>=<span class="string">&quot;$&#123;POST_URL&#125;#comments&quot;</span>&gt;</span>查看回复的完整內容<span class="tag">&lt;/<span class="name">a</span>&gt;</span>，欢迎再次光临<span class="tag">&lt;<span class="name">a</span> <span class="attr">style</span>=<span class="string">&quot;text-decoration:none; color:#12addb&quot;</span>                <span class="attr">href</span>=<span class="string">&quot;$&#123;SITE_URL&#125;&quot;</span>&gt;</span> $&#123;SITE_NAME&#125;<span class="tag">&lt;/<span class="name">a</span>&gt;</span>。<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span><span class="css"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span>&#123;<span class="attribute">text-decoration</span>:none&#125;<span class="selector-tag">a</span><span class="selector-pseudo">:visited</span>&#123;<span class="attribute">text-decoration</span>:none&#125;<span class="selector-tag">a</span><span class="selector-pseudo">:hover</span>&#123;<span class="attribute">text-decoration</span>:none&#125;<span class="selector-tag">a</span><span class="selector-pseudo">:active</span>&#123;<span class="attribute">text-decoration</span>:none&#125;</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><p>🆗，保存设置~</p><h2 id="3-部署应用"><a href="#3-部署应用" class="headerlink" title="3. 部署应用"></a>3. 部署应用</h2><p>打开 云引擎 - 部署 - 部署项目</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/264.jpg" alt=""></p><p>选择 Git部署 - 配置Git</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/265.jpg" alt=""></p><p>填写代码库 <a href="https://github.com/DesertsP/Valine-Admin.git">https://github.com/DesertsP/Valine-Admin.git</a> 并保存</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/266.jpg" alt=""></p><p>再点击 部署项目，选择 Git部署，在生产环境中点击<strong>部署</strong></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/267.jpg" alt=""></p><p>此时在博客中留言就会有邮件提醒啦🍾</p><h2 id="3-定时任务"><a href="#3-定时任务" class="headerlink" title="3. 定时任务"></a>3. 定时任务</h2><p>因为用的是免费的嘛，自然有各种各样的限制🤒</p><p>LeanCloud的休眠策略有两个：</p><ol><li>每天必须休眠6个小时</li><li>30分钟没有外部请求则进行休眠</li></ol><p>所以可以设置定时任务，白天8点到24点，间隔25分钟唤醒一下，晚上8个小时让它休眠😎就能满足要求了。</p><p>打开 云引擎 - 定时任务 - 创建定时任务</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/268.jpg" alt=""></p><div class="note default flat"><p>这里是国际版，设置的时间加上八个小时就是北京时间啦。</p></div><p>再设置一个任务，在8点10分统计晚上休眠时的评论，补发邮件。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/269.jpg" alt=""></p><blockquote><p>最近好像LeanCloud有这个问题——因流控原因，通过定时任务唤醒体验版实例失败，建议升级至标准版云引擎实例避免休眠。目前我用这个定时任务还没什么问题，等到发现问题了再使用其它诸如云函数的方法去解决休眠这个问题🤒</p></blockquote><h2 id="4-参考"><a href="#4-参考" class="headerlink" title="4. 参考"></a>4. 参考</h2><ul><li><a href="https://github.com/DesertsP/Valine-Admin">Valine-Admin</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Valine </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly主题使用汇总</title>
      <link href="post/1a0f/"/>
      <url>post/1a0f/</url>
      
        <content type="html"><![CDATA[<p>这里把我使用Butterfly主题所添加的代码、插件和特有的语法做个总结，防止自己忘记了。。。🐱‍🐉</p><h2 id="1-标签外挂-Tag-Plugins语法"><a href="#1-标签外挂-Tag-Plugins语法" class="headerlink" title="1. 标签外挂(Tag Plugins语法)"></a>1. 标签外挂(Tag Plugins语法)</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note default %&#125;</span><br><span class="line">default 提示标签块</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note primary %&#125;</span><br><span class="line">primary 提示标签块</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note success %&#125;</span><br><span class="line">success 提示标签块</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note info %&#125;</span><br><span class="line">info 提示标签块</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note warning %&#125;</span><br><span class="line">warning 提示标签块</span><br><span class="line">&#123;% endnote %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% note danger %&#125;</span><br><span class="line">danger 提示标签块</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure><p><em>效果如下</em></p><div class="note default flat"><p>default 提示标签块</p></div><div class="note primary flat"><p>primary 提示标签块</p></div><div class="note success flat"><p>success 提示标签块</p></div><div class="note info flat"><p>info 提示标签块</p></div><div class="note warning flat"><p>warning 提示标签块</p></div><div class="note danger flat"><p>danger 提示标签块</p></div><h2 id="2-插件使用"><a href="#2-插件使用" class="headerlink" title="2. 插件使用"></a>2. 插件使用</h2><div class="note info no-icon flat"><ul><li><a href="https://github.com/MikeCoder/hexo-blog-encrypt">文章加密插件hexo-blog-encrypt</a><br> <em>安装指令</em> <strong>cnpm install hexo-blog-encrypt —save</strong></li></ul></div><div class="note info no-icon flat"><ul><li><a href="https://github.com/mythsman/hexo-douban">豆瓣插件hexo-douban</a><br> <em>安装指令</em> <strong>cnpm install hexo-douban —save</strong></li></ul></div><div class="note info no-icon flat"><ul><li><a href="https://github.com/HCLonely/hexo-bilibili-bangumi">追番页面插件hexo-bilibili-bangumi</a><br> <em>安装指令</em> <strong>cnpm install hexo-bilibili-bangumi —save</strong></li></ul></div><div class="note info no-icon flat"><ul><li><a href="https://github.com/MikeCoder/hexo-blog-encrypt">文章加密插件hexo-blog-encrypt</a><br> <em>安装指令</em> <strong>cnpm install hexo-blog-encrypt —save</strong></li></ul></div><div class="note info no-icon flat"><ul><li><a href="https://github.com/hexojs/hexo-deployer-git">部署博客插件hexo-deployer-git</a><br> <em>安装指令</em> <strong>cnpm install hexo-deployer-git —save</strong></li></ul></div><div class="note info no-icon flat"><ul><li><a href="https://github.com/rozbo/hexo-abbrlink">短链接插件hexo-abbrlink</a><br> <em>安装指令</em> <strong>cnpm install hexo-abbrlink —save</strong><br> <strong>注意：使用时可能会报错，原因是需要auto_category插件，我的处理方法是在插件中找到报错的代码，注释掉需要auto_category的部分(不想装插件了🤣)</strong><br> 安装好之后 修改博客根目录下的<code>_config.yml</code>文件 <figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">permalink:</span> <span class="string">post/:abbrlink/</span></span><br><span class="line"></span><br><span class="line"><span class="attr">abbrlink:</span></span><br><span class="line"><span class="attr">alg:</span> <span class="string">crc16</span>  <span class="comment"># 算法：crc16(default) and crc32</span></span><br><span class="line"><span class="attr">rep:</span> <span class="string">hex</span>    <span class="comment"># 进制：dec(default) and hex</span></span><br><span class="line"><span class="comment"># 使用crc16已经能生成65535篇文章了，对于个人博客感觉已经够用了</span></span><br><span class="line"><span class="comment"># 使用hex是因为我觉得带字母好看一点</span></span><br></pre></td></tr></table></figure></li></ul></div><div class="note info no-icon flat"><ul><li><a href="https://github.com/next-theme/hexo-generator-indexed">文章置顶插件hexo-generator-indexed</a><br> <em>安装指令</em> <strong>cnpm install hexo-generator-indexed —save</strong><br> 安装后，需要置顶的文章的Front-matter中添加<code>sticky: 1</code>，数字越大表示优先级越高。</li></ul></div><h2 id="3-外部资源引用"><a href="#3-外部资源引用" class="headerlink" title="3. 外部资源引用"></a>3. 外部资源引用</h2><div class="note primary no-icon flat"><ul><li>Aplayer and MetingJS<br>aplayer_css: <a href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css">https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.css</a><br>aplayer_js: <a href="https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js">https://cdn.jsdelivr.net/npm/aplayer/dist/APlayer.min.js</a><br>meting_js: <a href="https://cdn.jsdelivr.net/npm/meting@2/dist/Meting.min.js">https://cdn.jsdelivr.net/npm/meting@2/dist/Meting.min.js</a><br>自己修改的样式aplayer_css: <a href="https://cdn.jsdelivr.net/gh/shenshilei1022/cdn@2.0/css/aplayer/aplayer.css">https://cdn.jsdelivr.net/gh/shenshilei1022/cdn@2.0/css/aplayer/aplayer.css</a></li></ul></div><div class="note primary no-icon flat"><ul><li>代码全屏<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 代码全屏</span></span><br><span class="line">$(<span class="built_in">document</span>).on(<span class="string">&#x27;click&#x27;</span>, <span class="string">&#x27;.highlight-tools&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (e.target !== <span class="built_in">this</span>) <span class="keyword">return</span></span><br><span class="line">  $(<span class="built_in">this</span>).parents(<span class="string">&#x27;figure.highlight&#x27;</span>).toggleClass(<span class="string">&#x27;code-block-fullscreen&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@keyframes</span> elastic</span><br><span class="line">  <span class="number">0%</span></span><br><span class="line">    <span class="attribute">transform:</span>scale(<span class="number">0</span>)</span><br><span class="line">  <span class="number">55%</span></span><br><span class="line">    <span class="attribute">transform:</span>scale(<span class="number">1</span>)</span><br><span class="line">  <span class="number">70%</span></span><br><span class="line">    <span class="attribute">transform:</span>scale(.<span class="number">98</span>)</span><br><span class="line">  <span class="number">100%</span></span><br><span class="line">    <span class="attribute">transform:</span>scale(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">.code-block-fullscreen</span><br><span class="line">  <span class="attribute">position:</span>fixed !important;</span><br><span class="line">  <span class="selector-tag">top</span><span class="selector-pseudo">:0</span>;</span><br><span class="line">  <span class="selector-tag">left</span><span class="selector-pseudo">:0</span>;</span><br><span class="line">  <span class="selector-tag">width</span><span class="selector-pseudo">:100</span>%;</span><br><span class="line">  <span class="selector-tag">height</span><span class="selector-pseudo">:100</span>%;</span><br><span class="line">  <span class="selector-tag">min-width</span><span class="selector-pseudo">:100</span>%;</span><br><span class="line">  <span class="selector-tag">z-index</span><span class="selector-pseudo">:9999999</span>;</span><br><span class="line">  <span class="selector-tag">margin</span><span class="selector-pseudo">:0</span>;</span><br><span class="line">  <span class="selector-tag">animation</span><span class="selector-pseudo">:elastic</span> 1<span class="selector-tag">s</span></span><br></pre></td></tr></table></figure></li></ul></div><div class="note primary no-icon flat"><ul><li>思源宋体 <a href="https://fonts.googleapis.com/css?family=Noto+Serif+SC">https://fonts.googleapis.com/css?family=Noto+Serif+SC</a></li></ul></div><div class="note primary no-icon flat"><ul><li>iconfont图标 <a href="https://at.alicdn.com/t/font_1899713_4kvz7z0r3ee.css">https://at.alicdn.com/t/font_1899713_4kvz7z0r3ee.css</a></li></ul></div><div class="note primary no-icon flat"><ul><li><p>添加鼠标自定义样式 </p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span></span><br><span class="line">  // 自定义鼠标样式</span><br><span class="line">  cursor: url(https://cdn.jsdelivr.net/gh/Justlovesmile/CDN/image/cursor.ico),default</span><br></pre></td></tr></table></figure><p><strong>感谢<a href="https://justlovesmile.top/">Justlovesmile</a>大佬提供的文件🤗</strong></p></li></ul></div><div class="note primary no-icon flat"><ul><li><p>友链样式</p><p><em>flink.pug</em></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#page</span><br><span class="line">.flink#article-container</span><br><span class="line">  if site.data.link</span><br><span class="line">    each i in site.data.link</span><br><span class="line">      if i.class_name</span><br><span class="line">        h2!&#x3D; i.class_name</span><br><span class="line">      if i.class_desc</span><br><span class="line">        .flink-desc!&#x3D;i.class_desc</span><br><span class="line">      .flink-list</span><br><span class="line">        each item in i.link_list</span><br><span class="line">          .flink-list-item(style&#x3D; item.color ? &#96;--primary-color:$&#123;item.color&#125;;border-width:$&#123;item.width&#125;;border-style:$&#123;item.style&#125;;animation: $&#123;item.custom&#125; $&#123;item.time&#125; infinite alternate; background:$&#123;item.background&#125;&#96; : &#39;border-width:0px;border-style:solid;animation: link_custom 0s infinite alternate;background:0&#39;)</span><br><span class="line">            a(href&#x3D;url_for(item.link)  title&#x3D;item.name target&#x3D;&quot;_blank&quot;)</span><br><span class="line">              if theme.lazyload.enable</span><br><span class="line">                img(data-src&#x3D;url_for(item.avatar) onerror&#x3D;&#96;this.onerror&#x3D;null;this.src&#x3D;&#39;&#96; + url_for(theme.error_img.flink) + &#96;&#39;&#96; alt&#x3D;item.name )</span><br><span class="line">              else</span><br><span class="line">                img(src&#x3D;url_for(item.avatar) onerror&#x3D;&#96;this.onerror&#x3D;null;this.src&#x3D;&#39;&#96; + url_for(theme.error_img.flink) + &#96;&#39;&#96; alt&#x3D;item.name )</span><br><span class="line">              .flink-item-name&#x3D; item.name </span><br><span class="line">              .flink-item-desc&#x3D; item.descr</span><br><span class="line">  !&#x3D; page.content</span><br><span class="line">if page.comments !&#x3D;&#x3D; false</span><br><span class="line">  include includes&#x2F;comments&#x2F;index.pug</span><br></pre></td></tr></table></figure><p><em>link/index.md</em></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 友情链接</span><br><span class="line">date: 2020-06-24 11:43:01</span><br><span class="line">type: &quot;link&quot;</span><br><span class="line">top<span class="emphasis">_img: https://gitee.com/shenshilei1022/hugo_</span>image<span class="emphasis">_resource/raw/master/imgs/249.jpg</span></span><br><span class="line"><span class="emphasis">---</span></span><br><span class="line"><span class="emphasis">添加友链格式：</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">- name: ShenShilei</span></span><br><span class="line"><span class="emphasis">- link: https://shenshilei1022.gitee.io/</span></span><br><span class="line"><span class="emphasis">- avatar: https://cdn.jsdelivr.net/gh/shenshilei1022/cdn@1.6/img/custom/avatar.png</span></span><br><span class="line"><span class="emphasis">- descr: 纵使黑夜吞噬了一切，太阳还可以重新回来。</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">&#123;% raw %&#125;</span></span><br><span class="line"><span class="emphasis"><span class="xml"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">.flink#article-container .flink-list &gt; .flink-list-item:before &#123;</span></span><br><span class="line"><span class="emphasis">    background-color: #b7efcd !important;</span></span><br><span class="line"><span class="emphasis">&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">.flink#article-container .flink-list &gt; .flink-list-item:hover &#123;</span></span><br><span class="line"><span class="emphasis">    color: #797979 !important;</span></span><br><span class="line"><span class="emphasis">&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">/* .flink#article-container .flink-list &gt; .flink-list-item &#123;</span></span><br><span class="line"><span class="emphasis">    animation: breath 2s infinite alternate;</span></span><br><span class="line"><span class="emphasis">&#125; */</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis">@keyframes link_</span>custom&#123;from&#123;box-shadow:0 0 5px var(--primary-color,grey),inset 0 0 5px var(--primary-color,grey),0 1px 0 var(--primary-color,grey)&#125;to&#123;box-shadow:0 0 20px var(--primary-color,grey),inset 0 0 10px var(--primary-color,grey),0 1px 0 var(--primary-color,grey)&#125;&#125;@keyframes link<span class="emphasis">_custom1&#123;0%&#123;box-shadow:0 0 4px #ca00ff&#125;25%&#123;box-shadow:0 0 16px #00b5e5&#125;50%&#123;box-shadow:0 0 4px #00f&#125;75%&#123;box-shadow:0 0 16px #b1da21&#125;100%&#123;box-shadow:0 0 4px red&#125;&#125;@keyframes flash&#123;from&#123;border-color:transparent&#125;to&#123;border-color:var(--primary-color,grey)&#125;&#125;@keyframes auto_</span>rotate<span class="emphasis">_left&#123;from&#123;transform:rotate(0)&#125;to&#123;transform:rotate(-360deg)&#125;&#125;@keyframes auto_</span>rotate<span class="emphasis">_right&#123;from&#123;transform:rotate(0)&#125;to&#123;transform:rotate(360deg)&#125;&#125;.flink#article-container .post-cards .md-links&gt;.md-links-item a:hover&#123;color: #797979 !important&#125;.flink .post-cards .md-links&gt;.md-links-item a&#123;color:var(--primary-color,#49b1f5);text-decoration:none&#125;.flink .post-cards .md-links&gt;.md-links-item:hover&#123;box-shadow:0 2px 20px var(--primary-color,#49b1f5);animation-play-state:paused&#125;.flink#article-container .post-cards .md-links&gt;.md-links-item:before&#123;background:var(--primary-color,#49b1f5)&#125;.flink .post-cards .md-links&gt;.md-links-item&#123;border:0 solid var(--primary-color,#49b1f5)&#125;.flink#article-container .post-cards .md-links&gt;.md-links-item:hover img&#123;-webkit-transform:rotate(var(--primary-rotate));-moz-transform:rotate(var(--primary-rotate));-o-transform:rotate(var(--primary-rotate));-ms-transform:rotate(var(--primary-rotate));transform:rotate(var(--primary-rotate))&#125;.flink#article-container .post-cards .md-links&gt;.md-links-item a .lauto&#123;animation:auto_</span>rotate<span class="emphasis">_left var(--autotime) linear infinite&#125;.flink#article-container .post-cards .md-links&gt;.md-links-item a .rauto&#123;animation:auto_</span>rotate<span class="emphasis">_right var(--autotime) linear infinite&#125;.flink#article-container .post-cards .md-links&gt;.md-links-item .customcolor&#123;color:var(--namecolor,#1f2d3d)&#125;.flink#article-container .post-cards .md-links&gt;.md-links-item .customcolor:hover&#123;color:#797979&#125;</span></span><br><span class="line"><span class="emphasis"></span></span><br><span class="line"><span class="emphasis"><span class="xml"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span></span></span><br><span class="line"><span class="emphasis">&#123;% endraw %&#125;</span></span><br></pre></td></tr></table></figure><p><strong>感谢<a href="https://yangchaoyi.vip/posts/520520/#%E5%8F%8B%E9%93%BE%E6%A0%B7%E5%BC%8F%E7%BE%8E%E5%8C%96">超逸</a>大佬的教程</strong></p></li></ul></div><h2 id="4-更新Butterfly"><a href="#4-更新Butterfly" class="headerlink" title="4. 更新Butterfly"></a>4. 更新Butterfly</h2><div class="note info no-icon flat"><p>有一阵子没动博客了😂，重新把博客升级一下</p></div><h3 id="4-1-config-butterfly-yml"><a href="#4-1-config-butterfly-yml" class="headerlink" title="4.1 _config.butterfly.yml"></a>4.1 _config.butterfly.yml</h3><p>在博客根目录下创建<code>_config.butterfly.yml</code>文件，将主题下<code>_config.yml</code>文件内容复制过来。这样修改主题配置的过程在新建的这个文件中进行就🆗了，方便之后的升级与更新。</p><h3 id="4-2-mathjax"><a href="#4-2-mathjax" class="headerlink" title="4.2 mathjax"></a>4.2 mathjax</h3><p>之前用的是katex，发现mathjax功能更多，于是转投mathjax的怀抱了🤪。</p><p>主题配置文件中<code>mathjax</code>设置为<code>true</code></p><p>然后在博客目录下卸载和安装对应的插件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cnpm uninstall hexo-renderer-marked --save</span><br><span class="line">cnpm install hexo-renderer-kramed --save</span><br></pre></td></tr></table></figure><p>最后再去博客配置文件中添加以下内容即可</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">kramed:</span></span><br><span class="line">  <span class="attr">gfm:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">pedantic:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">sanitize:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">tables:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">breaks:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">smartLists:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">smartypants:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><p>当文章需要使用数学公式时，在front-matter中添加<code>mathjax: true</code>开启mathjax就可以了。</p><h3 id="4-3-valine"><a href="#4-3-valine" class="headerlink" title="4.3 valine"></a>4.3 valine</h3><p>自定义表情设置，需要在引入表情仓库后，在博客根目录下的<code>source</code>文件夹中，新建<code>_data</code>文件夹，并新建<code>valine.json</code>文件，文件内容为<code>表情名: 相对仓库的路径</code></p><p>例如：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="attr">&quot;happy&quot;</span>: <span class="string">&quot;emoji/happy.png&quot;</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="4-4-字体"><a href="#4-4-字体" class="headerlink" title="4.4 字体"></a>4.4 字体</h3><p>引入上文的字体资源后，在<code>_config.butterfly.yml</code>中进行配置即可</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">font:</span></span><br><span class="line">  <span class="attr">global-font-size:</span></span><br><span class="line">  <span class="attr">code-font-size:</span></span><br><span class="line">  <span class="attr">font-family:</span> <span class="string">&#x27;Noto Serif SC&#x27;</span></span><br><span class="line">  <span class="attr">code-font-family:</span> <span class="string">font-f</span></span><br></pre></td></tr></table></figure><div class="note primary no-icon flat"><p>这里引入资源可以使用inject</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;https://fonts.googleapis.com/css?family=Noto+Serif+SC&quot;&gt;</span></span><br></pre></td></tr></table></figure></div><h3 id="4-5-豆瓣"><a href="#4-5-豆瓣" class="headerlink" title="4.5 豆瓣"></a>4.5 豆瓣</h3><p>改用<a href="https://developer.aliyun.com/mirror/npm/package/hexo-butterfly-douban/v/1.1.4?spm=a2c6h.14275010.0.0.65556a2d6ciwgH&amp;file=1.1.4">hexo-butterfly-douban</a>插件，可以方便的设置<code>top_img</code>，其中<code>meta</code>属性设置为<code>true</code>可以让图片在Safari中也可以显示。</p><p>在博客根目录下的<code>_config.yml</code>文件中添加如下设置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">douban:</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">mythsman</span></span><br><span class="line">  <span class="attr">builtin:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">book:</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">&#x27;This is my book title&#x27;</span></span><br><span class="line">    <span class="attr">quote:</span> <span class="string">&#x27;This is my book quote&#x27;</span></span><br><span class="line">    <span class="attr">meta:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">comments:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">top_img:</span> <span class="string">https://cccccc.png</span></span><br><span class="line">    <span class="attr">aside:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">movie:</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">&#x27;This is my movie title&#x27;</span></span><br><span class="line">    <span class="attr">quote:</span> <span class="string">&#x27;This is my movie quote&#x27;</span></span><br><span class="line">    <span class="attr">meta:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">comments:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">top_img:</span> <span class="string">https://cccccc.png</span></span><br><span class="line">    <span class="attr">aside:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">game:</span></span><br><span class="line">    <span class="attr">title:</span> <span class="string">&#x27;This is my game title&#x27;</span></span><br><span class="line">    <span class="attr">quote:</span> <span class="string">&#x27;This is my game quote&#x27;</span></span><br><span class="line">    <span class="attr">meta:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">comments:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">top_img:</span> <span class="string">https://cccccc.png</span></span><br><span class="line">    <span class="attr">aside:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">timeout:</span> <span class="number">10000</span> </span><br></pre></td></tr></table></figure><h3 id="4-5-BiliBili"><a href="#4-5-BiliBili" class="headerlink" title="4.5 BiliBili"></a>4.5 BiliBili</h3><p>还是之前的<a href="https://github.com/HCLonely/hexo-bilibili-bangumi">hexo-bilibili-bangumi</a>插件，只不过目前Butterfly3.3.0版本为追番页面添加<code>top_img</code>没有说明，在这里记录一下。</p><p>安装好插件后，同样地在博客根目录下的<code>_config.yml</code>文件中添加如下设置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">bangumi:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 是否启用</span></span><br><span class="line">  <span class="attr">path:</span> <span class="comment"># 番剧页面路径，默认bangumis/index.html</span></span><br><span class="line">  <span class="attr">vmid:</span> <span class="comment"># 哔哩哔哩番剧页面的 vmid(uid)</span></span><br><span class="line">  <span class="attr">title:</span> <span class="comment"># 该页面的标题</span></span><br><span class="line">  <span class="attr">quote:</span> <span class="comment"># 写在页面开头的一段话，支持 html 语法，可留空。</span></span><br><span class="line">  <span class="attr">show:</span> <span class="number">2</span> <span class="comment"># 0: 想看, 1: 在看, 2: 看过</span></span><br><span class="line">  <span class="attr">loading:</span> <span class="comment"># 图片加载完成前的 loading 图片</span></span><br><span class="line">  <span class="attr">metaColor:</span> <span class="string">&#x27;#737070&#x27;</span> <span class="comment"># meta 部分(简介上方)字体颜色</span></span><br><span class="line">  <span class="attr">color:</span> <span class="comment"># 简介字体颜色</span></span><br><span class="line">  <span class="attr">webp:</span> <span class="literal">false</span> <span class="comment"># 番剧封面使用webp格式(此格式在safari浏览器下不显示，但是图片大小可以缩小 100 倍左右), 默认true</span></span><br><span class="line">  <span class="attr">progress:</span> <span class="comment"># 获取番剧数据时是否显示进度条，默认true</span></span><br><span class="line">  <span class="attr">top_img:</span>  <span class="comment"># 封面图</span></span><br></pre></td></tr></table></figure><p>这里填了<code>top_img</code>的链接之后，需要去博客根目录下的<code>node_modules</code>文件夹下找到<code>hexo-bilibili-bangumi</code>模块，找到其目录下<code>lib</code>的<code>bangumi-generator.js</code>文件，在对应的<code>return</code>处添加<code>top_img</code>即可</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> _context.abrupt(<span class="string">&quot;return&quot;</span>, &#123;</span><br><span class="line">  path: config.bangumi.path || <span class="string">&#x27;bangumis/index.html&#x27;</span>,</span><br><span class="line">  data: &#123;</span><br><span class="line">    title: config.bangumi.title,</span><br><span class="line">    content: contents,</span><br><span class="line">    top_img: config.bangumi.top_img</span><br><span class="line">  &#125;,</span><br><span class="line">  layout: [<span class="string">&#x27;page&#x27;</span>, <span class="string">&#x27;post&#x27;</span>]</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="4-6-全局吸底Aplayer"><a href="#4-6-全局吸底Aplayer" class="headerlink" title="4.6 全局吸底Aplayer"></a>4.6 全局吸底Aplayer</h3><p>不需要用我之前改主题文件的方法啦，又麻烦且不方便更新😥。</p><p>安装<a href="https://github.com/MoePlayer/hexo-tag-aplayer">hexo-tag-aplayer</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-tag-aplayer --save</span><br></pre></td></tr></table></figure><p>在博客根目录下的<code>_config.yml</code>文件中添加设置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">aplayer:</span></span><br><span class="line">  <span class="attr">meting:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">asset_inject:</span> <span class="literal">false</span> <span class="comment"># 防止重复加载资源</span></span><br></pre></td></tr></table></figure><p>然后打开<code>_config.butterfly.yml</code>，作如下设置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Inject the css and script (aplayer/meting)</span></span><br><span class="line"><span class="attr">aplayerInject:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&#x27;&lt;style type=&quot;text/css&quot;&gt;.aplayer.aplayer-narrow .aplayer-body&#123;left: -66px !important;transition: left 1s;&#125; .aplayer.aplayer-narrow .aplayer-body:hover&#123;left: 0 !important;&#125;&lt;/style&gt;&#x27;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;div</span> <span class="string">class=&quot;aplayer</span> <span class="literal">no</span><span class="string">-destroy&quot;</span> <span class="string">data-id=&quot;000PeZCQ1i4XVs&quot;</span> <span class="string">data-server=&quot;tencent&quot;</span> <span class="string">data-type=&quot;artist&quot;</span> <span class="string">data-fixed=&quot;true&quot;</span> <span class="string">data-mini=&quot;true&quot;</span> <span class="string">data-listFolded=&quot;false&quot;</span> <span class="string">data-order=&quot;random&quot;</span> <span class="string">data-preload=&quot;none&quot;</span> <span class="string">data-autoplay=&quot;false&quot;</span> <span class="string">muted&gt;&lt;/div&gt;</span></span><br></pre></td></tr></table></figure><p>重新启动，就能看到一个吸底且十分隐蔽的Aplayer啦😜</p><h3 id="4-7-Pjax"><a href="#4-7-Pjax" class="headerlink" title="4.7 Pjax"></a>4.7 Pjax</h3><p>切换页面时不会刷新页面，使得音乐可以不间断播放，当然要用一手了。</p><p>打开<code>_config.butterfly.yml</code>，作如下设置</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">pjax:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">/artitalk/</span></span><br></pre></td></tr></table></figure><div class="note warning no-icon flat"><p>对于一些第三方插件，有些並不支持Pjax 。<br>你可以把网页加入到 exclude 里，这个网页会被 Pjax 排除在外。<br>点击该网页会重新加载该网站。</p></div>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS样式被覆盖问题解决</title>
      <link href="post/3122/"/>
      <url>post/3122/</url>
      
        <content type="html"><![CDATA[<p>魔改博客主题的时候，发现追番和豆瓣图书、电影页面的tab处字是黑色的，与背景色很像，但是F12后发现字体颜色已经设置为白色了，但是未生效🙃，当时觉得很奇怪，去网上搜了一些教程，来解决这个问题.</p><h2 id="1-设置样式被覆盖"><a href="#1-设置样式被覆盖" class="headerlink" title="1. 设置样式被覆盖"></a>1. 设置样式被覆盖</h2><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/254.jpg" alt=""></p><p>如图，我需要把已看改为白色，检查发现a标签样式的字体颜色覆盖了hexo-douban-active类的字体颜色样式。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#article-container</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#2b3037</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.hexo-douban-active</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#008080</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#fff</span>; <span class="comment">/*这里的color未生效*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-了解样式优先级"><a href="#2-了解样式优先级" class="headerlink" title="2. 了解样式优先级"></a>2. 了解样式优先级</h2><ol><li>样式表的元素选择器越精确，则其中的样式优先级越高。<br>id选择器指定样式 &gt; 类选择器指定样式 &gt; 元素类型选择器指定样式<br>所以这里#article-container样式的优先级是大于.hexo-douban-active样式，即使.hexo-douban-active是新添加的也不起作用。</li><li>对于相同类型选择器指定的样式，在样式表文件中，越靠后优先级越高。<br><strong>这里指的是在style标签或.css文件中出现的顺序，不是指在HTML中出现的顺序。</strong></li></ol><h2 id="3-解决方法"><a href="#3-解决方法" class="headerlink" title="3. 解决方法"></a>3. 解决方法</h2><p>这里明显是上述所说的第一类问题。</p><ol><li>不在#article-container中设置字体颜色，只在.hexo-douban-active中设置。但这样会有一个问题，整个文章内容的字体颜色无法修改，且主题模板中仍有这个id的样式设置，修改太复杂😭。</li><li>这里新增加一个类将面临的问题和上面相同。</li><li>使用 <strong>!important</strong>使设置的样式不被覆盖，优先级最高。<strong>超好用！</strong></li></ol><p>最终使用!important成功修改样式~</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/255.jpg" alt=""></p><h2 id="4-参考"><a href="#4-参考" class="headerlink" title="4. 参考"></a>4. 参考</h2><ul><li><a href="https://www.cnblogs.com/lvfeilong/p/sdfdsf435435.html?utm_source=tuicool">css样式被覆盖解决方案</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly主题更换思源宋体</title>
      <link href="post/29e3/"/>
      <url>post/29e3/</url>
      
        <content type="html"><![CDATA[<p>日常博客里中文使用的比较多，使用黑体看上去不是很美观，于是为博客换上思源宋体👊。</p><h2 id="1-引入Google字库"><a href="#1-引入Google字库" class="headerlink" title="1. 引入Google字库"></a>1. 引入Google字库</h2><p>本来应该先去<a href="https://fonts.google.com/">Google Font</a>寻找自己想要换的字体，但是由于网站被墙了，我就直接使用我参考的大佬博文中的css链接了。</p><p>我把链接添加在<strong>additional-js.pug</strong>中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">link(rel&#x3D;&quot;stylesheet&quot;, href&#x3D;&quot;https:&#x2F;&#x2F;fonts.googleapis.com&#x2F;css?family&#x3D;Noto+Serif+SC&quot;)</span><br></pre></td></tr></table></figure><h2 id="2-配置全局字体"><a href="#2-配置全局字体" class="headerlink" title="2. 配置全局字体"></a>2. 配置全局字体</h2><p>找到css目录，打开下面的var.styl，将dafault-font-family改为下面所示</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$dafault-font-family &#x3D; &#39;Noto Serif SC&#39;, serif</span><br></pre></td></tr></table></figure><p>如果你想单独配置某些地方字体为思源宋体，则修改对应位置的css样式即可。</p><p><em>未换字体前</em></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/242.jpg" alt=""></p><p><em>更换字体后</em></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/250.jpg" alt=""></p><h2 id="3-参考"><a href="#3-参考" class="headerlink" title="3. 参考"></a>3. 参考</h2><p>感谢大佬的配置过程😄</p><ul><li><a href="https://www.dazhuanlan.com/2019/12/13/5df31acd73cdf/">jsimple(hexo) 思源宋体</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo使用Butterfly主题</title>
      <link href="post/de2b/"/>
      <url>post/de2b/</url>
      
        <content type="html"><![CDATA[<p>前段时间逛博客的时候，发现了<a href="https://github.com/jerryc127/hexo-theme-butterfly">Butterfly</a>主题，感觉十分惊艳，瞬间觉得Sakura这种可可爱爱的不适合我了😂（还是很好用的，感谢<a href="https://github.com/shenshilei1022/hexo-theme-sakura">hojun</a>~），下面记录了Butterfly相比于Sakura一些好用的功能以及自己魔改的一些地方。断断续续折腾了快一个礼拜总算是差不多了。</p><h2 id="1-优点"><a href="#1-优点" class="headerlink" title="1. 优点"></a>1. 优点</h2><h3 id="1-1-界面"><a href="#1-1-界面" class="headerlink" title="1.1 界面"></a>1.1 界面</h3><p>整个界面很简洁，也很酷炫😁</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/242.jpg" alt=""></p><h3 id="1-2-卡片栏"><a href="#1-2-卡片栏" class="headerlink" title="1.2 卡片栏"></a>1.2 卡片栏</h3><p>卡片栏可设置在左边或右边，看个人喜好啦。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/243.jpg" alt=""></p><h3 id="1-3-标签页"><a href="#1-3-标签页" class="headerlink" title="1.3 标签页"></a>1.3 标签页</h3><p>我能说我就是懒得写标签栏才迁移主题的嘛😶</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/244.jpg" alt=""></p><h3 id="1-4-大图查看"><a href="#1-4-大图查看" class="headerlink" title="1.4 大图查看"></a>1.4 大图查看</h3><p>文章中图片支持放大查看，并能显示整篇文章图片的缩略图（我之前使用的Sakura是没有的🤣）</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/245.jpg" alt=""></p><div class="note default flat"><p>主题的一般设置可以查阅官方文档——<a href="https://demo.jerryc.me/posts/21cfbf15/">Butterfly安装文档</a></p></div><h2 id="2-魔改"><a href="#2-魔改" class="headerlink" title="2. 魔改"></a>2. 魔改</h2><p>一些颜色啥的修改基本都可以在浏览器中用F12检查对应的css样式来修改主题文件。主要是之前没接触过pug和styl😐，折腾时间比较久，还有弄清楚主题的结构也很重要。</p><h3 id="2-1-实现文章封面图片"><a href="#2-1-实现文章封面图片" class="headerlink" title="2.1 实现文章封面图片"></a>2.1 实现文章封面图片</h3><p><del>这个功能是主题本来自带的，但是它使用的front-matter关键字是cover(front-matter就是文章前用—-包围的字段)，而我之前写的文章封面图的关键字是photos。做法应该是把文章的cover全部改为photos，我也不知道哪根筋抽了，去把主题模板中用到cover的都改为photos😵，虽然现在少修改了一些，以后就别想轻易升级了😭。</del></p><p><del>主要是主页和时间轴页面的文章图片显示，找到这两个pug文件，路径为<code>themes\butterfly\layout\includes\mixins</code>，将对应的cover替换为photos，<strong>注意下面的图片链接处也需要换</strong>。</del></p><p><del>类似地，卡片栏处的最近文章、文章页面的上一篇下一篇文章需要显示文章封面图的地方均需要做相应地修改😵</del></p><p><strong>不要随便修改，控制台会报莫名其妙的错误！</strong></p><h3 id="2-2-实现代码全屏"><a href="#2-2-实现代码全屏" class="headerlink" title="2.2 实现代码全屏"></a>2.2 实现代码全屏</h3><p>之前使用的Sakura主题中，点击代码栏，会实现代码全屏，十分喜欢这个功能，换主题之后就想把它搬过来。（前端差的我在Sakura主题模板里面翻了半天😥）</p><p>找到<strong>highlight.styl</strong>，添加如下代码（<strong>标签均不要有缩进，styl中使用缩进表示html中标签层级，这里需要标签在最高级</strong>）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@keyframes</span> elastic</span><br><span class="line">  <span class="number">0%</span></span><br><span class="line">    <span class="attribute">transform:</span>scale(<span class="number">0</span>)</span><br><span class="line">  <span class="number">55%</span></span><br><span class="line">    <span class="attribute">transform:</span>scale(<span class="number">1</span>)</span><br><span class="line">  <span class="number">70%</span></span><br><span class="line">    <span class="attribute">transform:</span>scale(.<span class="number">98</span>)</span><br><span class="line">  <span class="number">100%</span></span><br><span class="line">    <span class="attribute">transform:</span>scale(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">.code-block-fullscreen</span><br><span class="line">  <span class="attribute">position:</span>fixed;</span><br><span class="line">  <span class="selector-tag">top</span><span class="selector-pseudo">:0</span>;</span><br><span class="line">  <span class="selector-tag">left</span><span class="selector-pseudo">:0</span>;</span><br><span class="line">  <span class="selector-tag">width</span><span class="selector-pseudo">:100</span>%;</span><br><span class="line">  <span class="selector-tag">height</span><span class="selector-pseudo">:100</span>%;</span><br><span class="line">  <span class="selector-tag">min-width</span><span class="selector-pseudo">:100</span>%;</span><br><span class="line">  <span class="selector-tag">z-index</span><span class="selector-pseudo">:9999999</span>;</span><br><span class="line">  <span class="selector-tag">margin</span><span class="selector-pseudo">:0</span>;</span><br><span class="line">  <span class="selector-tag">animation</span><span class="selector-pseudo">:elastic</span> 1<span class="selector-tag">s</span></span><br></pre></td></tr></table></figure><div class="note default flat"><p>@keyframes定义动画~</p></div><p>然后找到<strong>main.js</strong>，<strong>找到code对应的代码（大概300多行）</strong>，在其中添加下面代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 代码全屏</span></span><br><span class="line">$(<span class="built_in">document</span>).on(<span class="string">&#x27;click&#x27;</span>, <span class="string">&#x27;.highlight-tools&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (e.target !== <span class="built_in">this</span>) <span class="keyword">return</span></span><br><span class="line">$(<span class="built_in">this</span>).parents(<span class="string">&#x27;figure.highlight&#x27;</span>).toggleClass(<span class="string">&#x27;code-block-fullscreen&#x27;</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>这就🆗啦~</p><h3 id="2-3-添加Aplayer"><a href="#2-3-添加Aplayer" class="headerlink" title="2.3 添加Aplayer"></a>2.3 添加Aplayer</h3><p>这里我想在每个页面都显示Aplayer，所以需要自己添加。</p><p>找到<strong>layout.pug</strong>，因为Hexo主题中，所有页面都是继承layout.pug这个文件的，所以把Aplayer的代码放到这里就好了。</p><p>在layout.pug文件末尾添加<code>include ./head/aplayer.pug</code></p><p>再进入head目录，修改aplayer.pug文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">link(rel&#x3D;&#39;stylesheet&#39; href&#x3D;url_for(theme.CDN.aplayer_css))</span><br><span class="line">script(src&#x3D;url_for(theme.CDN.aplayer_js))</span><br><span class="line">script(src&#x3D;url_for(theme.CDN.meting_js))</span><br><span class="line">link(rel&#x3D;&#39;stylesheet&#39; href&#x3D;&#39;https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;shenshilei1022&#x2F;cdn@1.9&#x2F;css&#x2F;aplayer&#x2F;aplayer.css&#39;)</span><br><span class="line"></span><br><span class="line">meting-js(</span><br><span class="line">    id&#x3D;&#39;85430430&#39;</span><br><span class="line">    server&#x3D;&#39;netease&#39;</span><br><span class="line">    type&#x3D;&#39;playlist&#39;</span><br><span class="line">    fixed&#x3D;&#39;true&#39;</span><br><span class="line">    autoplay&#x3D;&#39;false&#39;</span><br><span class="line">    loop&#x3D;&#39;all&#39;</span><br><span class="line">    order&#x3D;&#39;random&#39;</span><br><span class="line">    preload&#x3D;&#39;auto&#39;</span><br><span class="line">    volume&#x3D;&#39;0.7&#39;</span><br><span class="line">    mutex&#x3D;&#39;true&#39;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><div class="note default flat"><p>注意这里我修改了一些Aplayer的css样式，这些样式需要最后再加载进来才能生效，否则生效的是官方样式。（从Sakura那边扒出来的嘿嘿）</p></div><p><em>Aplayer.css</em></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-lrc</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">35px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-lrc</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: <span class="number">700</span>;</span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">18px</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-lrc</span> <span class="selector-tag">p</span><span class="selector-class">.aplayer-lrc-current</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#FF1493</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.aplayer</span><span class="selector-class">.aplayer-narrow</span> <span class="selector-class">.aplayer-body</span>&#123;</span><br><span class="line">    <span class="attribute">left</span>: -<span class="number">66px</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.aplayer</span><span class="selector-class">.aplayer-fixed</span> <span class="selector-class">.aplayer-lrc</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.aplayer</span> <span class="selector-class">.aplayer-lrc</span><span class="selector-class">.aplayer-lrc-hide</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>:none <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.aplayer</span><span class="selector-class">.aplayer-fixed</span> <span class="selector-class">.lrc-show</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, <span class="number">0.8</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.aplayer</span><span class="selector-class">.aplayer-fixed</span> <span class="selector-class">.aplayer-body</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">58px</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">z-index</span>: <span class="number">99</span>;</span><br><span class="line">    <span class="attribute">background</span>: <span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">padding-right</span>: <span class="number">18px</span>;</span><br><span class="line">    <span class="attribute">transition</span>: all <span class="number">0.3s</span> ease;</span><br><span class="line">    <span class="attribute">max-width</span>: <span class="number">400px</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.aplayer</span><span class="selector-class">.aplayer-withlist</span> <span class="selector-class">.aplayer-list</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>: none; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当然也欢迎直接引用我CDN里面的哈~</p><p>有一点不足就是Butterfly没有加入pjax，听歌的时候跳转界面会停止播放。等我再看看Sakura中pjax的代码，试试能不能把pjax加到Butterfly中👊（我太菜了…😭）</p><h3 id="2-4-文章加密问题"><a href="#2-4-文章加密问题" class="headerlink" title="2.4 文章加密问题"></a>2.4 文章加密问题</h3><p>跟之前使用加密插件的操作相同——<a href="https://shenshilei1022.gitee.io/2020/05/12/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/Hexo/Hexo%E5%8D%9A%E5%AE%A2%E6%B7%BB%E5%8A%A0%E7%A7%81%E5%AF%86%E6%96%87%E7%AB%A0/">Hexo博客添加私密文章</a></p><p>使用的时候遇到一个问题，输入正确密码打开文章后，文章图片会加载异常，看了<a href="https://github.com/MikeCoder/hexo-blog-encrypt/blob/master/ReadMe.zh.md">hexo-blog-encrypt官方文档</a>之后，了解到需要使用回调函数。</p><p>这里图片不加载，估计就是懒加载的js出了问题，那么就在加密文章的最后添加如下代码</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/vanilla-lazyload/dist/lazyload.iife.min.js&quot;</span> <span class="attr">async</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure><p>问题解决~</p><h3 id="2-5-使用Iconfont图标"><a href="#2-5-使用Iconfont图标" class="headerlink" title="2.5 使用Iconfont图标"></a>2.5 使用Iconfont图标</h3><p>下面一排社交图标都是Iconfont的图标。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/243.jpg" alt=""></p><p>因为Fontawesome没有很多国内的图标，就想着使用Iconfont的图标。</p><p>进入<a href="https://www.iconfont.cn/?spm=a313x.7781069.1998910419.d4d0a486a">Iconfont</a>，将选好的图标添加到购物车中，最后添加到一个项目中。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/246.jpg" alt=""></p><p>徐泽Font class， 点击查看在线链接，复制链接（<strong>注意这个链接前面要加http:</strong>），在additional-js.pug中添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">link(rel&#x3D;&#39;stylesheet&#39;, href&#x3D;&#39;http:&#x2F;&#x2F;at.alicdn.com&#x2F;t&#x2F;font_1899713_4kvz7z0r3ee.css&#39;)</span><br></pre></td></tr></table></figure><p>害，我这里偷懒就直接放在引入js的模板中了，其实加到head、header效果是一样的，我这里不太标准😑</p><p>之后在主题的_config.yml中使用对应的图标名就可以添加对应的图标啦~</p><h3 id="2-6-关于页"><a href="#2-6-关于页" class="headerlink" title="2.6 关于页"></a>2.6 关于页</h3><p>我直接把<a href="https://blog.csdn.net/cungudafa/article/details/105699384">cungudafa</a>的代码拉过来啦，谢谢大佬！</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/247.jpg" alt=""></p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 关于</span><br><span class="line">date: 2020-6-23 22:14:36</span><br><span class="line">keywords: 关于</span><br><span class="line">description: </span><br><span class="line">comments: false</span><br><span class="line">photos: https://gitee.com/shenshilei1022/hugo<span class="emphasis">_image_</span>resource/raw/master/imgs/235.jpg</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">&#123;% raw %&#125;</span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- https://www.bootcdn.cn/botui/ --&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcss.com/botui/0.3.9/botui-theme-default.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.bootcss.com/botui/0.3.9/botui.min.css&quot;</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="xml"><span class="comment">&lt;!-- 因为vue和botui更新导至bug,现将对话移至js下的botui中配置 --&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;entry-content&quot;</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;moe-mashiro&quot;</span> <span class="attr">style</span>=<span class="string">&quot;text-align:center; font-size: 50px; margin-bottom: 20px;&quot;</span>&gt;</span></span>[ShenShilei&#x27;s Blog]<span class="xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line">  <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;hello-mashiro&quot;</span> <span class="attr">class</span>=<span class="string">&quot;popcontainer&quot;</span> <span class="attr">style</span>=<span class="string">&quot;min-height: 300px; padding: 2px 6px 4px; background-color: rgb(36, 200, 255); border-radius: 10px;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="code">    &lt;center&gt;</span></span><br><span class="line"><span class="code">    &lt;p&gt;</span></span><br><span class="line"><span class="code">    &lt;/p&gt;</span></span><br><span class="line"><span class="code">    &lt;h4&gt;</span></span><br><span class="line"><span class="code">    与&amp;nbsp;&lt;ruby&gt;</span></span><br><span class="line"><span class="code">    ShenShilei&amp;nbsp;&lt;rp&gt;</span></span><br><span class="line"><span class="code">    &lt;/ruby&gt;</span></span><br><span class="line"><span class="code">    对话中...&lt;/h4&gt;</span></span><br><span class="line"><span class="code">    &lt;p&gt;</span></span><br><span class="line"><span class="code">    &lt;/p&gt;</span></span><br><span class="line"><span class="code">    &lt;/center&gt;</span></span><br><span class="line"><span class="code">    &lt;bot-ui&gt;&lt;/botui&gt;</span></span><br><span class="line"><span class="code">  &lt;/div&gt;</span></span><br><span class="line"><span class="code">&lt;/div&gt;</span></span><br><span class="line"><span class="code">&lt;script src=&quot;/js/third-party/botui.js&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="code">&lt;script&gt;</span></span><br><span class="line"><span class="code">  bot_ui_ini()</span></span><br><span class="line"><span class="code">&lt;/script&gt;</span></span><br><span class="line"><span class="code">&#123;% endraw %&#125;</span></span><br></pre></td></tr></table></figure><p><em>js文件是之前Sakura主题中的。</em></p><h3 id="2-7-豆瓣电影、追番清单"><a href="#2-7-豆瓣电影、追番清单" class="headerlink" title="2.7 豆瓣电影、追番清单"></a>2.7 豆瓣电影、追番清单</h3><p>在博客根目录下打开bash，输入命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-douban --save</span><br><span class="line">cnpm install hexo-bilibili-bangumi --save</span><br></pre></td></tr></table></figure><p>安装好插件后按照官方文档一步步设置就可以了。</p><ul><li><a href="https://github.com/mythsman/hexo-douban">hexo-douban</a></li><li><a href="https://github.com/HCLonely/hexo-bilibili-bangumi">hexo-bilibili-bangumi</a></li></ul><p>要修改这两个页面的样式，可以在node_modules找到对应的插件，修改目录下的css</p><p>还要注意一个问题，追番页面的封面图Butterfly是没有添加的，可以添加几句代码自定义封面</p><p>主题下的_config.yml</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">bangumi:</span></span><br><span class="line">  <span class="comment"># 追番页面封面图</span></span><br><span class="line">  <span class="attr">img:</span> <span class="string">https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/223.jpg</span></span><br></pre></td></tr></table></figure><p>找到<strong>header/index.pug</strong>，添加代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">if theme.bangumi</span><br><span class="line">  if is_current(&#39;&#x2F;bangumis&#x2F;&#39;, [strict])</span><br><span class="line">    - var photos &#x3D; theme.bangumi.img</span><br></pre></td></tr></table></figure><p>就可以自定义封面图咯😋</p><h2 id="3-总结"><a href="#3-总结" class="headerlink" title="3. 总结"></a>3. 总结</h2><p>找到并修改成一个适合自己的主题还是很累的，估计很长一段时间都懒得折腾主题了😭，最后感谢提供帮助的大佬文章👍~</p><h2 id="4-参考"><a href="#4-参考" class="headerlink" title="4. 参考"></a>4. 参考</h2><ul><li><a href="https://github.com/jerryc127/hexo-theme-butterfly">Butterfly</a></li><li><a href="https://github.com/shenshilei1022/hexo-theme-sakura">Sakura</a></li><li><a href="https://demo.jerryc.me/posts/21cfbf15/">Butterfly安装文档</a></li><li><a href="https://github.com/MoePlayer/APlayer">Aplayer</a></li><li><a href="https://github.com/metowolf/MetingJS">MetingJS</a></li><li><a href="https://github.com/MikeCoder/hexo-blog-encrypt/blob/master/ReadMe.zh.md">hexo-blog-encrypt官方文档</a></li><li><a href="https://www.iconfont.cn/help/detail?spm=a313x.7781069.1998910419.d8cf4382a&amp;helptype=code">Iconfont使用</a></li><li><a href="https://blog.csdn.net/cungudafa/article/details/105699384">hexo（butterfly）蝴蝶主题+个性美化</a></li><li><a href="https://github.com/mythsman/hexo-douban">hexo-douban</a></li><li><a href="https://github.com/HCLonely/hexo-bilibili-bangumi">hexo-bilibili-bangumi</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> butterfly </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL学习-函数</title>
      <link href="post/4930/"/>
      <url>post/4930/</url>
      
        <content type="html"><![CDATA[<h2 id="1-聚合函数（Aggregate函数）"><a href="#1-聚合函数（Aggregate函数）" class="headerlink" title="1. 聚合函数（Aggregate函数）"></a>1. 聚合函数（Aggregate函数）</h2><p>聚合函数从列中取得的值，返回一个单一的值。</p><ul><li>AVG() - 返回平均值</li><li>COUNT() - 返回记录个数</li><li>FIRST() - 返回第一个记录的值</li><li>LAST() - 返回最后一个记录的值</li><li>MAX() - 返回最大值</li><li>MIN() - 返回最小值</li><li>SUM() - 返回总和</li></ul><blockquote><p>聚合函数需要输入一系列数据，返回的是一个值！这些函数的使用都比较简单，但要注意有些地方不能使用聚合函数😑</p></blockquote><h2 id="2-标量函数（Scalar函数）"><a href="#2-标量函数（Scalar函数）" class="headerlink" title="2. 标量函数（Scalar函数）"></a>2. 标量函数（Scalar函数）</h2><p>标量函数取得一个单一的值，返回一个单一的值。</p><ul><li>UCASE() - 将某个字段转换为大写</li><li>LCASE() - 将某个字段转换为小写</li><li>MID() - 从某个文本字段提取字符，MySQL中使用(类似于下面的SubString)</li><li>SubString(字段, 1, end) - 从某个文本字段提取字符 </li><li>LEN() - 返回某个字段的长度</li><li>ROUND() - 对某个数值字段的小数位数进行四舍五入</li><li>NOW() - 返回当前系统日期和时间</li><li>FORMAT() - 格式化某个字段的显示方式</li></ul><h2 id="3-MySQL中几个关键字的使用"><a href="#3-MySQL中几个关键字的使用" class="headerlink" title="3. MySQL中几个关键字的使用"></a>3. MySQL中几个关键字的使用</h2><h3 id="3-1-GROUP-BY"><a href="#3-1-GROUP-BY" class="headerlink" title="3.1 GROUP BY"></a>3.1 GROUP BY</h3><p>GROUP BY用于结合聚合函数，根据一个或多个列对结果集进行分组。</p><p><em>过程理解：</em></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/201.jpg" alt=""></p><p><strong>注意：由于MySQL是关系型数据库，不允许单元格有多个值，破坏一一对应的关系，所以这里直接查SELECT * FROM info GROUP BY name是错误的，需要使用聚合函数提取多个值的数据。</strong></p><p><em>这里使用了菜鸟教程使用的表格进行演示：</em></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/202.jpg" alt=""></p><p>根据site_id进行分组，查询每个site对应的总数</p><p>流程：</p><ol><li>GROUP BY site_id</li><li>SUM(count_)</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> site_id, <span class="keyword">SUM</span>(count_) <span class="keyword">FROM</span> groupby_</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> site_id;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/203.jpg" alt=""></p><p>如果查询语句带上aid，就会报错，原因就是上面提到的关系型数据库的问题。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/204.jpg" alt=""></p><h3 id="3-2-HAVING"><a href="#3-2-HAVING" class="headerlink" title="3.2 HAVING"></a>3.2 HAVING</h3><p>在SQL中增加HAVING原因是，WHERE关键字无法与聚合函数一起使用。</p><p>例如查询site总数超过200的site_id</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> s.site_id <span class="keyword">FROM</span> (</span><br><span class="line">    <span class="keyword">SELECT</span> site_id, <span class="keyword">SUM</span>(count_) <span class="keyword">AS</span> <span class="keyword">num</span> <span class="keyword">FROM</span> groupby_</span><br><span class="line">    <span class="keyword">GROUP</span> <span class="keyword">BY</span> site_id </span><br><span class="line">) <span class="keyword">AS</span> s <span class="keyword">WHERE</span> <span class="keyword">num</span> &gt; <span class="number">200</span>;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/205.jpg" alt=""></p><p>使用HAVING就没有这么繁琐啦😀，它能配合聚合函数作为筛选条件</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> site_id <span class="keyword">FROM</span> groupby_</span><br><span class="line"><span class="keyword">GROUP</span> <span class="keyword">BY</span> site_id </span><br><span class="line"><span class="keyword">HAVING</span> <span class="keyword">SUM</span>(count_) &gt; <span class="number">200</span>;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/206.jpg" alt=""></p><h3 id="3-3-IN"><a href="#3-3-IN" class="headerlink" title="3.3 IN"></a>3.3 IN</h3><p>IN允许在WHERE子句中定义多个值</p><p>例如查询表中site_id是1、2、4的数据，使用AND连接条件显得很复杂，这里就可以使用IN</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> groupby_</span><br><span class="line"><span class="keyword">WHERE</span> site_id <span class="keyword">IN</span> (<span class="number">1</span>, <span class="number">2</span>, <span class="number">4</span>);</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/207.jpg" alt=""></p><p><strong>注意：这里WHERE后面可以跟多个参数，那么对应地，IN后面就应该跟一个表。力扣刷题需要用到这个思路🐷</strong></p><h2 id="4-处理日期"><a href="#4-处理日期" class="headerlink" title="4. 处理日期"></a>4. 处理日期</h2><ul><li>CURDATE() - 返回当前日期</li><li>DATEDIFF(date1, date2) - 返回两个日期之间的天数(date1 - date2)，如果date1要早于date2，则返回一个负数。 </li></ul><h2 id="5-case-when"><a href="#5-case-when" class="headerlink" title="5. case when"></a>5. case when</h2><h3 id="5-1-简单case语句"><a href="#5-1-简单case语句" class="headerlink" title="5.1 简单case语句"></a>5.1 简单case语句</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CASE case_expression</span><br><span class="line">    WHEN value1 THEN commands</span><br><span class="line">    WHEN value2 THEN commands</span><br><span class="line">    ...</span><br><span class="line">    ELSE commands</span><br><span class="line"><span class="keyword">END</span>;</span><br></pre></td></tr></table></figure><p>其中case_expression可以是任何有效的表达式，如果case_expression的值和value1、value2…中一个相等，则执行对应commands；如果均不匹配，则执行ELSE中的commands。如果省略ELSE子句，并且找不到匹配项，MySQL会报错。</p><h3 id="5-2-可搜索case语句"><a href="#5-2-可搜索case语句" class="headerlink" title="5.2 可搜索case语句"></a>5.2 可搜索case语句</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">CASE </span><br><span class="line">    WHEN condition1 THEN commands</span><br><span class="line">    WHEN condition2 THEN commands</span><br><span class="line">    ...</span><br><span class="line">    ELSE commands</span><br><span class="line"><span class="keyword">END</span>;</span><br></pre></td></tr></table></figure><p>类似IF，但比IF更加可读。满足condition的条件则执行后面的commands。<strong>相比于简单case，可搜索case的条件更加多样，不像简单case只对一个表达式进行条件判断。</strong></p><h2 id="6-参考"><a href="#6-参考" class="headerlink" title="6. 参考"></a>6. 参考</h2><ul><li><a href="https://www.runoob.com/sql/sql-tutorial.html">菜鸟教程-SQL</a></li><li><a href="https://blog.csdn.net/qq403580298/article/details/90756352">MySQL对group by原理和理解</a></li><li><a href="https://www.yiibai.com/mysql/case-statement.html">MySQL CASE语句</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> 函数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CodeSheep的软件安装手册和部署实例</title>
      <link href="post/76f9/"/>
      <url>post/76f9/</url>
      
        <content type="html"><![CDATA[<p>把羊哥写的软件安装手册和项目部署手册的在线链接放在这里(使用Gitee Pages服务)，方便查阅。</p><p>贴上羊哥仓库链接-<a href="https://github.com/hansonwang99/JavaCollection">JavaCollection</a>👍</p><p><em>编程环境和软件工具安装手册</em></p><p><a href="http://shenshilei1022.gitee.io/installdeploytutorial/编程环境和软件工具安装手册.pdf">编程环境和软件设施安装手册</a></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/198.jpg" alt=""></p><p><em>服务器项目部署详细示例文档</em></p><p><a href="http://shenshilei1022.gitee.io/installdeploytutorial/服务器项目部署详细示例文档.pdf">服务器项目部署详细示例文档</a></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/199.jpg" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
          <category> 安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件安装 </tag>
            
            <tag> CodeSheep </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA打包jar包</title>
      <link href="post/ccc1/"/>
      <url>post/ccc1/</url>
      
        <content type="html"><![CDATA[<p>之前做的那个下载音乐的小项目要使用还得打开IDEA，很不方便，于是准备打包成jar包，在命令行中就可以跑起来😁。</p><h2 id="1-打开Project-Structure"><a href="#1-打开Project-Structure" class="headerlink" title="1. 打开Project Structure"></a>1. 打开Project Structure</h2><p>这里我使用打包TestMybatis1项目举例🤔</p><p>选择 Artifacts - JAR - From modules with dependencies</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/192.jpg" alt=""></p><p>分别设置</p><ol><li>主类</li><li>选择copy to the output directory and link via manifest</li><li>修改目录路径：将默认值最后的java改成resources，否则会出现薛定谔的错误。。🤒</li></ol><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/193.jpg" alt=""></p><p>点击🆗，保存设置。</p><p>再点击🆗，退出Project Structure。</p><h2 id="2-打包项目"><a href="#2-打包项目" class="headerlink" title="2. 打包项目"></a>2. 打包项目</h2><p>选择 Build - Build Artifacts</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/194.jpg" alt=""></p><p>点击Build开始打包</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/195.jpg" alt=""></p><p>打包完成后，发现项目目录下生成了一个out文件夹，往里面翻翻就能找到jar包了。</p><p>使用的时候，切换到项目jar包的路径，打开Powershell(shift+右键就能在当前目录打开，比cmd方便😋且显示中文没有问题)，输入<code>java -jar jar包名</code>，敲回车即可运行。</p><p>如运行下载音乐项目（想了解该项目可以查看我这篇文章——<a href="https://shenshilei1022.gitee.io/2020/05/22/%E6%95%99%E7%A8%8B/%E4%BD%BF%E7%94%A8QQ%E9%9F%B3%E4%B9%90Api%E6%89%B9%E9%87%8F%E4%B8%8B%E8%BD%BD%E9%9F%B3%E4%B9%90/">使用QQ音乐Api批量下载音乐</a>）</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/196.gif" alt=""></p><h2 id="3-后续"><a href="#3-后续" class="headerlink" title="3. 后续"></a>3. 后续</h2><p>使用maven插件也可以打包jar包，待我后续更新…😋</p>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
          <category> IDEA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
            <tag> jar </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习笔记-Mybatis</title>
      <link href="post/6e1c/"/>
      <url>post/6e1c/</url>
      
        <content type="html"><![CDATA[<h2 id="1-为什么要使用Mybatis？"><a href="#1-为什么要使用Mybatis？" class="headerlink" title="1. 为什么要使用Mybatis？"></a>1. 为什么要使用Mybatis？</h2><p>之前使用的都是JDBC，需要自己写Connection，Statement，ResultSet，这些其实只是一些辅助类。另一方面，如果需要访问不同的表，需要写对应的DAO，其中包含很多重复的代码，十分繁琐和枯燥。</p><p>使用Mybatis之后，只需要自己提供SQL语句，其他工作如建立连接，创建Statement以及异常处理都交给Mybatis去做。我们只需要关注在增查改删的操作层面上即可，而把技术细节封装在看不见的地方。</p><p>简单来说，使用Mybatis可以更简单、高效地操作数据库👀。</p><h2 id="2-Hello-Mybatis"><a href="#2-Hello-Mybatis" class="headerlink" title="2. Hello Mybatis"></a>2. Hello Mybatis</h2><h3 id="2-1-新建mybatis-config-xml"><a href="#2-1-新建mybatis-config-xml" class="headerlink" title="2.1 新建mybatis-config.xml"></a>2.1 新建mybatis-config.xml</h3><p>使用IDEA创建普通java项目(quickstart模板)。</p><p>项目结构如下：</p><pre><code>- src    - main        - java    - test</code></pre><p>这里的java是代码的根目录，将mybatis-config.xml新建在这里。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">configuration</span></span></span><br><span class="line"><span class="meta">PUBLIC <span class="meta-string">&quot;-//mybatis.org//DTD Config 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta"><span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-config.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;com.ssl.bean&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">typeAliases</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">environments</span> <span class="attr">default</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">environment</span> <span class="attr">id</span>=<span class="string">&quot;development&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">transactionManager</span> <span class="attr">type</span>=<span class="string">&quot;JDBC&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">dataSource</span> <span class="attr">type</span>=<span class="string">&quot;POOLED&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;driver&quot;</span> <span class="attr">value</span>=<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;url&quot;</span> <span class="attr">value</span>=<span class="string">&quot;jdbc:mysql://127.0.0.1:3306/cart?characterEncoding=UTF-8<span class="symbol">&amp;amp;</span>serverTimezone=GMT&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;username&quot;</span> <span class="attr">value</span>=<span class="string">&quot;root&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">&quot;password&quot;</span> <span class="attr">value</span>=<span class="string">&quot;admin&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">dataSource</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">environment</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">environments</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/ssl/bean/Order.xml&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在配置文件中需要提供ip、端口号、所连接的数据库、用户名、密码，在property标签中设置好，MySQL驱动也通过配置文件设置好。</p><p>typeAliases标签中的是起的别名，方便一会儿设置实体类的xml不用写完整路径，自动扫描com.ssl.bean下的类型，使得在后续配置文件Order.xml中使用resultType的时候，可以直接使用Order,而不必写全com.ssl.bean.Order</p><blockquote><p>这里数据库order_和对应的实体类都需要提前新建好哇✔，我就不赘述了。</p></blockquote><h3 id="2-2-创建Order-xml"><a href="#2-2-创建Order-xml" class="headerlink" title="2.2 创建Order.xml"></a>2.2 创建Order.xml</h3><p>我这里查询的表是order_，对应的实体类为Order，所以新建的配置文件也应是Order.xml，名字要相同😶。路径和实体类位置一样，即com/ssl/bean/Order.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.ssl.bean&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;listOrder&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Order&quot;</span>&gt;</span></span><br><span class="line">            select * from  order_</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>这里resultType直接填Order就🆗。</p></blockquote><p>id中的名字一会儿调用的时候会用到。</p><p>这个配置文件就相当于JDBC中的DAO，需要其它方法，如增改删，在mapper标签中添加对应的SQL语句即可。</p><h3 id="2-3-创建启动类"><a href="#2-3-创建启动类" class="headerlink" title="2.3 创建启动类"></a>2.3 创建启动类</h3><ol><li>加载配置文件</li><li>根据配置文件创建SqlSessionFactory</li><li>打开会话</li><li>使用会话执行查询</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestMybatis</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        String resource = <span class="string">&quot;mybatis-config.xml&quot;</span>;</span><br><span class="line">        InputStream inputStream = Resources.getResourceAsStream(resource);</span><br><span class="line">        SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        List&lt;Order&gt; orders = sqlSession.selectList(<span class="string">&quot;listOrder&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (Order o : orders) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;id: &quot;</span> + o.getId() + <span class="string">&quot;    uid: &quot;</span> + o.getUid());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>流程</em></p><ol><li>应用程序找Mybatis要数据</li><li>Mybatis根据mybatis-config.xml找到数据库</li><li>通过Order.xml执行SQL语句</li><li>将Order封装在集合中</li><li>返回Order集合</li></ol><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/188.jpg" alt=""></p><h3 id="2-4-几个小问题"><a href="#2-4-几个小问题" class="headerlink" title="2.4 几个小问题"></a>2.4 几个小问题</h3><h4 id="2-4-1-maven依赖"><a href="#2-4-1-maven依赖" class="headerlink" title="2.4.1 maven依赖"></a>2.4.1 maven依赖</h4><p><em>MySQL依赖</em></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><em>Mybatis依赖</em></p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.mybatis<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mybatis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.5.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-4-2-xml中-amp-符号的使用"><a href="#2-4-2-xml中-amp-符号的使用" class="headerlink" title="2.4.2 xml中&amp;符号的使用"></a>2.4.2 xml中&amp;符号的使用</h4><p>在mybatis-config.xml文件中，如果连接数据库的url要提交多个参数需要用到&amp;，而在xml文件中直接使用&amp;是不允许的，需要转换成实体进行使用。</p><pre><code>&amp;lt; &lt; 小于号&amp;gt; &gt; 大于号&amp;amp; &amp; 和&amp;apos; &#39; 单引号&amp;quot; &quot; 双引号</code></pre><h4 id="2-4-3-IDEA编译问题"><a href="#2-4-3-IDEA编译问题" class="headerlink" title="2.4.3 IDEA编译问题"></a>2.4.3 IDEA编译问题</h4><p>起初使用IDEA将上面都配置完之后，发现程序跑不起来，报错是找不到mybatis-config.xml文件。打开target的文件夹，发现编译完成的文件中没有xml文件。</p><p>这是因为IDEA默认对xml文件不进行编译，所以需要在pom.xml文件中的<strong>build标签</strong>添加下面代码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resource</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">directory</span>&gt;</span>src/main/java<span class="tag">&lt;/<span class="name">directory</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">includes</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">include</span>&gt;</span>**/*.xml<span class="tag">&lt;/<span class="name">include</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">includes</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">filtering</span>&gt;</span>true<span class="tag">&lt;/<span class="name">filtering</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resource</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></span><br></pre></td></tr></table></figure><p>即可将java文件夹下面的所有xml文件编译到target文件夹中。</p><h2 id="3-Mybatis-CRUD"><a href="#3-Mybatis-CRUD" class="headerlink" title="3. Mybatis CRUD"></a>3. Mybatis CRUD</h2><p>在Order.xml中添加CRUD的SQL语句</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.ssl.bean&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addOrder&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Order&quot;</span>&gt;</span></span><br><span class="line">        insert into order_ values (null, #&#123;uid&#125;)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;listOrder&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Order&quot;</span>&gt;</span></span><br><span class="line">        select * from  order_</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getOrder&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;_int&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Order&quot;</span>&gt;</span></span><br><span class="line">        select * from order_ where id=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">&quot;updateOrder&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Order&quot;</span>&gt;</span></span><br><span class="line">        update order_ set uid=#&#123;uid&#125; where id=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">delete</span> <span class="attr">id</span>=<span class="string">&quot;deleteOrder&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;Order&quot;</span>&gt;</span></span><br><span class="line">        delete from order_ where id=#&#123;id&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">delete</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在TestMybatis类中实现CRUD</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ssl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.ssl.bean.Order;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.io.Resources;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSession;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.ibatis.session.SqlSessionFactoryBuilder;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestMybatis</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        String resource = <span class="string">&quot;mybatis-config.xml&quot;</span>;</span><br><span class="line">        InputStream inputStream = Resources.getResourceAsStream(resource);</span><br><span class="line">        SqlSessionFactory sqlSessionFactory = <span class="keyword">new</span> SqlSessionFactoryBuilder().build(inputStream);</span><br><span class="line">        SqlSession sqlSession = sqlSessionFactory.openSession();</span><br><span class="line">        listAll(sqlSession);</span><br><span class="line">        System.out.println(<span class="string">&quot;------------------------------&quot;</span>);</span><br><span class="line">        <span class="comment">// 增</span></span><br><span class="line">        Order order = <span class="keyword">new</span> Order();</span><br><span class="line">        order.setUid(<span class="number">10</span>);</span><br><span class="line">        sqlSession.insert(<span class="string">&quot;addOrder&quot;</span>, order);</span><br><span class="line">        System.out.println(<span class="string">&quot;新增一条记录&quot;</span>);</span><br><span class="line">        listAll(sqlSession);</span><br><span class="line">        System.out.println(<span class="string">&quot;-------------------------------&quot;</span>);</span><br><span class="line">        <span class="comment">// 查</span></span><br><span class="line">        Order order1 = sqlSession.selectOne(<span class="string">&quot;getOrder&quot;</span>, <span class="number">3</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;id: &quot;</span> + order1.getId() + <span class="string">&quot;    uid: &quot;</span> + order1.getUid());</span><br><span class="line">        System.out.println(<span class="string">&quot;-------------------------------&quot;</span>);</span><br><span class="line">        <span class="comment">// 改</span></span><br><span class="line">        Order order2 = <span class="keyword">new</span> Order();</span><br><span class="line">        order2.setId(<span class="number">2</span>);</span><br><span class="line">        order2.setUid(<span class="number">100</span>);</span><br><span class="line">        sqlSession.update(<span class="string">&quot;updateOrder&quot;</span>, order2);</span><br><span class="line">        System.out.println(<span class="string">&quot;修改一条记录&quot;</span>);</span><br><span class="line">        listAll(sqlSession);</span><br><span class="line">        System.out.println(<span class="string">&quot;-------------------------------&quot;</span>);</span><br><span class="line">        <span class="comment">// 删</span></span><br><span class="line">        sqlSession.delete(<span class="string">&quot;deleteOrder&quot;</span>, order2);</span><br><span class="line">        System.out.println(<span class="string">&quot;删除一条记录&quot;</span>);</span><br><span class="line">        listAll(sqlSession);</span><br><span class="line"></span><br><span class="line">        sqlSession.commit();</span><br><span class="line">        sqlSession.close();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">listAll</span><span class="params">(SqlSession sqlSession)</span> </span>&#123;</span><br><span class="line">        List&lt;Order&gt; orders = sqlSession.selectList(<span class="string">&quot;listOrder&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span> (Order o : orders) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;id: &quot;</span> + o.getId() + <span class="string">&quot;    uid: &quot;</span> + o.getUid());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>注意：</p><ol><li>获取数据库中一条数据的方法是selectOne！返回的是一个Order对象。</li><li>最后一定要加commit方法，否则添加的数据不会在数据库当中显示(<del>我也不知道为啥。。😂记得加</del>~)<strong>Mybatis不会自动提交，查询可以不提交，只显示内容。</strong></li><li>_int对应java中的基本类型int，int对应Integer类。</li></ol></blockquote><h2 id="4-Mybatis-更多查询"><a href="#4-Mybatis-更多查询" class="headerlink" title="4. Mybatis 更多查询"></a>4. Mybatis 更多查询</h2><h3 id="4-1-模糊查询"><a href="#4-1-模糊查询" class="headerlink" title="4.1 模糊查询"></a>4.1 模糊查询</h3><p>在Order.xml中添加</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;listOrderByUid&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;string&quot;</span> <span class="attr">resultType</span>=<span class="string">&quot;Order&quot;</span>&gt;</span></span><br><span class="line">    select * from order_ where uid like concat(&#x27;%&#x27;, &#x27;#&#123;name&#125;&#x27;, &#x27;%&#x27;)</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>concat是MySQL中的字符串拼接函数；%是通配符，适配任意字符。</p></blockquote><p>TestMybatis中这样写</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Order&gt; orders = sqlSession.selectList(<span class="string">&quot;listOrderByUid&quot;</span>, <span class="string">&quot;s&quot;</span>);</span><br></pre></td></tr></table></figure><p>这里我的表可能查不出结果。。会用就可以啦。</p><blockquote><p>关于占位符的问题</p><ol><li>如果是bean类型，Mybatis会自动调用其getter获取值，替换到相应的位置；</li><li>如果是其它类型，如string，_int，则会顺序填入，无所谓#{}中的字段是什么。</li></ol></blockquote><h3 id="4-2-多条件查询"><a href="#4-2-多条件查询" class="headerlink" title="4.2 多条件查询"></a>4.2 多条件查询</h3><p>SQL语句中使用逻辑关联词连接条件就可以啦😜</p><p>使用的时候参数需要装在Map中，把这个Map作为参数传递进去。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Map&lt;String,Object&gt; params = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">params.put(<span class="string">&quot;id&quot;</span>, <span class="number">3</span>);</span><br><span class="line">params.put(<span class="string">&quot;uid&quot;</span>, <span class="string">&quot;c&quot;</span>);</span><br><span class="line">List&lt;Category&gt; cs = session.selectList(<span class="string">&quot;listCategoryByIdAndName&quot;</span>,params);</span><br></pre></td></tr></table></figure><h2 id="5-Mybatis-表关系"><a href="#5-Mybatis-表关系" class="headerlink" title="5. Mybatis 表关系"></a>5. Mybatis 表关系</h2><h3 id="5-1-一对多"><a href="#5-1-一对多" class="headerlink" title="5.1 一对多"></a>5.1 一对多</h3><p>例如分类和产品的关系，一个分类下对应多个产品，这就是一对多的关系。</p><p>新建category<em>表和product</em>表</p><p><em>category_</em></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/180.jpg" alt=""></p><p><em>product_</em></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/181.jpg" alt=""></p><p>因为是展示分类与产品一对多的关系，新建Category.xml（实体类Category这里就不多说了[其中有一个属性为<code>List&lt;Product&gt; products]</code>，同样地，Product实体类也需要新建好），利用连接查询两表数据并返回List(<strong>使用collection标签把对应列的数据放在product对应的属性中</strong>)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.ssl.bean&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;categoryBean&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Category&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;cid&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;cname&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 一对多关系 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- property: 这个集合放在Category的products属性中；ofType: 集合中元素的类型 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;products&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;Product&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;pid&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;pname&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;price&quot;</span> <span class="attr">property</span>=<span class="string">&quot;price&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;listCategory&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;categoryBean&quot;</span>&gt;</span></span><br><span class="line">        select c.id as cid, c.name as cname, p.id as pid, p.name as pname, p.price from category_ as c left join product_ as p on c.id=p.cid;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在mybatis-config.xml中添加映射</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mappers</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">mapper</span> <span class="attr">resource</span>=<span class="string">&quot;com/ssl/bean/Category.xml&quot;</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mappers</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在启动类使用如下代码查询</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">List&lt;Category&gt; listCategory = sqlSession.selectList(<span class="string">&quot;listCategory&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (Category c : listCategory) &#123;</span><br><span class="line">    System.out.println(c);</span><br><span class="line">    <span class="keyword">for</span> (Product p : c.getProducts()) &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;\t&quot;</span> + p);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>结果如图</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/182.jpg" alt=""></p><h3 id="5-2-多对一"><a href="#5-2-多对一" class="headerlink" title="5.2 多对一"></a>5.2 多对一</h3><p>对应的，产品与分类的关系则是多对一。</p><p>在Product实体类中添加<code>Category category</code>属性，新建Product.xml(<strong>使用association标签将对应列的数据放在bean类当中</strong>)，同样使用连接查询两表的数据(<em>我喜欢把要查询的表作为左表(￣▽￣)”好理解一些</em>)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.ssl.bean&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;productBean&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Product&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;pid&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;pname&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;price&quot;</span> <span class="attr">property</span>=<span class="string">&quot;price&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 多对一关系 --&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 使用association为category属性添加属性，类似于collection --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;category&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;Category&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;cid&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;cname&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;listProduct&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;productBean&quot;</span>&gt;</span></span><br><span class="line">        select p.id as pid, p.name as pname, p.price, c.id as cid, c.name as cname from product_ as p left join category_ as c on p.cid=c.id;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getProduct&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;_int&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;productBean&quot;</span>&gt;</span></span><br><span class="line">        select p.id as pid, p.name as pname, p.price, c.id as cid, c.name as cname from product_ as p left join category_ as c on p.cid=c.id where p.id=#&#123;id&#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>添加映射，最后运行结果如下</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/183.jpg" alt=""></p><h3 id="5-3-多对多"><a href="#5-3-多对多" class="headerlink" title="5.3 多对多"></a>5.3 多对多</h3><p>如订单和产品的关系，一个订单可以包含多个产品，而一个产品也可以对应多个订单，它们两个是多对多的关系。</p><p>这里借助订单项这个表来建立它们之间的联系，每一条订单项对应一个订单中的一条数据。</p><p><em>order_</em></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/184.jpg" alt=""></p><p><em>orderItem_(oid对应所属order的id，pid对应product的id)</em></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/185.jpg" alt=""></p><p>新建Order.xml，连接三表进行查询(<strong>注意collection和association的嵌套</strong>)</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.ssl.bean&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">resultMap</span> <span class="attr">id</span>=<span class="string">&quot;orderBean&quot;</span> <span class="attr">type</span>=<span class="string">&quot;Order&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;id&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;code&quot;</span> <span class="attr">property</span>=<span class="string">&quot;code&quot;</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">collection</span> <span class="attr">property</span>=<span class="string">&quot;orderItems&quot;</span> <span class="attr">ofType</span>=<span class="string">&quot;OrderItem&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;oiid&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;num&quot;</span> <span class="attr">property</span>=<span class="string">&quot;num&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">association</span> <span class="attr">property</span>=<span class="string">&quot;product&quot;</span> <span class="attr">javaType</span>=<span class="string">&quot;Product&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">id</span> <span class="attr">column</span>=<span class="string">&quot;pid&quot;</span> <span class="attr">property</span>=<span class="string">&quot;id&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;pname&quot;</span> <span class="attr">property</span>=<span class="string">&quot;name&quot;</span>/&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">result</span> <span class="attr">column</span>=<span class="string">&quot;price&quot;</span> <span class="attr">property</span>=<span class="string">&quot;price&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">association</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">collection</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">resultMap</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;listOrder&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;orderBean&quot;</span>&gt;</span></span><br><span class="line">        select o.id, o.code, oi.id as oiid, oi.num, p.id as pid, p.name as pname, p.price from order_ as o left join orderItem_ as oi on o.id=oi.oid left join product_ as p on oi.pid=p.id;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">&quot;getOrder&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;_int&quot;</span> <span class="attr">resultMap</span>=<span class="string">&quot;orderBean&quot;</span>&gt;</span></span><br><span class="line">        select o.id, o.code, oi.id as oiid, oi.num, p.id as pid, p.name as pname, p.price from order_ as o left join orderItem_ as oi on o.id=oi.oid left join product_ as p on oi.pid=p.id where o.id=#&#123;id&#125;;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>添加映射，运行结果如下</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/186.jpg" alt=""></p><p>订单和产品的关系是通过订单项联系起来的，所以建立关系和删除关系对应的就是创建orderItem_数据和删除其数据。</p><p>新建OrderItem.xml，添加增添数据的SQL</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">mapper</span></span></span><br><span class="line"><span class="meta">        <span class="meta-keyword">PUBLIC</span> <span class="meta-string">&quot;-//mybatis.org//DTD Mapper 3.0//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="meta-string">&quot;http://mybatis.org/dtd/mybatis-3-mapper.dtd&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">&quot;com.ssl.bean&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">insert</span> <span class="attr">id</span>=<span class="string">&quot;addOrderItem&quot;</span> <span class="attr">parameterType</span>=<span class="string">&quot;OrderItem&quot;</span>&gt;</span></span><br><span class="line">        insert into orderItem_ values (null, #&#123;order.id&#125;, #&#123;product.id&#125;, #&#123;num&#125;);</span><br><span class="line">    <span class="tag">&lt;/<span class="name">insert</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></table></figure><p>添加映射，在启动类的步骤如下：</p><ol><li>查询一个Order</li><li>查询一个Product</li><li>新建OrderItem，设置Order、Product和num</li><li>将OrderItem插入到orderItem_表中<br>二者关系建立完成。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Order order = sqlSession.selectOne(<span class="string">&quot;getOrder&quot;</span>, <span class="number">1</span>);</span><br><span class="line">Product product = sqlSession.selectOne(<span class="string">&quot;getProduct&quot;</span>, <span class="number">6</span>);</span><br><span class="line">OrderItem oi = <span class="keyword">new</span> OrderItem();</span><br><span class="line">oi.setOrder(order);</span><br><span class="line">oi.setProduct(product);</span><br><span class="line">oi.setNum(<span class="number">300</span>);</span><br><span class="line">sqlSession.insert(<span class="string">&quot;addOrderItem&quot;</span>, oi);</span><br></pre></td></tr></table></figure><p>结果如下</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/187.jpg" alt=""></p><p>删除关系则删除orderItem_的对应数据即可，在OrderItem.xml文件中设置SQL。</p><h2 id="6-总结"><a href="#6-总结" class="headerlink" title="6. 总结"></a>6. 总结</h2><p>使用Mybatis实现增查改删，可以让人更专注于SQL的编写，而不是考虑编写冗余的JDBC代码来操作数据库。</p><p>Mybatis其它高阶的使用方法，如c3p0连接池、缓存等等技术需要用到再进行学习。</p><h2 id="7-参考"><a href="#7-参考" class="headerlink" title="7. 参考"></a>7. 参考</h2><ul><li><a href="https://how2j.cn/k/mybatis/mybatis-tutorial/1087.html">HOW2J-Mybatis</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 数据库操作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> Mybatis </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL学习-外键</title>
      <link href="post/f14d/"/>
      <url>post/f14d/</url>
      
        <content type="html"><![CDATA[<h2 id="1-FOREIGN-KEY约束"><a href="#1-FOREIGN-KEY约束" class="headerlink" title="1. FOREIGN KEY约束"></a>1. FOREIGN KEY约束</h2><p>一个表中的FOREIGN KEY指向另一个表中的UNIQUE KEY（唯一约束的键）。</p><p>比如我之前做过的小项目——<a href="">购物车</a>中的订单项表和订单表，订单项表中的oid就与订单表中的id相对应，应该设置为外键约束(😂当时我还没设置)。<strong>外键约束用于预防破坏表之间连接的行为；同时也能预防非法数据插入外键列，因为它必须是指向的那个表的值之一(例如如果没有订单5，就不能在订单项表中插入oid为5的订单项数据。)</strong></p><p><strong>注意：这里Order表的id不可以是自增的(AUTO_INCREMENT)!</strong></p><blockquote><p>由于Order在MySQL中是关键字，小伙伴们自己试的时候可以把表名取为order_，防止报错。</p></blockquote><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/178.jpg" alt=""></p><p><em>OrderItem表中的oid就是OrderItem表的FOREIGN KEY，指向Order表。</em></p><h2 id="2-创建表时添加外键约束"><a href="#2-创建表时添加外键约束" class="headerlink" title="2. 创建表时添加外键约束"></a>2. 创建表时添加外键约束</h2><p>创建OrderItem表添加外键约束pid</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> OrderItem (</span><br><span class="line">  <span class="keyword">id</span> <span class="built_in">INT</span> AUTO_INCREMENT,</span><br><span class="line">  pid <span class="built_in">INT</span>,</span><br><span class="line">  <span class="keyword">oid</span> <span class="built_in">INT</span>,</span><br><span class="line">  <span class="keyword">num</span> <span class="built_in">INT</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="keyword">id</span>),</span><br><span class="line">  <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (<span class="keyword">oid</span>) <span class="keyword">REFERENCES</span> <span class="keyword">Order</span> (<span class="keyword">id</span>)</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="3-ALTER-TABLE创建外键约束"><a href="#3-ALTER-TABLE创建外键约束" class="headerlink" title="3. ALTER TABLE创建外键约束"></a>3. ALTER TABLE创建外键约束</h2><p>当OrderItem表已经创建，需要为它添加pid外键约束</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> OrderItems</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (pid)</span><br><span class="line"><span class="keyword">REFERENCES</span> <span class="keyword">Order</span> (<span class="keyword">id</span>);</span><br></pre></td></tr></table></figure><p>如果需要定义多个列的外键约束，则使用下面语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> OrderItems</span><br><span class="line"><span class="keyword">ADD</span> <span class="keyword">CONSTRAINT</span> fk_Order2OrderItems</span><br><span class="line"><span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> (pid)</span><br><span class="line"><span class="keyword">REFERENCES</span> <span class="keyword">Order</span> (<span class="keyword">id</span>);</span><br></pre></td></tr></table></figure><h2 id="4-删除外键约束"><a href="#4-删除外键约束" class="headerlink" title="4. 删除外键约束"></a>4. 删除外键约束</h2><p>在不删除外键约束的情况下，直接删除父表(这里就是Order)会报错。</p><p>删除fk_Order2OrderItems</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> OrderItems</span><br><span class="line"><span class="keyword">DROP</span> <span class="keyword">FOREIGN</span> <span class="keyword">KEY</span> fk_Order2OrderItems;</span><br></pre></td></tr></table></figure><h2 id="5-几个知识点"><a href="#5-几个知识点" class="headerlink" title="5. 几个知识点"></a>5. 几个知识点</h2><ul><li>谁添加外键谁就是子表，关联的谁就是父表。</li><li>不一定非要使用外键，根据业务实际考虑(外键的使用占用资源，影响性能。)</li></ul><h2 id="6-参考"><a href="#6-参考" class="headerlink" title="6. 参考"></a>6. 参考</h2><ul><li><a href="https://www.runoob.com/sql/sql-foreignkey.html">SQL FOREIGN KEY 约束</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> 外键 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>再见，永远滴神</title>
      <link href="post/a86c/"/>
      <url>post/a86c/</url>
      
        <content type="html"><![CDATA[<p>2020年6月3号，UZI正式在微博宣布退役。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/172.JPG" alt=""></p><p>得知消息的那一刻，我还有点懵。虽然前两天RNG公布大名单没有小狗的时候，猜想过会有这种结果。但这个时候真的降临，仍然让人措手不及。</p><p>我接触英雄联盟已经很晚了，是2015年的上半年，大一下学期。当时刚买电脑，玩游戏根本停不下来。我是典型的人菜瘾大。后来因为电脑有点带不动了，断断续续在玩。</p><p>比赛我是从S7开始关注的，那时世界赛香锅反向eq打断小炮w和越二塔闪现eq开团的画面好像就在昨天。从此，我也知道了UZI。</p><p><em>UZI职业生涯高光集锦TOP10</em></p><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=753187555&bvid=BV1sk4y167jS&cid=192347062&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div><p>2018年，RNG拿下春季赛冠军，来到季中邀请赛。小组赛环节，香锅被“照顾”的非常难受，下路的压力非常大。还记得RNG对阵KZ那一把，KZ男枪来抓下，UZI和小明本是必死之局，但UZI一波灵性操作化险为夷——使用卡莎大躲掉男枪大，再使用闪现拉开对面霞的大招，为队伍下拨反打创造了条件。这个操作我每次看都会起鸡皮疙瘩，也有了“乌兹，永远滴神”这个梗。从此，RNG势不可挡，MSI冠军，夏季赛冠军，就差S赛冠军了。可是借用下面央视采访的一句话来说，赢了太多次，以为自己记住怎么赢了，最后却忘了如何去赢。最终RNG倒在了8进4和G2的BO5中。当时和小乔吃火锅的时候看的这场比赛，看完之后，我说以后再也不看LOL比赛了，太让人失望和难过。</p><p>后来还是忍不住继续看比赛，2019年，RNG仿佛没能再站起来，虽说一路跌跌撞撞进了世界赛，但却止步小组赛，那也是UZI打过的最后一把世界赛正赛。</p><p>2020年，整个春季赛均未上场。本以为夏季赛能够见到小狗，但等到的是小狗退役的消息。不知道说些什么，整个人都挺懵的，千言万语汇成一句“唉”。</p><p>希望小狗以后好好养病，迎接自己新的人生。</p><p>意难平…</p><p><em>电竞运动员Uzi退役独家专访：如果时间还够，很多东西我可以做到</em></p><div style="position: relative; width: 100%; height: 0; padding-bottom: 75%;"><iframe src="//player.bilibili.com/player.html?aid=795879858&bvid=BV1dC4y1h7at&cid=198198536&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;"></iframe></div>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 游戏 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>设计购物车小项目</title>
      <link href="post/44e3/"/>
      <url>post/44e3/</url>
      
        <content type="html"><![CDATA[<p>使用Servlet结合JSP开发购物车功能。</p><h2 id="1-数据库关系"><a href="#1-数据库关系" class="headerlink" title="1. 数据库关系"></a>1. 数据库关系</h2><p>创建数据库cart，在cart下创建四个表。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/162.JPG" alt=""></p><p>这四个表的关系是：</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/163.JPG" alt=""></p><p>order指该用户完成的一次订单，存储的是对应的用户信息(uid)；而orderItem指的是订单中的每一条订单项，存储对应的订单id(oid)，以及买的产品(pid)和购买数量。</p><p>表关系也比较好理解。</p><ul><li>一种产品可以对应多个订单项。</li><li>多个订单项对应一个订单。</li><li>多个订单对应一个用户。</li></ul><h2 id="2-项目结构"><a href="#2-项目结构" class="headerlink" title="2. 项目结构"></a>2. 项目结构</h2><p>这里指的是java代码目录下的包结构</p><pre><code>- bean- servlet- dao- util</code></pre><p>其中bean包存放实体类，类属性为private，提供getter和setter，与数据库的记录形成一一对应(即数据库表的一条数据对应一个实体对象)；</p><p>servlet包存放Servlet类，处理前端发来的请求，以及将响应发送回前端；</p><p>dao包存放与数据库相关操作的类，通过它对数据库进行CRUD；</p><p>util包存放工具类，<strong>我这里将加载数据库驱动和获取数据库连接封装到工具类DBUtil中，且使用静态方法和静态代码块，方便重复使用。</strong></p><h2 id="3-项目逻辑"><a href="#3-项目逻辑" class="headerlink" title="3. 项目逻辑"></a>3. 项目逻辑</h2><h3 id="3-1-产品模块"><a href="#3-1-产品模块" class="headerlink" title="3.1 产品模块"></a>3.1 产品模块</h3><p>效果：在浏览器中输入127.0.0.1/Cart/listProduct，网页会展示product表中的全部商品。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/164.JPG" alt=""></p><p>流程：</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/165.JPG" alt=""></p><p>注意：</p><ol><li>MySQL的Maven依赖设置：</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>Servlet的Maven依赖设置：</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>javax.servlet<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>javax.servlet-api<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>JSP中使用了JSTL标准标签库，使用需要先在Maven中引入依赖：</li></ol><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jstl<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>taglibs<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>standard<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.1.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>再在JSP文件头部写如下代码：</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ taglib prefix=<span class="string">&quot;c&quot;</span> uri=<span class="string">&quot;http://java.sun.com/jsp/jstl/core&quot;</span> %&gt;</span><br><span class="line">&lt;%@ page isELIgnored=<span class="string">&quot;false&quot;</span>%&gt;</span><br></pre></td></tr></table></figure><p><strong>一定要把忽略EL表达式设置为False，否则不能使用${}直接获取值。</strong></p><ol><li>路径问题。重定向中”/“代表<code>http://ip:port/</code>，而转发中”/“代表<code>http://ip:port/项目名称</code>。我这里设置的基础路径是<code>http://ip:port/Cart(项目名)</code>。而不使用”/“则默认使用基础路径。所以这里转发中加不加”/“都可以；而重定向中要么使用”/Cart/映射”，要么就不加，直接使用映射。<br>如果转发或重定向到JSP文件，可以加上JSP文件在web目录下的路径。例如我的listProduct.jsp放在webapp/list目录下，那么我的转发代码可以是：</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">request.getRequestDispatcher(<span class="string">&quot;/list/listProduct.jsp&quot;</span>).forward(request, response);</span><br></pre></td></tr></table></figure><h3 id="3-2-用户模块"><a href="#3-2-用户模块" class="headerlink" title="3.2 用户模块"></a>3.2 用户模块</h3><p>效果：在登录页面输入账户密码，如果正确（和数据库user表中的数据吻合），则显示产品页面。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/166.JPG" alt=""></p><p>流程：</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/167.JPG" alt=""></p><h3 id="3-3-订单项模块"><a href="#3-3-订单项模块" class="headerlink" title="3.3 订单项模块"></a>3.3 订单项模块</h3><p>效果：在产品页面点击购买，再点击显示购物车，可以显示刚才想要购买的物品。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/168.JPG" alt=""></p><p>流程：</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/169.JPG" alt=""></p><h3 id="3-4-订单模块"><a href="#3-4-订单模块" class="headerlink" title="3.4 订单模块"></a>3.4 订单模块</h3><p>效果：点击生成订单，显示订单的每一条订单项，并将订单项存入数据库。</p><p>流程：</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/170.JPG" alt=""></p><h2 id="4-源码"><a href="#4-源码" class="headerlink" title="4. 源码"></a>4. 源码</h2><p>源码我放在GitHub上啦，需要的小伙伴可以自行克隆😀</p><ul><li><a href="https://github.com/shenshilei1022/Cart">Cart项目</a></li></ul><h2 id="5-参考"><a href="#5-参考" class="headerlink" title="5. 参考"></a>5. 参考</h2><p>感谢How2J的教程~😋</p><ul><li><a href="https://how2j.cn/k/cart/cart-tutorials/595.html">购物车</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL学习-连接的使用</title>
      <link href="post/e95d/"/>
      <url>post/e95d/</url>
      
        <content type="html"><![CDATA[<h2 id="1-笛卡尔积（同一个表则为自连接）"><a href="#1-笛卡尔积（同一个表则为自连接）" class="headerlink" title="1. 笛卡尔积（同一个表则为自连接）"></a>1. 笛卡尔积（同一个表则为自连接）</h2><p>两表关联，把左表的列和右表的列通过笛卡尔积的形式表达出来，就类似于排列组合，列出所有情况。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/133.JPG" alt=""></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> a, b;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> a <span class="keyword">join</span> b;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> a <span class="keyword">inner</span> <span class="keyword">join</span> b;</span><br></pre></td></tr></table></figure><p>效果相同。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/137.JPG" alt=""></p><h2 id="2-内连接"><a href="#2-内连接" class="headerlink" title="2. 内连接"></a>2. 内连接</h2><p>在笛卡尔积的基础上加上连接条件，即变为内连接，只留下两个表中交集的记录。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/138.JPG" alt=""></p><p>这里我使用了菜鸟教程提供的数据库文件——<a href="https://static.runoob.com/download/runoob-mysql-join-test.sql">MySQL连接的使用数据库——菜鸟教程</a></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/142.JPG" alt=""></p><p>以author信息作为连接标准（通过关键字ON连接）</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> runoob_tbl <span class="keyword">AS</span> a <span class="keyword">INNER</span> <span class="keyword">JOIN</span> tcount_tbl <span class="keyword">AS</span> b <span class="keyword">ON</span> a.runoob_author=b.runoob_author;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/141.JPG" alt=""></p><p>可以看到查询结果为笛卡尔积的基础上留下两表的交集。</p><h2 id="3-左连接"><a href="#3-左连接" class="headerlink" title="3. 左连接"></a>3. 左连接</h2><p>查询左表的全部数据，右表无对应数据填为null。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/144.JPG" alt=""></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> runoob_tbl <span class="keyword">AS</span> a <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> tcount_tbl <span class="keyword">AS</span> b <span class="keyword">ON</span> a.runoob_author=b.runoob_author;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/143.JPG" alt=""></p><h2 id="4-右连接"><a href="#4-右连接" class="headerlink" title="4. 右连接"></a>4. 右连接</h2><p>查询右表的全部数据，左表无对应数据填为null。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/145.JPG" alt=""></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> runoob_tbl <span class="keyword">AS</span> a <span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> tcount_tbl <span class="keyword">AS</span> b <span class="keyword">ON</span> a.runoob_author=b.runoob_author;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/146.JPG" alt=""></p><h2 id="5-左表独有"><a href="#5-左表独有" class="headerlink" title="5. 左表独有"></a>5. 左表独有</h2><p>筛选左表独有的数据。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/147.JPG" alt=""></p><p>使用WHERE进行条件筛选，选择右表中为null的数据即为左表独有的数据。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> runoob_tbl <span class="keyword">AS</span> a <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> tcount_tbl <span class="keyword">AS</span> b <span class="keyword">ON</span> a.runoob_author=b.runoob_author <span class="keyword">WHERE</span> b.runoob_author <span class="keyword">is</span> <span class="literal">null</span>;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/148.JPG" alt=""></p><blockquote><p>这里还涉及到了MySQL对null值的处理，使用is null或is not null来判断当列的值是否为null，不要使用等号=🤔</p></blockquote><h2 id="6-右表独有"><a href="#6-右表独有" class="headerlink" title="6. 右表独有"></a>6. 右表独有</h2><p>同理，筛选右表独有的数据。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/149.JPG" alt=""></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> runoob_tbl <span class="keyword">AS</span> a <span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> tcount_tbl <span class="keyword">AS</span> b <span class="keyword">ON</span> a.runoob_author=b.runoob_author <span class="keyword">WHERE</span> a.runoob_author <span class="keyword">is</span> <span class="literal">null</span>;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/150.JPG" alt=""></p><h2 id="7-全连接"><a href="#7-全连接" class="headerlink" title="7. 全连接"></a>7. 全连接</h2><p>两表关联，查询其中所有数据。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/151.JPG" alt=""></p><p>使用union操作符完成。</p><p>通过左连接和右连接获取左表和右表完整的数据，通过union连接，重复的部分union会自动去重。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> runoob_tbl <span class="keyword">AS</span> a <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> tcount_tbl <span class="keyword">AS</span> b <span class="keyword">ON</span> a.runoob_author=b.runoob_author</span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> runoob_tbl <span class="keyword">AS</span> a <span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> tcount_tbl <span class="keyword">AS</span> b <span class="keyword">ON</span> a.runoob_author=b.runoob_author;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/152.JPG" alt=""></p><blockquote><p>UNION操作符用于连接两个以上的SELECT语句的结果组合到一个结果集合中。多个SELECT语句会删除重复的数据。UNION ALL则不会删除重复的数据。</p></blockquote><h2 id="8-并集取交集"><a href="#8-并集取交集" class="headerlink" title="8. 并集取交集"></a>8. 并集取交集</h2><p>两表关联，取并集然后取交集。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/153.JPG" alt=""></p><p>可以通过查询左表独有和右表独有，使用UNION操作符连接起来。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> runoob_tbl <span class="keyword">AS</span> a <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> tcount_tbl <span class="keyword">AS</span> b <span class="keyword">ON</span> a.runoob_author=b.runoob_author <span class="keyword">WHERE</span> b.runoob_author <span class="keyword">is</span> <span class="literal">null</span></span><br><span class="line"><span class="keyword">union</span></span><br><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> runoob_tbl <span class="keyword">AS</span> a <span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> tcount_tbl <span class="keyword">AS</span> b <span class="keyword">ON</span> a.runoob_author=b.runoob_author <span class="keyword">WHERE</span> a.runoob_author <span class="keyword">is</span> <span class="literal">null</span>;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/154.JPG" alt=""></p><h2 id="9-自然连接"><a href="#9-自然连接" class="headerlink" title="9. 自然连接"></a>9. 自然连接</h2><p>MySQL自己判断完成连接过程，不需要指定连接条件，MySQL会使用表内相同的字段作为连接条件。</p><h3 id="9-1-自然内连接"><a href="#9-1-自然内连接" class="headerlink" title="9.1 自然内连接"></a>9.1 自然内连接</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> runoob_tbl <span class="keyword">AS</span> a <span class="keyword">NATURAL</span> <span class="keyword">JOIN</span> tcount_tbl <span class="keyword">AS</span> b;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/155.JPG" alt=""></p><h3 id="9-2-自然左连接"><a href="#9-2-自然左连接" class="headerlink" title="9.2 自然左连接"></a>9.2 自然左连接</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> runoob_tbl <span class="keyword">AS</span> a <span class="keyword">NATURAL</span> <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> tcount_tbl <span class="keyword">AS</span> b;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/156.JPG" alt=""></p><h3 id="9-2-自然右连接"><a href="#9-2-自然右连接" class="headerlink" title="9.2 自然右连接"></a>9.2 自然右连接</h3><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> runoob_tbl <span class="keyword">AS</span> a <span class="keyword">NATURAL</span> <span class="keyword">RIGHT</span> <span class="keyword">JOIN</span> tcount_tbl <span class="keyword">AS</span> b;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/157.JPG" alt=""></p><blockquote><p><strong>注意：如果两个表没有相同字段，或者有多个相同字段，则自然连接返回为空。</strong></p></blockquote><h2 id="10-参考"><a href="#10-参考" class="headerlink" title="10. 参考"></a>10. 参考</h2><ul><li><a href="https://zhuanlan.zhihu.com/p/87235622">mysql中的几种join 及 full join问题 （仅学习）</a></li><li><a href="https://www.runoob.com/mysql/mysql-join.html">MySQL 连接的使用</a></li><li><a href="https://www.runoob.com/mysql/mysql-null.html">MySQL NULL 值处理</a></li><li><a href="https://www.runoob.com/mysql/mysql-union-operation.html">MySQL UNION 操作符</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> 连接 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习笔记-JDBC(MySQL)</title>
      <link href="post/5740/"/>
      <url>post/5740/</url>
      
        <content type="html"><![CDATA[<h2 id="1-MySQL-关系型数据库"><a href="#1-MySQL-关系型数据库" class="headerlink" title="1. MySQL(关系型数据库)"></a>1. MySQL(关系型数据库)</h2><p>Databases 简称：DB</p><h3 id="1-1-什么是数据库？"><a href="#1-1-什么是数据库？" class="headerlink" title="1.1 什么是数据库？"></a>1.1 什么是数据库？</h3><ul><li>用于存储和管理数据的仓库</li></ul><h3 id="1-2-数据库的特点："><a href="#1-2-数据库的特点：" class="headerlink" title="1.2 数据库的特点："></a>1.2 数据库的特点：</h3><ul><li>持久化存储数据。其实数据库就是一个文件系统。</li><li>方便存储和管理数据。</li><li>使用了统一的方式操作数据库。 —SQL</li></ul><h3 id="1-3-安装过程"><a href="#1-3-安装过程" class="headerlink" title="1.3 安装过程"></a>1.3 安装过程</h3><ol><li>官网下载zip文件（Downloads-MySQL Community Edition-MySQL Community Server-ZIP Archive）</li><li>直接解压到对应的文件夹。</li><li>新建my.ini配置文件（在bin同级目录下）。</li></ol><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[mysql]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置mysql客户端默认字符集</span></span><br><span class="line"></span><br><span class="line"><span class="attr">default-character-set</span>=utf8 </span><br><span class="line"></span><br><span class="line"><span class="section">[mysqld]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#设置3306端口</span></span><br><span class="line"></span><br><span class="line"><span class="attr">port</span> = <span class="number">3306</span> </span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置mysql的安装目录</span></span><br><span class="line"></span><br><span class="line"><span class="attr">basedir</span>=D:\Software\MySQL\mysql-<span class="number">8.0</span>.<span class="number">17</span>-winx64</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置mysql数据库的数据的存放目录</span></span><br><span class="line"></span><br><span class="line"><span class="attr">datadir</span>=D:\Software\MySQL\mysql-<span class="number">8.0</span>.<span class="number">17</span>-winx64\data</span><br><span class="line"></span><br><span class="line"><span class="comment"># 允许最大连接数</span></span><br><span class="line"></span><br><span class="line"><span class="attr">max_connections</span>=<span class="number">200</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 服务端使用的字符集默认为8比特编码的latin1字符集</span></span><br><span class="line"></span><br><span class="line"><span class="attr">character-set-server</span>=utf8</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建新表时将使用的默认存储引擎</span></span><br><span class="line"></span><br><span class="line"><span class="attr">default-storage-engine</span>=INNODB</span><br></pre></td></tr></table></figure><ol><li>使用管理员权限打开cmd窗口，切换到对应的bin目录下，使用命令。</li></ol><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysqld --install</span><br><span class="line">mysqld --initialize</span><br><span class="line">net start mysql</span><br></pre></td></tr></table></figure><ol><li>在MySQL安装目录下搜索.err文件，其中localhost后面的字符对应初始密码。</li><li><code>alter user user() identified by &quot;123456&quot;;</code>更改密码。</li></ol><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/131.JPG" alt=""></p><p>安装的MySQL实际上是一个服务，在计算机管理中的服务中来启动和停止MySQL的服务。cmd —&gt; service.msc</p><p>net start mysql</p><p>net stop mysql</p><h3 id="1-4-MySQL的登录和退出"><a href="#1-4-MySQL的登录和退出" class="headerlink" title="1.4 MySQL的登录和退出"></a>1.4 MySQL的登录和退出</h3><p>登录：</p><ol><li><code>mysql -u 用户名 -p</code></li><li><code>mysql -h ip地址 -u 用户名 -p</code></li></ol><p>退出：</p><ol><li><code>exit</code></li><li><code>quit</code></li></ol><h2 id="2-SQL"><a href="#2-SQL" class="headerlink" title="2. SQL"></a>2. SQL</h2><h3 id="2-1-什么是SQL？"><a href="#2-1-什么是SQL？" class="headerlink" title="2.1 什么是SQL？"></a>2.1 什么是SQL？</h3><p>Structured Query Language:结构化查询语言.其实就是定义了操作所有关系型数据库的规则。</p><h3 id="2-2-SQL通用语法"><a href="#2-2-SQL通用语法" class="headerlink" title="2.2 SQL通用语法"></a>2.2 SQL通用语法</h3><ol><li>SQL语句可以单行或多行书写，以分号结尾。</li><li>可使用空格和缩进来增强语句的可读性。</li><li>MySQL数据库的SQL语句不区分大小写，但关键字建议用大写。</li><li>注释<ul><li>单行注释：— 注释内容</li><li>多行注释：/<em> 注释 </em>/</li></ul></li></ol><h2 id="3-使用SQL操作数据库和表"><a href="#3-使用SQL操作数据库和表" class="headerlink" title="3. 使用SQL操作数据库和表"></a>3. 使用SQL操作数据库和表</h2><h3 id="3-1-操作数据库"><a href="#3-1-操作数据库" class="headerlink" title="3.1 操作数据库"></a>3.1 操作数据库</h3><p>一般都有增查改删(CRUD, Create, Retrieve, Update, Delete)四个操作.</p><p><em>展示已有数据库</em></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> <span class="keyword">DATABASES</span>;</span><br></pre></td></tr></table></figure><p><em>查询当前正在使用的数据库</em></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DATABASE</span>();</span><br></pre></td></tr></table></figure><p><em>新建数据库java</em></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> <span class="keyword">java</span>;</span><br></pre></td></tr></table></figure><p><em>使用新建的java数据库</em></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">USE</span> <span class="keyword">java</span>;</span><br></pre></td></tr></table></figure><p><em>删除数据库java</em></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">DATABASE</span> <span class="keyword">java</span>;</span><br></pre></td></tr></table></figure><p><strong>这样删除有一个缺点，如果不存在java数据库时执行这条命令会报错，可以使用下面的方法。</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> <span class="keyword">DATABASE</span> <span class="keyword">IF</span> <span class="keyword">EXISTS</span> <span class="keyword">java</span>;</span><br></pre></td></tr></table></figure><h3 id="3-2-操作表"><a href="#3-2-操作表" class="headerlink" title="3.2 操作表"></a>3.2 操作表</h3><p>同样地，也是进行增查改删。</p><p>MySQL数据类型：</p><ol><li>int：整数类型<br> age int;</li><li>double：小数类型<br> score double(5, 2) — 5表示数字最长有5位，2表示保留2位小数</li><li>date：日期，只包括年月日，yyyy-MM-dd</li><li>datetime：日期，包括年月日时分秒，yyyy-MM-dd HH:mm:ss</li><li>timestamp：时间戳类型，包含年月日时分秒，    yyyy-MM-dd HH:mm:ss<br> 如果将来不给这个字段赋值，或复制为null，则默认使用当前系统时间<br> <em>注意，添加时间戳类型，需要把默认值设置为current_timestamp(当前时间戳)才能正确获取到当前系统时间。</em><pre><code> ALTER TABLE stu ADD update_time TIMESTAMP DEFAULT CURRENT_TIMESTAMP;</code></pre></li><li>varchar：字符串<br> name varchar(20); — 姓名最大20个字符<br> zhangsan 8个字符； 张三 2个字符</li></ol><p><em>新建表personInfo</em></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> personInfo (</span><br><span class="line">    <span class="keyword">id</span> <span class="built_in">INT</span> auto_increment,</span><br><span class="line">    <span class="keyword">name</span> <span class="built_in">VARCHAR</span>(<span class="number">20</span>),</span><br><span class="line">    age <span class="built_in">INT</span>,</span><br><span class="line">    PRIMARY <span class="keyword">KEY</span> (<span class="keyword">id</span>)</span><br><span class="line">) <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span><br></pre></td></tr></table></figure><blockquote><p>PRIMARY KEY为主键约束，为了便于更快的查找表中的数据，都会在表中设置一个主键。<br>注意：(设置的时候记得带上括号👀)</p><ul><li>每个表只能定义一个主键。</li><li>不能为NULL。</li></ul></blockquote><p><em>新增数据</em></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> personInfo <span class="keyword">VALUES</span> (<span class="literal">NULL</span>, <span class="string">&#x27;小明&#x27;</span>, <span class="number">23</span>);</span><br></pre></td></tr></table></figure><p><strong>因为id设置了自增，所以可以插入null</strong></p><p><em>查询数据</em></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> personInfo;</span><br></pre></td></tr></table></figure><p>也可以根据条件查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> personInfo <span class="keyword">WHERE</span> <span class="keyword">id</span>=<span class="number">1</span>;</span><br></pre></td></tr></table></figure><p><em>分页查询</em></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> personInfo <span class="keyword">LIMIT</span> <span class="number">0</span>, <span class="number">5</span>;</span><br></pre></td></tr></table></figure><p><strong>这条命令表示从第1条数据开始，共查五条。</strong></p><p><em>修改数据</em></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">UPDATE</span> personInfo <span class="keyword">SET</span> age=<span class="number">25</span> <span class="keyword">WHERE</span> <span class="keyword">name</span>=<span class="string">&#x27;小明&#x27;</span>;</span><br></pre></td></tr></table></figure><p><em>删除数据</em></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> personInfo <span class="keyword">WHERE</span> <span class="keyword">id</span>=<span class="number">1</span>;</span><br></pre></td></tr></table></figure><p><strong>没有条件时则删除表中全部数据！</strong></p><p>删除多条数据可以使用类似分页查询的limit，但后面只跟一个参数count，即删除多少条数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DELETE</span> <span class="keyword">FROM</span> personInfo <span class="keyword">LIMIT</span> <span class="number">5</span>;</span><br></pre></td></tr></table></figure><p>其它的一些知识(例如外键约束，事务等等)等到用到了再进行整理与学习🧑</p><h2 id="4-JDBC"><a href="#4-JDBC" class="headerlink" title="4. JDBC"></a>4. JDBC</h2><p>JDBC(Java DataBase Connection)通过Java访问数据库。</p><h3 id="4-1-使用Maven新建项目"><a href="#4-1-使用Maven新建项目" class="headerlink" title="4.1 使用Maven新建项目"></a>4.1 使用Maven新建项目</h3><p>选择quickstart模板新建项目。</p><p>在pom.xml配置文件中添加依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>mysql<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>mysql-connector-java<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>8.0.17<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>这里我踩了两个坑！首先是添加的依赖版本和我使用的MySQL版本不同，建立连接报错为java.sql.SQLException: java.lang.ClassCastException: java.math.BigInteger cannot be cast to java.lang.Long，然后我把版本修改为一致，结果建立连接继续报错😥，报错信息为The server time zone value ‘�й���׼ʱ��’ is unrecognized or represents more than one time zone.提示为时区问题，需要通过连接设置serverTimezone来解决。使用格林威治时间设置为serverTimezone=GMT;北京时间则为serverTimezone=GMT%2B8。</p></blockquote><h3 id="4-2-Hello-JDBC"><a href="#4-2-Hello-JDBC" class="headerlink" title="4.2 Hello JDBC"></a>4.2 Hello JDBC</h3><h4 id="4-2-1-初始化驱动并建立连接"><a href="#4-2-1-初始化驱动并建立连接" class="headerlink" title="4.2.1 初始化驱动并建立连接"></a>4.2.1 初始化驱动并建立连接</h4><p>需要提供：</p><ul><li>数据库所处的ip：127.0.0.1或localhost(本机)</li><li>数据库工作的端口号：3306(MySQL专用端口号)</li><li>数据库名称：personInfo</li><li>编码方式：UTF-8</li><li>账号：root</li><li>密码：admin</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestJDBC</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;初始化驱动成功！&quot;</span>);</span><br><span class="line">            Connection c = DriverManager.getConnection(<span class="string">&quot;jdbc:mysql://127.0.0.1:3306/personInfo?characterEncoding=UTF-8&amp;serverTimezone=GMT&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;admin&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;连接成功，获取连接对象：&quot;</span> + c);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果看到控制台输出下面内容，则建立连接成功。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/130.jpg" alt=""></p><blockquote><p>Class.forName和new类似，都是创建一个实例，但Class.forName的好处是：如果成功完成，那么这个类已经加载且已经连接。</p></blockquote><h4 id="4-2-2-新建Statement运行SQL语句"><a href="#4-2-2-新建Statement运行SQL语句" class="headerlink" title="4.2.2 新建Statement运行SQL语句"></a>4.2.2 新建Statement运行SQL语句</h4><p>例如在表中新增一条数据</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestJDBC</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;初始化驱动成功！&quot;</span>);</span><br><span class="line">            Connection c = DriverManager.getConnection(<span class="string">&quot;jdbc:mysql://127.0.0.1:3306/personInfo?characterEncoding=UTF-8&amp;serverTimezone=GMT&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;admin&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;连接成功，获取连接对象：&quot;</span> + c);</span><br><span class="line">            Statement s = c.createStatement();</span><br><span class="line">            String sql = String.format(<span class="string">&quot;INSERT INTO personInfo VALUES (NULL, %s, %d)&quot;</span>, <span class="string">&quot;&#x27;小刚&#x27;&quot;</span>, <span class="number">18</span>);</span><br><span class="line">            s.execute(sql);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：name对应的字段需要先加单引号，再加上双引号作为java字符串😜</strong></p><p>增改删均使用Statement实例的execute方法；</p><p>而查询则使用executeQuery方法，将返回一个ResultSet，通过next方法移动光标，遍历内容。</p><h4 id="4-2-3-关闭连接"><a href="#4-2-3-关闭连接" class="headerlink" title="4.2.3 关闭连接"></a>4.2.3 关闭连接</h4><p>用完之后记得养成关闭的好习惯，否则造成对资源的占用。</p><p>先关Statement，再关Connection。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestJDBC</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;初始化驱动成功！&quot;</span>);</span><br><span class="line">            Connection c = DriverManager.getConnection(<span class="string">&quot;jdbc:mysql://127.0.0.1:3306/personInfo?characterEncoding=UTF-8&amp;serverTimezone=GMT&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;admin&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;连接成功，获取连接对象：&quot;</span> + c);</span><br><span class="line">            Statement s = c.createStatement();</span><br><span class="line">            String sql = String.format(<span class="string">&quot;INSERT INTO personInfo VALUES (NULL, %s, %d)&quot;</span>, <span class="string">&quot;&#x27;小刚&#x27;&quot;</span>, <span class="number">18</span>);</span><br><span class="line">            s.execute(sql);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (s != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    s.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (c != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="keyword">try</span> &#123;</span><br><span class="line">                    c.close();</span><br><span class="line">                &#125; <span class="keyword">catch</span> (SQLException) &#123;</span><br><span class="line">                    e.printStackTrace();</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果觉得这样关闭比较繁琐，可以参考关闭流的方式，使用try-with-resource的方式自动关闭连接，因为Connection和Statement都实现了AutoCloseable接口。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TestJDBC</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;初始化驱动成功！&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> (Connection c = DriverManager.getConnection(<span class="string">&quot;jdbc:mysql://127.0.0.1:3306/personInfo?characterEncoding=UTF-8&amp;serverTimezone=GMT&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;admin&quot;</span>);</span><br><span class="line">            System.out.println(<span class="string">&quot;连接成功，获取连接对象：&quot;</span> + c);</span><br><span class="line">            Statement s = c.createStatement()) &#123;</span><br><span class="line">            String sql = String.format(<span class="string">&quot;INSERT INTO personInfo VALUES (NULL, %s, %d)&quot;</span>, <span class="string">&quot;&#x27;小刚&#x27;&quot;</span>, <span class="number">18</span>);</span><br><span class="line">            s.execute(sql);</span><br><span class="line">        &#125;  <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-高阶操作"><a href="#5-高阶操作" class="headerlink" title="5. 高阶操作"></a>5. 高阶操作</h2><h3 id="5-1-使用PreparedStatement"><a href="#5-1-使用PreparedStatement" class="headerlink" title="5.1 使用PreparedStatement"></a>5.1 使用PreparedStatement</h3><p>PreparedStatement继承了Statement，也是用来执行sql语句的，但是它有几个好处：</p><ol><li>参数设置：<br>Statement需要进行字符串拼接，容易出错；<br>PreparedStatement可以使用？占位符，后期进行设置，易维护。</li><li>性能表现：<br>插入多条数据时，PreparedStatement比Statement更快。</li><li>防止SQL注入式攻击<br>例如name是用户提交的数据”name=’小明’ OR 1=1”<br>此时使用Statement进行字符串拼接，得到的SQL语句是”SELECT * FROM personInfo WHERE name=’小明’ OR 1=1”，由于1=1是恒成立的条件，所以这样就会把所有数据都查出来，而不仅仅名字为小明的数据。如果表中的数据是海量的，那么将会把内存全部消耗光，造成极大的不便；而使用PreparedStatement，使用？对name进行占位，那么即使用户输入了”name=’小明’ OR 1=1”，预编译也会将它作为一整个字段放在name处，结果就是什么都查不到，而不会出现内存占满的情况。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">String sql = <span class="string">&quot;SELECT * FROM personInfo WHERE name=?&quot;</span>;</span><br><span class="line"><span class="comment">// c是Connection，这里没写对应的代码</span></span><br><span class="line">PreparedStatement ps = c.prepareStatement(sql);</span><br><span class="line">ps.setString(<span class="number">1</span>, <span class="string">&quot;小明&quot;</span>);</span><br><span class="line">ps.execute();</span><br></pre></td></tr></table></figure><p><strong>注意：ResultSet和PreparedStatement是这里唯二索引从1开始数的，不要弄错啦🤓</strong></p><blockquote><p>个人理解如果要执行的sql语句不用设置参数就直接使用Statement，需要就用PreparedStatement🤗</p></blockquote><h3 id="5-2-事务"><a href="#5-2-事务" class="headerlink" title="5.2 事务"></a>5.2 事务</h3><p>事务相当于打包多个操作，这多个操作要么都成功，要么都失败，不会出现只执行其中一个操作的情况。例如业务操作需要将一个人的年龄加一再减一，不用事务的话，减一sql语句写错了，结果就是年龄将会加一；而使用事务，其中一个语句出错，那么整个事务都不会执行，年龄信息将不变。</p><p>通过<code>c.setAutoCommit(false);</code>关闭自动提交</p><p>使用<code>c.commit();</code>进行手动提交</p><p>此时，增改删语句execute后没有真正生效，需要提交后才会生效。</p><blockquote><p>这里MySQL需要使用innodb存储引擎，在my.ini配置文件中设置<code>default-storage-engine=INNODB</code>，在MySQL中执行下面的语句<code>SELECT SUPPORT FROM INFORMATION_SCHEMA.ENGINES WHERE ENGINE=&#39;InnoDB&#39;;</code>，如果innodb被启用并且是默认数据库，那么会出现SUPPORT-DEFAULT，如果innodb可用，但不是默认引擎，则结果是yes；否则是no。(我的MySQL版本是8.0.17，使用此方法可行，删除data文件夹下的ib文件不可用。)</p></blockquote><h3 id="5-3-ORM和DAO"><a href="#5-3-ORM和DAO" class="headerlink" title="5.3 ORM和DAO"></a>5.3 ORM和DAO</h3><p>ORM(Object Relationship Database Mapping)，对象和关系数据库的映射。即一个对象对应数据库的一条记录。</p><p>通过将对象看作一条数据，使用java对对象和记录相互操作。</p><p>DAO(Data Access Object)，数据访问对象。和ORM思路相同，把数据库相关的操作都封装在这个类中，其它地方看不到JDBC的代码。</p><p><em>新建PersonInfo类</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PersonInfo</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> id;</span><br><span class="line">    <span class="keyword">public</span> String name;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span> age;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>新建DAO接口(写成泛型格式)</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">DAO</span>&lt;<span class="title">T</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 增添数据</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(T t)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 查询单个数据</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> T <span class="title">get</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line">    <span class="comment">// 查询全部数据</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;T&gt; <span class="title">list</span><span class="params">()</span></span>;</span><br><span class="line">    <span class="comment">// 分页查询</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;T&gt; <span class="title">list</span><span class="params">(<span class="keyword">int</span> start, <span class="keyword">int</span> count)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 修改数据</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(T t)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 删除数据</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(<span class="keyword">int</span> id)</span></span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>新建PersonInfoDAO类</em></p><p>初始化驱动放在构造方法中，使用getConnection方法获取与数据库的连接。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ssl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PersonInfoDAO</span> <span class="keyword">implements</span> <span class="title">DAO</span>&lt;<span class="title">PersonInfo</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化驱动放在构造方法中</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">PersonInfoDAO</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(<span class="string">&quot;com.mysql.cj.jdbc.Driver&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 建立连接</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> Connection <span class="title">getConnection</span><span class="params">()</span> <span class="keyword">throws</span> SQLException </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> DriverManager.getConnection(<span class="string">&quot;jdbc:mysql://127.0.0.1:3306/test?characterEncoding=UTF-8&amp;serverTimezone=GMT&quot;</span>, <span class="string">&quot;root&quot;</span>, <span class="string">&quot;admin&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">add</span><span class="params">(PersonInfo personInfo)</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">&quot;INSERT INTO personInfo VALUES (NULL, ?, ?)&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> (Connection c = getConnection();</span><br><span class="line">             PreparedStatement ps = c.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS)) &#123;</span><br><span class="line">            ps.setString(<span class="number">1</span>, personInfo.name);</span><br><span class="line">            ps.setInt(<span class="number">2</span>, personInfo.age);</span><br><span class="line">            ps.execute();</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 添加完后将自增的id再填回personInfo中</span></span><br><span class="line">            ResultSet rs = ps.getGeneratedKeys();</span><br><span class="line">            <span class="keyword">if</span> (rs.next()) &#123;</span><br><span class="line">                personInfo.id = rs.getInt(<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;插入数据成功！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> PersonInfo <span class="title">get</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        PersonInfo person = <span class="keyword">null</span>;</span><br><span class="line">        String sql = <span class="string">&quot;SELECT * FROM personInfo WHERE id=?&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> (Connection c = getConnection();</span><br><span class="line">        PreparedStatement ps = c.prepareStatement(sql)) &#123;</span><br><span class="line">            ps.setInt(<span class="number">1</span>, id);</span><br><span class="line">            ResultSet rs = ps.executeQuery();</span><br><span class="line">            <span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">                String name = rs.getString(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">                <span class="keyword">int</span> age = rs.getInt(<span class="string">&quot;age&quot;</span>);</span><br><span class="line">                person = <span class="keyword">new</span> PersonInfo();</span><br><span class="line">                person.id = id;</span><br><span class="line">                person.name = name;</span><br><span class="line">                person.age = age;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> person;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;PersonInfo&gt; <span class="title">list</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> list(<span class="number">0</span>, Short.MAX_VALUE);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;PersonInfo&gt; <span class="title">list</span><span class="params">(<span class="keyword">int</span> start, <span class="keyword">int</span> count)</span> </span>&#123;</span><br><span class="line">        List&lt;PersonInfo&gt; personList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        String sql = <span class="string">&quot;SELECT * FROM personInfo LIMIT ?, ?&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> (Connection c = getConnection();</span><br><span class="line">             PreparedStatement ps = c.prepareStatement(sql)) &#123;</span><br><span class="line">            ps.setInt(<span class="number">1</span>, start);</span><br><span class="line">            ps.setInt(<span class="number">2</span>, count);</span><br><span class="line">            ResultSet rs = ps.executeQuery();</span><br><span class="line">            <span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">                <span class="keyword">int</span> id = rs.getInt(<span class="string">&quot;id&quot;</span>);</span><br><span class="line">                String name = rs.getString(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">                <span class="keyword">int</span> age = rs.getInt(<span class="string">&quot;age&quot;</span>);</span><br><span class="line">                PersonInfo person = <span class="keyword">new</span> PersonInfo();</span><br><span class="line">                person.id = id;</span><br><span class="line">                person.name = name;</span><br><span class="line">                person.age = age;</span><br><span class="line">                personList.add(person);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> personList;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getTotal</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">&quot;SELECT COUNT(*) FROM personInfo&quot;</span>;</span><br><span class="line">        <span class="keyword">int</span> total = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">try</span> (Connection c = getConnection();</span><br><span class="line">             Statement s = c.createStatement()) &#123;</span><br><span class="line">            ResultSet rs = s.executeQuery(sql);</span><br><span class="line">            <span class="keyword">while</span> (rs.next()) &#123;</span><br><span class="line">                total = rs.getInt(<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> total;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">update</span><span class="params">(PersonInfo personInfo)</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">&quot;UPDATE personInfo SET name=?, age=? WHERE id=?&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> (Connection c = getConnection();</span><br><span class="line">             PreparedStatement ps = c.prepareStatement(sql)) &#123;</span><br><span class="line">            ps.setString(<span class="number">1</span>, personInfo.name);</span><br><span class="line">            ps.setInt(<span class="number">2</span>, personInfo.age);</span><br><span class="line">            ps.setInt(<span class="number">3</span>, personInfo.id);</span><br><span class="line">            ps.execute();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;修改成功！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">delete</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        String sql = <span class="string">&quot;DELETE FROM personInfo WHERE id=?&quot;</span>;</span><br><span class="line">        <span class="keyword">try</span> (Connection c = getConnection();</span><br><span class="line">             PreparedStatement ps = c.prepareStatement(sql)) &#123;</span><br><span class="line">            ps.setInt(<span class="number">1</span>, id);</span><br><span class="line">            ps.execute();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;删除成功！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="6-参考"><a href="#6-参考" class="headerlink" title="6. 参考"></a>6. 参考</h2><ul><li><a href="https://how2j.cn/k/mysql/mysql-install/377.html#nowhere">MySQL</a></li><li><a href="https://how2j.cn/k/jdbc/jdbc-mysql/386.html">JDBC</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 数据库操作 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《侠探简不知》观后感</title>
      <link href="post/c54e/"/>
      <url>post/c54e/</url>
      
        <content type="html"><![CDATA[<p>最近被乌鸦电影公众号安利了一部国产武侠剧《侠探简不知》。在网上随手搜了一下，发现只有24集，于是决定追一手。毕竟国产又臭又长的电视剧可不少😐。看了之后便停不下来了，探案悬疑的味道令人很是满意，再加上主线剧情串起来的一个个小故事，更是让整部剧节奏紧凑，毫无尿点。来吃我一发安利吧(剧透慎点🧐)~</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/116.jpg" alt=""></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/117.jpg" alt=""></p><p>整个故事发生于江湖之中，当时有一位魔头——王画，无恶不作，将诺大的江湖搅得动荡不安。正道人士简尽欢发布英雄帖，召集天下英雄于神机谷，意图集天下之力铲除魔头。可这一场大战之后，简尽欢身亡，各路英雄皆战死，仅剩李二爷、巧手唐、白草折和王老大四人存活，更离奇的是，王画的尸体却没能在神机谷中找到。剧中的故事就在八年之后，简尽欢之子——简不知寻找这一真相的过程中，发生一系列精彩的案件中展开。</p><p>剧中总共有五个小故事，寒月山庄、傀儡岛、杜鹃湾、燕山以及辽东。具体有完整案件线的是寒月山庄、傀儡岛和杜鹃湾这三个，后面两个已经开始大力推动主线剧情了，当然也十分精彩。我个人最喜欢的还是傀儡岛这个故事。这个小故事主要讲了主角一行人因为寻找巧手唐来到傀儡岛，被迫和其他人一起破解傀儡李的谜题来获得想要的讯息。但是在破解谜题的过程中，不断有人离奇被杀，众人被恐惧包围，大家都认为是鬼魂作祟……</p><p>最终，作为探事人的简不知通过蛛丝马迹的线索发现了真相。世上并没有鬼，有鬼的是人心。原来是送众人来岛的船夫策划了这一切，他的实际身份是傀儡李的小徒弟。由于师傅修建过很多陵墓的机关，贪图财宝的人就胁迫其说出机关奥秘，但傀儡李为人正直，直到死都未透漏半个字。小徒弟将傀儡李的尸体和生前的财宝带到傀儡岛，设下谜题，为的就是杀死觊觎傀儡李宝藏的人，为师傅报仇。</p><p>我的语言能力比较匮乏😶，剧中的故事远比我写的要精彩的多😊。当然了，作为悬疑推理剧，诡计的设计是它的核心，这也是我最喜欢傀儡岛这个故事的原因。柴房消失谜团与铜片传声两个诡计让我大呼过瘾，凶手通过在柴房杀了升仙子之后，当着众人面前消失进一步营造恐怖气氛，将众人思路引向鬼怪方面，方便自己脱身；使用腹语通过铜片反射声音，让人分不清声音的方向，更能将自己完美的藏于众人之间。如果不是司马当发现的木人头这一关键线索，真相很难浮出水面。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/118.jpg" alt=""></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/119.jpg" alt=""></p><p>整部剧没有流量明星，剧组也穷的可怜😂，比如王老大自己培养的十二死士修炼的全是毒辣的武功，但是打起来的时候，一个照面全躺地上了。。。男主的表情略显僵硬，和女主对手戏的时候我不知道他的眼睛在看哪里😂。不过这些都不妨碍它是今年一步十分优秀的武侠推理网剧。剧中没有炒cp，只有踏踏实实讲故事，且剧中人物的亦正亦邪也让人边看边思考。江湖悬赏追杀的升仙子，杀了朋友一家二十三口人，被江湖所唾弃，但真相确实他和朋友切磋的时候，朋友突然出杀招，想要升仙子的命，进而在江湖上获得名望。正是这种种细节，也让剧中的配角同样是有血有肉的人物。还有最终的结局也出乎我的意料，期待第二季~</p><p>做英雄，再难，也不要回头…</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 电视剧AND电影 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网剧 </tag>
            
            <tag> 国产 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用QQ音乐Api批量下载音乐</title>
      <link href="post/3da9/"/>
      <url>post/3da9/</url>
      
        <content type="html"><![CDATA[<p>最近在Github上看到一个项目，使用Vue搭建了一个Web播放器，可以播放一些需要vip的歌曲——<a href="https://github.com/jsososo/NeteaseMusic">NetEasyMusic</a>.</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/121.jpg" alt=""></p><p>想从上面下载一些杰伦的歌😁。无奈，杰伦的歌太多了，所以利用它所使用的QQ音乐Api，自己写了一个Java程序来批量下载歌曲。</p><blockquote><p>本项目仅供学习使用，请尊重版权，请勿利用此项目从事商业行为! 本项目仅供学习使用，请尊重版权，请勿利用此项目从事商业行为! 本项目仅供学习使用，请尊重版权，请勿利用此项目从事商业行为!</p></blockquote><p>所需技术:</p><blockquote><ol><li>JSON对象的处理</li><li>HttpURLConnection获取网络资源</li></ol></blockquote><h2 id="1-QQ音乐Api"><a href="#1-QQ音乐Api" class="headerlink" title="1. QQ音乐Api"></a>1. QQ音乐Api</h2><p>请大家移步<a href="https://jsososo.github.io/QQMusicApi/#/">QQ音乐Api</a></p><p>因为我这里的目的是下载歌曲，所以关系的接口是</p><ol><li>搜索</li></ol><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/122.jpg" alt=""></p><ol><li>下载链接</li></ol><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/123.jpg" alt=""></p><p><strong>注意这里的完整链接是<a href="https://api.qq.jsososo.com/search?key=周杰伦">https://api.qq.jsososo.com/search?key=周杰伦</a></strong></p><h2 id="2-流程"><a href="#2-流程" class="headerlink" title="2. 流程"></a>2. 流程</h2><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/125.jpg" alt=""></p><h2 id="3-实现"><a href="#3-实现" class="headerlink" title="3. 实现"></a>3. 实现</h2><h3 id="3-1-获取关键字"><a href="#3-1-获取关键字" class="headerlink" title="3.1 获取关键字"></a>3.1 获取关键字</h3><p>新建BootStrap类作为程序入口</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">BootStrap</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入歌名或歌手关键字：&quot;</span>);</span><br><span class="line">        String keyword = sc.next();</span><br><span class="line">        <span class="comment">// Crawl类下面会说到。</span></span><br><span class="line">        <span class="keyword">new</span> Crawl().crawlMusic(keyword);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-2-根据关键字构造URL"><a href="#3-2-根据关键字构造URL" class="headerlink" title="3.2 根据关键字构造URL"></a>3.2 根据关键字构造URL</h3><p>使用字符串拼接即可，代码和3.3放在一起。</p><h3 id="3-3-从返回的JSON数据中获取歌曲的下载ID"><a href="#3-3-从返回的JSON数据中获取歌曲的下载ID" class="headerlink" title="3.3 从返回的JSON数据中获取歌曲的下载ID"></a>3.3 从返回的JSON数据中获取歌曲的下载ID</h3><p>新建Crawl类，并新建crawlMusic方法</p><p>引入jsoup包，maven设置为</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.jsoup<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>jsoup<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.10.2<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>这里使用jsoup获取网页响应(注意不是DOM对象)，需要忽略格式，并执行execute方法，再获取response的body</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">crawlMusic</span><span class="params">(String keyword)</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">    String url = String url = <span class="string">&quot;https://api.qq.jsososo.com/search?key=&quot;</span> + key;</span><br><span class="line">    Response res = jsoup.connect(url).ignoreContentType(<span class="keyword">true</span>).execute();</span><br><span class="line">    String body = res.body();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接下来需要对JSON对象进行操作，引入fastjson，maven设置为</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.alibaba<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>fastjson<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.2.28<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><strong>将字符串转换为JSON对象，使用JSONObject静态方法parseObject</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">crawlMusic</span><span class="params">(String keyword)</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">    String url = String url = <span class="string">&quot;https://api.qq.jsososo.com/search?key=&quot;</span> + key;</span><br><span class="line">    Response res = jsoup.connect(url).ignoreContentType(<span class="keyword">true</span>).execute();</span><br><span class="line">    String body = res.body();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 处理JSON对象</span></span><br><span class="line">    JSONObject json = JSONObject.parseObject(body);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>到这里，先分析一下JSON数据的格式。</p><p>发现提交搜索请求之后，返回的JSON数据中，只要取data的值，再取list值就可以得到歌曲信息的JSON列表。</p><p>然后分析列表中的元素</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/126.jpg" alt=""></p><p>这里先达到目的就先提取下载ID的值就可以了。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">crawlMusic</span><span class="params">(String keyword)</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">    String url = String url = <span class="string">&quot;https://api.qq.jsososo.com/search?key=&quot;</span> + key;</span><br><span class="line">    Response res = jsoup.connect(url).ignoreContentType(<span class="keyword">true</span>).execute();</span><br><span class="line">    String body = res.body();</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 处理JSON对象</span></span><br><span class="line">    JSONObject json = JSONObject.parseObject(body);</span><br><span class="line">    JSONObject data = json.getJSONObject(<span class="string">&quot;data&quot;</span>);</span><br><span class="line">    JSONArray list = data.getJSONArray(<span class="string">&quot;list&quot;</span>);</span><br><span class="line">    <span class="comment">// 获取下载ID (注意这里不要用增强for)</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">        String downloadApi = list.getJSONObject(i).getString(<span class="string">&quot;songmid&quot;</span>);</span><br><span class="line">        String downloadURL = downloadURL(downloadApi);</span><br><span class="line">        downloadMusic(downloadURL);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-4-根据下载ID构造URL下载歌曲"><a href="#3-4-根据下载ID构造URL下载歌曲" class="headerlink" title="3.4 根据下载ID构造URL下载歌曲"></a>3.4 根据下载ID构造URL下载歌曲</h3><p>现在来完成downloadURL和downloadMusic两个方法。</p><p>downloadURL通过下载ID构造链接，请求到歌曲的真正下载链接。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/127.jpg" alt=""></p><p>data的值即是真正的下载链接。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> String <span class="title">downloadURL</span><span class="params">(String downloadApi)</span> </span>&#123;</span><br><span class="line">    String downloadApi = <span class="string">&quot;https://api.qq.jsososo.com/song/url?id=&quot;</span> + downloadApi;</span><br><span class="line">    Response res = jsoup.connect(downloadApi).ignoreContentType(<span class="keyword">true</span>).execute();</span><br><span class="line">    String body = res.body();</span><br><span class="line">    JSONObject json = JSONObject.parseObject(body);</span><br><span class="line">    <span class="keyword">return</span> json.getString(<span class="string">&quot;data&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>根据真正下载链接下载歌曲，这里的流程是这样的</p><ol><li>新建URL对象。</li><li>建立连接HttpURLConnection。</li><li>获取网络输入流。</li><li>通过缓存流写入到输出流当中。</li><li>关闭流，关闭连接。</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">downloadMusic</span><span class="params">(String url)</span> </span>&#123;</span><br><span class="line">    String path = <span class="string">&quot;D:\\&quot;</span>;</span><br><span class="line">    FileOutputStream fileOut = <span class="keyword">null</span>;</span><br><span class="line">    HttpURLConnection con = <span class="keyword">null</span>;</span><br><span class="line">    InputStream inputStream = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="comment">// 建立URL对象</span></span><br><span class="line">        URL httpUrl = <span class="keyword">new</span> URL(url);</span><br><span class="line">        <span class="comment">// 建立连接</span></span><br><span class="line">        con = (HttpURLConnection) httpUrl.openConnection();</span><br><span class="line">        con.connect();</span><br><span class="line">        <span class="comment">// 获取网络输入流</span></span><br><span class="line">        inputStream = con.getInputStream();</span><br><span class="line">        <span class="comment">// 建立缓存流写入文件</span></span><br><span class="line">        BufferedInputStream bis = <span class="keyword">new</span> BufferedInputStream(inputStream);</span><br><span class="line">        fileOut = <span class="keyword">new</span> FileOutputStream(path+<span class="string">&quot;song.mp3&quot;</span>);</span><br><span class="line">        BufferedOutputStream bos = <span class="keyword">new</span> BufferedOutputStream(fileOut);</span><br><span class="line">        <span class="comment">// 新建缓存字节数组用来传递数据</span></span><br><span class="line">        <span class="keyword">byte</span>[] buf = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">4096</span>];</span><br><span class="line">        <span class="keyword">int</span> length = bis.read(buf);</span><br><span class="line">        <span class="keyword">while</span> (length != -<span class="number">1</span>) &#123;</span><br><span class="line">            bos.write(buf, <span class="number">0</span>, length);</span><br><span class="line">            length = bis.read(buf);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 关闭流和连接</span></span><br><span class="line">        bos.close();</span><br><span class="line">        bis.close();</span><br><span class="line">        con.disconnect();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;下载完毕！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>到此，整个根据关键字下载歌曲的程序就基本写完了，可以运行BootStrap来下载歌曲啦😀</p><h2 id="4-优化"><a href="#4-优化" class="headerlink" title="4. 优化"></a>4. 优化</h2><p>以上完成了下载歌曲的程序，但没有在控制台输出歌曲信息，而且我把下载歌曲的名字写死了，这样很不方便。另外也没有跳转下一页的功能，所以我优化了一下，完整代码如下。</p><p>新增功能</p><blockquote><ul><li>根据需要选择下载的歌曲。</li><li>询问是否查看下一页歌曲。</li><li>默认下载flac音质，没有flac源则下载mp3格式音乐。</li><li>设置歌曲名为下载文件名。</li></ul></blockquote><p><em>BootStrap.java</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ssl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Bootstrap</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入歌名或歌手：&quot;</span>);</span><br><span class="line">        String keyword = sc.next();</span><br><span class="line">        <span class="keyword">int</span> pageNo = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (<span class="keyword">true</span>) &#123;</span><br><span class="line">            <span class="keyword">new</span> Crawl().crawlMusic(keyword, pageNo);</span><br><span class="line">            System.out.println(<span class="string">&quot;是否查看下一页歌曲？(y/n): &quot;</span>);</span><br><span class="line">            String select = sc.next();</span><br><span class="line">            <span class="keyword">if</span> (<span class="string">&quot;y&quot;</span>.equals(select)) &#123;</span><br><span class="line">                pageNo++;</span><br><span class="line">                System.out.println(<span class="string">&quot;查看下一页歌曲~&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                System.out.println(<span class="string">&quot;欢迎下次再会~&quot;</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>Crawl.java</em></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.ssl;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONArray;</span><br><span class="line"><span class="keyword">import</span> com.alibaba.fastjson.JSONObject;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.Connection.Response;</span><br><span class="line"><span class="keyword">import</span> org.jsoup.Jsoup;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.*;</span><br><span class="line"><span class="keyword">import</span> java.net.HttpURLConnection;</span><br><span class="line"><span class="keyword">import</span> java.net.URL;</span><br><span class="line"><span class="keyword">import</span> java.util.*;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Crawl</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">crawlMusic</span><span class="params">(String key, <span class="keyword">int</span> pageNo)</span> <span class="keyword">throws</span> IOException </span>&#123;</span><br><span class="line">        String url = <span class="string">&quot;https://api.qq.jsososo.com/search?key=&quot;</span> + key + <span class="string">&quot;&amp;pageNo=&quot;</span> + pageNo;</span><br><span class="line">        Response res = Jsoup.connect(url).ignoreContentType(<span class="keyword">true</span>).execute();</span><br><span class="line">        String body = res.body();</span><br><span class="line">        JSONObject json = JSONObject.parseObject(body);</span><br><span class="line">        JSONObject data = json.getJSONObject(<span class="string">&quot;data&quot;</span>);</span><br><span class="line">        JSONArray list = data.getJSONArray(<span class="string">&quot;list&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建字典储存歌曲</span></span><br><span class="line">        Map&lt;Integer, List&gt; getSong = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; list.size(); i++) &#123;</span><br><span class="line">            JSONObject songInfo = list.getJSONObject(i);</span><br><span class="line">            <span class="comment">// 歌曲名+歌手</span></span><br><span class="line">            String songName = getSongName(songInfo);</span><br><span class="line">            String singer = getSinger(songInfo);</span><br><span class="line">            <span class="comment">// 歌曲下载Api</span></span><br><span class="line">            String downloadUrl = getDownloadApi(songInfo);</span><br><span class="line">            <span class="comment">// 歌曲下载类型</span></span><br><span class="line">            <span class="keyword">int</span> sizeflac = getSizeFlac(songInfo);</span><br><span class="line">            <span class="comment">// 先将歌曲和链接储存到列表中</span></span><br><span class="line">            List&lt;String&gt; getSongSub = saveSong(songName, singer, downloadUrl, String.valueOf(sizeflac));</span><br><span class="line">            <span class="comment">// 放入字典</span></span><br><span class="line">            getSong.put(i+<span class="number">1</span>, getSongSub);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 选择歌曲下载</span></span><br><span class="line">        selectMusic(getSong);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getDownloadApi</span><span class="params">(JSONObject o)</span> </span>&#123;</span><br><span class="line">        String downloadApi = <span class="string">&quot;https://api.qq.jsososo.com/song/url?id=&quot;</span> + o.getString(<span class="string">&quot;songmid&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> downloadApi;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getSongName</span><span class="params">(JSONObject o)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> o.getString(<span class="string">&quot;songname&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getSizeFlac</span><span class="params">(JSONObject o)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> o.getInteger(<span class="string">&quot;sizeflac&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getSinger</span><span class="params">(JSONObject o)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> o.getJSONArray(<span class="string">&quot;singer&quot;</span>).getJSONObject(<span class="number">0</span>).getString(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">goThroughMap</span><span class="params">(Map map)</span> </span>&#123;</span><br><span class="line">        <span class="comment">// 遍历HashMap</span></span><br><span class="line">        Set&lt;Integer&gt; indexSet = map.keySet();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> index: indexSet) &#123;</span><br><span class="line">            System.out.println(index + <span class="string">&quot;, &quot;</span> + map.get(index).toString());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List <span class="title">saveSong</span><span class="params">(String... s)</span> </span>&#123;</span><br><span class="line">        List&lt;String&gt; getSongSub = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        <span class="keyword">for</span> (String s1: s) &#123;</span><br><span class="line">            getSongSub.add(s1);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> getSongSub;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getDownloadUrl</span><span class="params">(String downloadApi)</span> <span class="keyword">throws</span> IOException</span>&#123;</span><br><span class="line">        Response res = Jsoup.connect(downloadApi).ignoreContentType(<span class="keyword">true</span>).execute();</span><br><span class="line">        String body = res.body();</span><br><span class="line">        JSONObject json = JSONObject.parseObject(body);</span><br><span class="line">        System.out.println(json.getString(<span class="string">&quot;data&quot;</span>));</span><br><span class="line">        <span class="keyword">return</span> json.getString(<span class="string">&quot;data&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">selectMusic</span><span class="params">(Map map)</span> </span>&#123;</span><br><span class="line">        goThroughMap(map);</span><br><span class="line">        Scanner sc = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">        System.out.println(<span class="string">&quot;请输入想要下载音乐对应的序号：(如果输入0，则下载以上全部歌曲; 输入-1，则不下载当前页面歌曲。)&quot;</span>);</span><br><span class="line">        <span class="keyword">int</span> index = sc.nextInt();</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">0</span> &lt; index) &#123;</span><br><span class="line">            download(map, index);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">0</span> == index) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= map.size(); i++) &#123;</span><br><span class="line">                download(map, i);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;不下载当前页歌曲！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">downloadSong</span><span class="params">(String url, String songName, String format)</span> </span>&#123;</span><br><span class="line">        String path = <span class="string">&quot;D:\\Media\\Music\\&quot;</span>;</span><br><span class="line">        FileOutputStream fileOut = <span class="keyword">null</span>;</span><br><span class="line">        HttpURLConnection con = <span class="keyword">null</span>;</span><br><span class="line">        InputStream inputStream = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 建立连接</span></span><br><span class="line">            URL httpUrl = <span class="keyword">new</span> URL(url);</span><br><span class="line">            con = (HttpURLConnection) httpUrl.openConnection();</span><br><span class="line">            <span class="comment">// 连接指定的资源</span></span><br><span class="line">            con.connect();</span><br><span class="line">            System.out.println(<span class="string">&quot;正在下载中...&quot;</span>);</span><br><span class="line">            <span class="comment">// 获取网络输入流</span></span><br><span class="line">            inputStream = con.getInputStream();</span><br><span class="line">            BufferedInputStream bis = <span class="keyword">new</span> BufferedInputStream(inputStream);</span><br><span class="line">            <span class="comment">// 写入到文件</span></span><br><span class="line">            fileOut = <span class="keyword">new</span> FileOutputStream(path + songName + <span class="string">&quot;.&quot;</span> + format);</span><br><span class="line">            BufferedOutputStream bos = <span class="keyword">new</span> BufferedOutputStream(fileOut);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">byte</span>[] buf = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">4096</span>];</span><br><span class="line">            <span class="keyword">int</span> length = bis.read(buf);</span><br><span class="line">            <span class="comment">//保存文件</span></span><br><span class="line">            <span class="keyword">while</span>(length != -<span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                bos.write(buf, <span class="number">0</span>, length);</span><br><span class="line">                length = bis.read(buf);</span><br><span class="line">            &#125;</span><br><span class="line">            bos.close();</span><br><span class="line">            bis.close();</span><br><span class="line">            con.disconnect();</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;下载完毕！&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">download</span><span class="params">(Map map, <span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">        List songInfo = (List) map.get(index);</span><br><span class="line">        String downloadApi = (String) songInfo.get(<span class="number">2</span>);</span><br><span class="line">        String sizeFlac = (String) songInfo.get(<span class="number">3</span>);</span><br><span class="line">        System.out.format(<span class="string">&quot;下载的歌曲是：%s \n&quot;</span>, songInfo.get(<span class="number">0</span>).toString());</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="comment">// 如果sizeFlac为0，则下载MP3格式文件; 否则下载flac格式文件</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="string">&quot;0&quot;</span>.equals(sizeFlac)) &#123;</span><br><span class="line">                String downloadUrl = getDownloadUrl(downloadApi);</span><br><span class="line">                System.out.println(<span class="string">&quot;下载mp3歌曲&quot;</span>);</span><br><span class="line">                downloadSong(downloadUrl, (String) songInfo.get(<span class="number">0</span>), <span class="string">&quot;mp3&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                String downloadUrl = getDownloadUrl(downloadApi + <span class="string">&quot;&amp;type=flac&quot;</span>);</span><br><span class="line">                System.out.println(<span class="string">&quot;下载flac歌曲&quot;</span>);</span><br><span class="line">                downloadSong(downloadUrl, (String) songInfo.get(<span class="number">0</span>), <span class="string">&quot;flac&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用过程</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/130.gif" alt=""></p><blockquote><p>没有采用多线程，怕大佬的服务器扛不住，也怕封我的IP😂，可以听杰伦就好啦，要什么自行车~<br>一定不要商用！<br>下载其他歌手的歌也行哈。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 音乐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>玩转iOS快捷指令</title>
      <link href="post/c7ef/"/>
      <url>post/c7ef/</url>
      
        <content type="html"><![CDATA[<p>之前使用小米手机的时候，闹钟结束了会播报当天的天气，十分方便。后来换了苹果之后，没了这个功能感觉到不便。最近了解到快捷指令这个功能，可以通过自己编写指令，来一键完成一系列操作。再配上自动化操作(也在快捷指令app中)，可以实现闹钟关闭后自动播报天气，播放音乐。下面记录了我实现这个功能的过程。</p><h2 id="1-快捷指令介绍"><a href="#1-快捷指令介绍" class="headerlink" title="1. 快捷指令介绍"></a>1. 快捷指令介绍</h2><p>在最开始的时候，iPhone的“快捷指令”还是一个第三方应用。</p><p>快捷指令的前身叫Workflow，是由前越狱工作者AriWeinstein 团队创作的效率神器，早在2015年就被苹果评选为App Store年度最佳应用。</p><p>这一效率神器前年被苹果公司收购，连同开发团队一起纳入麾下。</p><p>可以说苹果公司对捷径这款APP寄予厚望，甚至不惜在发布会上大篇幅介绍这款APP，到现在“捷径”这一应用的中文名也已经正式更改为大家熟悉的“快捷指令”。</p><h2 id="2-实现闹钟停止播报天气、播放音乐的功能"><a href="#2-实现闹钟停止播报天气、播放音乐的功能" class="headerlink" title="2. 实现闹钟停止播报天气、播放音乐的功能"></a>2. 实现闹钟停止播报天气、播放音乐的功能</h2><p>大家可以下载捷径盒、捷径社区app，从其中导入大佬们已经编写好的快捷指令。我这里编写的快捷指令参照了<a href="https://mp.weixin.qq.com/s/HwXEYhU5emkbpC2FhrVspw">小悟空哥的早安|晚安</a>，由于其中有些功能不适合我以及农历api已经失效，所以自己重写了快捷指令来实现功能。</p><h3 id="2-1-提示“快捷指令”安全设置不允许安装不受信任的快捷指令"><a href="#2-1-提示“快捷指令”安全设置不允许安装不受信任的快捷指令" class="headerlink" title="2.1 提示“快捷指令”安全设置不允许安装不受信任的快捷指令"></a>2.1 提示“快捷指令”安全设置不允许安装不受信任的快捷指令</h3><p>从外部链接导入快捷指令时提示“快捷指令”安全设置不允许安装不受信任的快捷指令。</p><p>先打开快捷指令。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/113.JPG" alt=""></p><p>先在app中随意添加一个快捷指令并运行。</p><p>然后打开 设置 - 快捷指令</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/105.JPG" alt=""></p><p>打开 允许不受信任的快捷指令 即可。</p><h3 id="2-2-实现功能"><a href="#2-2-实现功能" class="headerlink" title="2.2 实现功能"></a>2.2 实现功能</h3><p>我这里不会详细记录每一步是怎么操作的😂因为每一条每一条这样记录实在太长了。我着重记一下我踩坑的几个地方😀</p><h4 id="2-2-1-变量类型"><a href="#2-2-1-变量类型" class="headerlink" title="2.2.1 变量类型"></a>2.2.1 变量类型</h4><p>例如判断今年是否是闰年的操作中，判断结果是否是小数</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/108.JPG" alt=""></p><p>可以将变量类型设置为文本，这样就可以使用<strong>包含</strong>操作，判断其中是否含有“.”; 否则数字类型变量只有大于小于之类的操作。</p><h4 id="2-2-2-魔法变量"><a href="#2-2-2-魔法变量" class="headerlink" title="2.2.2 魔法变量"></a>2.2.2 魔法变量</h4><p>就我个人理解，魔法变量是之前的操作生成的结果，但是没有新建变量来储存它。当需要使用这个结果的时候，可以直接引用魔法变量，找到想引用的值进行引用就可以了。</p><p>例如从天气情况中获取详细信息时，就可以使用<strong>天气状况魔法变量</strong>。具体操作是：魔法变量 - 天气状况</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/109.JPG" alt=""></p><h4 id="2-2-3-URL请求"><a href="#2-2-3-URL请求" class="headerlink" title="2.2.3 URL请求"></a>2.2.3 URL请求</h4><p>我这里添加了<a href="https://www.jinrishici.com/">今日诗词</a>.</p><p>通过官网给的api使用相关服务。</p><p>向<code>https://v2.jinrishici.com/one.json</code>发送get请求，得到json数据解析为字典，获取字典的data值，再从data值中获取content值即可。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/110.JPG" alt=""></p><h4 id="2-2-4-格式化日期"><a href="#2-2-4-格式化日期" class="headerlink" title="2.2.4 格式化日期"></a>2.2.4 格式化日期</h4><p>根据所需要的格式自定格式化标准</p><ul><li>EEE 星期</li><li>dd 月份中天数</li><li>MMM 年中的月份</li><li>yyyy 年份</li><li>HH 小时(24小时制)</li><li>mm 分钟</li><li>ss 秒数</li><li>Z 时区</li></ul><p>例如获取星期可以这样操作：</p><ol><li>先获取当前日期。</li><li>格式化日期 格式为：EEE。</li><li>将结果存在<strong>星期</strong>变量中方便调用。</li></ol><h4 id="2-2-5-自动播放网易云音乐"><a href="#2-2-5-自动播放网易云音乐" class="headerlink" title="2.2.5 自动播放网易云音乐"></a>2.2.5 自动播放网易云音乐</h4><p>先打开网易云音乐，找到 设置-添加Siri捷径</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/106.JPG" alt=""></p><p>选择播放每日推荐</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/107.JPG" alt=""></p><p>然后打开新建的快捷指令，选择 App-网易云音乐</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/111.JPG" alt=""></p><p>即可添加播放每日推荐音乐的操作🤗</p><h4 id="2-2-6-自动化"><a href="#2-2-6-自动化" class="headerlink" title="2.2.6 自动化"></a>2.2.6 自动化</h4><p>在自动化中创建个人自动化，选择 闹钟-停止时 起床</p><p>然后选择添加操作-App-快捷指令-运行快捷指令-起床了</p><p>就可以实现起床后关闭闹钟后自动播报天气和播放音乐了😋</p><blockquote><p>ps: 吐槽一下，这里设置变量的语句是 将变量<strong>变量名</strong>设为<strong>变量值</strong>，给人的感觉很奇怪😂。当初总以为后面的是变量名，有点绕哈哈。</p><p>快捷指令就像是面向过程编程，从上到下，从头到尾把每个操作都安排好，没有方法复用还是很不方便👀</p></blockquote><p>最后附上我做的快捷指令的链接，用Safari打开就能导入到快捷指令App中了👊——<a href="https://www.icloud.com/shortcuts/570a7f43799a4e8cad38463a2919f30d">起床了</a></p><h2 id="3-参考"><a href="#3-参考" class="headerlink" title="3. 参考"></a>3. 参考</h2><ul><li><a href="https://mp.weixin.qq.com/s/HwXEYhU5emkbpC2FhrVspw">小悟空哥的早安|晚安</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iOS </tag>
            
            <tag> 快捷指令 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客添加私密文章</title>
      <link href="post/888b/"/>
      <url>post/888b/</url>
      
        <content type="html"><![CDATA[<p>最近写了一些关于生活方面的随笔，直接挂在网上感觉有点不太好。所以准备设置私密文章，需要输入密码才能看到内容(但其实这种方法并不安全，仅仅是为了阻拦一部分人，毕竟是静态网站。不要放太私密的内容噢😶)</p><h2 id="1-npm安装插件"><a href="#1-npm安装插件" class="headerlink" title="1. npm安装插件"></a>1. npm安装插件</h2><p>安装hexo-blog-encrypt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-blog-encrypt --save</span><br></pre></td></tr></table></figure><h2 id="2-配置主配置文件"><a href="#2-配置主配置文件" class="headerlink" title="2. 配置主配置文件"></a>2. 配置主配置文件</h2><p>在MyBlog/_config.yml文末添加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"># 文章加密</span><br><span class="line">encrypt:</span><br><span class="line">  enable: true</span><br><span class="line">  abstract: 这是一篇加密文章，内容可能是个人情感宣泄或者收费技术。如果你非常好奇，请与我联系。</span><br><span class="line">  message: 输入密码，查看文章。</span><br></pre></td></tr></table></figure><h2 id="3-配置文章Front-Matter"><a href="#3-配置文章Front-Matter" class="headerlink" title="3. 配置文章Front-Matter"></a>3. 配置文章Front-Matter</h2><p>在博文中添加password、abstract和message</p><blockquote><p>password: 访问文章的密码<br>abstract: 博客摘要<br>message: 密码框上的信息</p></blockquote><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/99.jpg" alt=""></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/100.jpg" alt=""></p><h2 id="4-隐藏评论"><a href="#4-隐藏评论" class="headerlink" title="4. 隐藏评论"></a>4. 隐藏评论</h2><p>如果你觉得隐藏的文章还在密码界面显示评论窗口很违和的话，可以在主题文件中的comment.ejs中添加代码</p><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (post.encrypt == <span class="keyword">true</span>) &#123; %&gt;style=<span class="string">&quot;display:none&quot;</span> &lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>设置隐藏评论框。(我这里没使用，因为这样输入密码进入文章后，评论仍不会显示。目前还没找到合适的解决办法😥)</p><h2 id="5-参考"><a href="#5-参考" class="headerlink" title="5. 参考"></a>5. 参考</h2><ul><li><a href="https://blog.csdn.net/cungudafa/article/details/104346521">Hexo（sakura）设置文章置顶+私密文章</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 私密文章 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库-组合两个表</title>
      <link href="post/7a57/"/>
      <url>post/7a57/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>表1：<code>Person</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">+-------------+---------+</span><br><span class="line">| 列名         | 类型     |</span><br><span class="line">+-------------+---------+</span><br><span class="line">| PersonId    | int     |</span><br><span class="line">| FirstName   | varchar |</span><br><span class="line">| LastName    | varchar |</span><br><span class="line">+-------------+---------+</span><br><span class="line">PersonId 是上表主键</span><br></pre></td></tr></table></figure><p>表2：<code>Address</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">+-------------+---------+</span><br><span class="line">| 列名         | 类型    |</span><br><span class="line">+-------------+---------+</span><br><span class="line">| AddressId   | int     |</span><br><span class="line">| PersonId    | int     |</span><br><span class="line">| City        | varchar |</span><br><span class="line">| State       | varchar |</span><br><span class="line">+-------------+---------+</span><br><span class="line">AddressId 是上表主键</span><br></pre></td></tr></table></figure><p>编写一个SQL查询，满足条件：无论person是否对应地址信息，都需要基于上述两表提供person的以下信息：<code>FirstName, LastName, City, State</code></p><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>结合两个表的信息应该使用连接，题中又要求了对于Person表中的person信息，无论Address表中是否对应的有地址信息，都需要输出City、State信息，说明应该以Person为左表进行左连接，连接条件为PersonId。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> a.FirstName, a.LastName, b.City, b.State</span><br><span class="line"><span class="keyword">FROM</span> Person <span class="keyword">AS</span> a <span class="keyword">LEFT</span> <span class="keyword">JOIN</span> Address <span class="keyword">AS</span> b </span><br><span class="line"><span class="keyword">ON</span> a.PersonId=b.PersonId;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/159.JPG" alt=""></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://leetcode-cn.com/problems/combine-two-tables/">LeetCode</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库-第N高的薪水</title>
      <link href="post/9be9/"/>
      <url>post/9be9/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>编写一个SQL查询，获取<code>Employee</code>表中第<code>N</code>高的薪水(Salary)。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">+----+--------+</span><br><span class="line">| Id | Salary |</span><br><span class="line">+----+--------+</span><br><span class="line">| 1  | 100    |</span><br><span class="line">| 2  | 200    |</span><br><span class="line">| 3  | 300    |</span><br><span class="line">+----+--------+</span><br></pre></td></tr></table></figure><p>例如上述<code>Employee</code>表，当<code>N=2</code>时，SQL查询应该返回<code>200</code>作为第二高的薪水，如果不存在第<code>N</code>高的薪水，那么查询应该返回<code>null</code>.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">+------------------------+</span><br><span class="line">| getNthHighestSalary(2) |</span><br><span class="line">+------------------------+</span><br><span class="line">| 200                    |</span><br><span class="line">+------------------------+</span><br></pre></td></tr></table></figure><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>和176题的思路相同。先对Salary去重，防止相等的数据对后面查询造成干扰，根据Salary进行降序排序，然后使用limit关键字略过第<code>N-1</code>条信息，得到接下来的第一条信息则得到的即为第<code>N</code>高的薪水。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">IFNULL</span>(</span><br><span class="line">(<span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> Salary </span><br><span class="line"><span class="keyword">FROM</span> Employee <span class="keyword">ORDER</span> <span class="keyword">BY</span> Salary <span class="keyword">DESC</span> </span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">1</span>, <span class="number">1</span>), <span class="literal">NULL</span>)</span><br><span class="line"><span class="keyword">AS</span> SecondHighestSalary ;</span><br></pre></td></tr></table></figure><p>使用函数的方法来封装查询语句</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">FUNCTION</span> getNthHighestSalary(N <span class="built_in">INT</span>) <span class="keyword">RETURNS</span> <span class="built_in">INT</span></span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line">  <span class="keyword">SET</span> N = N - <span class="number">1</span>;</span><br><span class="line">  RETURN (</span><br><span class="line">      <span class="keyword">SELECT</span> <span class="keyword">IFNULL</span>(</span><br><span class="line">          (<span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> Salary </span><br><span class="line">          <span class="keyword">FROM</span> Employee <span class="keyword">ORDER</span> <span class="keyword">BY</span> Salary <span class="keyword">DESC</span> </span><br><span class="line">          <span class="keyword">LIMIT</span> N, <span class="number">1</span>), <span class="literal">NULL</span></span><br><span class="line">      )</span><br><span class="line">  );</span><br><span class="line"><span class="keyword">END</span></span><br></pre></td></tr></table></figure><p><strong>注意：这里不能在limit关键字后面写N-1，需要先将变量计算好，set N = N - 1，再在sql语句中使用N</strong></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/161.JPG" alt=""></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://leetcode-cn.com/problems/nth-highest-salary/">LeetCode</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>五一白鹿仓游记</title>
      <link href="post/a7b7/"/>
      <url>post/a7b7/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">游玩日期~</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="56063e03003486899e91f650cca39e7bb46d0ea9efc1d0c7c97d024810b1d6f4"></script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 游记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 五一 </tag>
            
            <tag> 旅游 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库-第二高的薪水</title>
      <link href="post/9fdc/"/>
      <url>post/9fdc/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>编写一个SQL查询，获取<code>Employee</code>表中第二高的薪水(Salary)。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">+----+--------+</span><br><span class="line">| Id | Salary |</span><br><span class="line">+----+--------+</span><br><span class="line">| 1  | 100    |</span><br><span class="line">| 2  | 200    |</span><br><span class="line">| 3  | 300    |</span><br><span class="line">+----+--------+</span><br></pre></td></tr></table></figure><p>例如上述<code>Employee</code>表，SQL查询应该返回<code>200</code>作为第二高的薪水，如果不存在第二高的薪水，那么查询应该返回<code>null</code>.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">+---------------------+</span><br><span class="line">| SecondHighestSalary |</span><br><span class="line">+---------------------+</span><br><span class="line">| 200                 |</span><br><span class="line">+---------------------+</span><br></pre></td></tr></table></figure><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><p>先对Salary去重，防止相等的数据对后面查询造成干扰，根据Salary进行降序排序，然后使用limit关键字略过第一条信息，得到第二条信息则得到的即为第二高的薪水。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> Salary <span class="keyword">AS</span> SecondHighestSalary </span><br><span class="line"><span class="keyword">FROM</span> Employee <span class="keyword">ORDER</span> <span class="keyword">BY</span> Salary <span class="keyword">DESC</span> </span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">1</span>, <span class="number">1</span>;</span><br></pre></td></tr></table></figure><blockquote><ul><li>DESC(descend) 降序排列；ASC(ascend) 升序排列；</li><li>DISTINCT 去重(两边不需要带括号👻)</li><li>LIMIT Y OFFSET X 和 LIMIT X, Y 都表示掠过前X条数据，取第Y条数据(基1👀)</li></ul></blockquote><p>如果未查询到结果，需要返回null，使用哦个ifnull进行判断；</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">IFNULL</span>(</span><br><span class="line">(<span class="keyword">SELECT</span> <span class="keyword">DISTINCT</span> Salary </span><br><span class="line"><span class="keyword">FROM</span> Employee <span class="keyword">ORDER</span> <span class="keyword">BY</span> Salary <span class="keyword">DESC</span> </span><br><span class="line"><span class="keyword">LIMIT</span> <span class="number">1</span>, <span class="number">1</span>), <span class="literal">NULL</span>)</span><br><span class="line"><span class="keyword">AS</span> SecondHighestSalary ;</span><br></pre></td></tr></table></figure><blockquote><p>IFNULL(X, Y) 如果X为null则返回Y，否则返回X。<strong>这里的AS要放到IFNULL语句之后！！！</strong></p></blockquote><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/160.JPG" alt=""></p><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://leetcode-cn.com/problems/second-highest-salary/">LeetCode</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IDEA一键部署至云服务器</title>
      <link href="post/134c/"/>
      <url>post/134c/</url>
      
        <content type="html"><![CDATA[<p>将项目部署到云服务器时，上传项目是一个问题。使用SSH工具当然可以直接上传，也很方便。但我的电脑内存不多了，懒得装软件(虽然软件也不大🤣)，看到了大佬的这篇文章——<a href="https://blog.csdn.net/qq_18479653/article/details/105526902">IDEA一键部署至云服务器教程</a>，收获颇多，直接使用此项目来上传war包，岂不美哉~💯</p><h2 id="1-创建密钥对"><a href="#1-创建密钥对" class="headerlink" title="1. 创建密钥对"></a>1. 创建密钥对</h2><p>打开阿里云服务器面板，搜索密钥，选择ecs密钥对。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/86.jpg" alt=""></p><p>创建密钥对。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/87.jpg" alt=""></p><p>点击确定，此时系统会弹出一个文件选择框，选择<strong>C:/用户/用户名/.ssh</strong>这个目录，保存。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/88.jpg" alt=""></p><p>回到网站，在密钥对管理处，选择刚才生成的密钥，点击旁边的绑定密钥对。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/89.jpg" alt=""></p><p>然后重启服务器实例。重启完之后，在本地保存密钥的路径(即<strong>C:/用户/用户名/.ssh</strong>)创建config文件，文件内容如下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># gerrit</span><br><span class="line">Host 云服务器ip</span><br><span class="line">    HostName 云服务器ip</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line">    IdentityFile ~&#x2F;.ssh&#x2F;密钥对文件名</span><br><span class="line">    user git</span><br></pre></td></tr></table></figure><h2 id="2-配置IDEA"><a href="#2-配置IDEA" class="headerlink" title="2. 配置IDEA"></a>2. 配置IDEA</h2><p>打开IDEA，选择 Tools-Deployment-Configuration</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/90.jpg" alt=""></p><p>添加SFTP连接。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/91.jpg" alt=""></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/92.jpg" alt=""></p><p>设置映射。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/93.jpg" alt=""></p><p>点击确定，配置就完成啦😋</p><h2 id="3-上传项目"><a href="#3-上传项目" class="headerlink" title="3. 上传项目"></a>3. 上传项目</h2><p>打包war包，选择 Build - Build Artifacts 打包项目。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/94.jpg" alt=""></p><p>点开target文件夹，选择刚才打包好的war包，点击 Tools - Deployment - Upload to MyServer 就可以啦</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/95.jpg" alt=""></p><h2 id="4-cmd极速连接服务器"><a href="#4-cmd极速连接服务器" class="headerlink" title="4. cmd极速连接服务器"></a>4. cmd极速连接服务器</h2><p>当然，现在你不仅能一键上传项目，还可以在cmd里访问服务器。</p><p>Win+R打开运行窗口，输入cmd，在cmd命令行里输入ssh root@服务器ip，就可以连接到云服务器啦（还是要输一下root用户的密码。）</p><h2 id="5-参考"><a href="#5-参考" class="headerlink" title="5. 参考"></a>5. 参考</h2><ul><li><a href="https://blog.csdn.net/qq_18479653/article/details/105526902">IDEA一键部署至云服务器教程</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
          <category> IDEA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IDEA </tag>
            
            <tag> 云服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据库-大的国家</title>
      <link href="post/18d4/"/>
      <url>post/18d4/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p>有张<code>World</code>表</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">+-----------------+------------+------------+--------------+---------------+</span><br><span class="line">| name            | continent  | area       | population   | gdp           |</span><br><span class="line">+-----------------+------------+------------+--------------+---------------+</span><br><span class="line">| Afghanistan     | Asia       | 652230     | 25500100     | 20343000      |</span><br><span class="line">| Albania         | Europe     | 28748      | 2831741      | 12960000      |</span><br><span class="line">| Algeria         | Africa     | 2381741    | 37100000     | 188681000     |</span><br><span class="line">| Andorra         | Europe     | 468        | 78115        | 3712000       |</span><br><span class="line">| Angola          | Africa     | 1246700    | 20609294     | 100990000     |</span><br><span class="line">+-----------------+------------+------------+--------------+---------------+</span><br></pre></td></tr></table></figure><p>如果一个国家的面积超过300万平方公里，或者人口超过2500万，那么这个国家就是大国家。</p><p>编写一个SQL查询，输出表中所有大国家名称、人口和面积。</p><p>例如上表，应该输出</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">+--------------+-------------+--------------+</span><br><span class="line">| name         | population  | area         |</span><br><span class="line">+--------------+-------------+--------------+</span><br><span class="line">| Afghanistan  | 25500100    | 652230       |</span><br><span class="line">| Algeria      | 37100000    | 2381741      |</span><br><span class="line">+--------------+-------------+--------------+</span><br></pre></td></tr></table></figure><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><h3 id="1-使用OR关键字连接"><a href="#1-使用OR关键字连接" class="headerlink" title="1. 使用OR关键字连接"></a>1. 使用OR关键字连接</h3><p>最开始的思路就是使用OR来筛选所有满足条件的数据</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">name</span>, population, area </span><br><span class="line"><span class="keyword">FROM</span> World <span class="keyword">WHERE</span> area &gt; <span class="number">3000000</span> <span class="keyword">OR</span> population &gt; <span class="number">25000000</span>; </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/190.jpg" alt=""></p><h3 id="2-使用UNION关键字连接"><a href="#2-使用UNION关键字连接" class="headerlink" title="2. 使用UNION关键字连接"></a>2. 使用UNION关键字连接</h3><p>看了题解，发现还可以使用UNION关键字连接。<em>UNION可以连接多个select语句的查询结果，会自动去重；UNION ALL则不会</em></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> <span class="keyword">name</span>, population, area </span><br><span class="line"><span class="keyword">FROM</span> World <span class="keyword">WHERE</span> area &gt; <span class="number">3000000</span></span><br><span class="line"><span class="keyword">UNION</span></span><br><span class="line"><span class="keyword">SELECT</span> <span class="keyword">name</span>, population, area</span><br><span class="line"><span class="keyword">FROM</span> World <span class="keyword">WHERE</span> population &gt; <span class="number">25000000</span>; </span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/191.jpg" alt=""></p><blockquote><p>官方题解说第二种方法会比第一种快，但是我的却是第一种快😂。不过两个思路差不多，使用OR会使索引会失效，在数据量较大的时候查找效率较低，通常建议使用UNION代替OR。</p></blockquote><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://leetcode-cn.com/problems/big-countries/">LeetCode</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将Web项目部署在阿里云服务器</title>
      <link href="post/1750/"/>
      <url>post/1750/</url>
      
        <content type="html"><![CDATA[<p>最近写了一个web小程序，特别特别小的那种😂，想试一下从公网访问的效果。于是从阿里云申请了一个月的免费云服务器，正好了解一下服务器的知识。</p><h2 id="1-服务器是什么？"><a href="#1-服务器是什么？" class="headerlink" title="1. 服务器是什么？"></a>1. 服务器是什么？</h2><p>服务器是计算机的一种，它比普通计算机运行更快、负载更高、价格更贵。服务器在网络中为其它客户机（如PC机、智能手机、ATM等终端甚至是火车系统等大型设备）提供计算或者应用服务。服务器具有高速的CPU运算能力、长时间的可靠运行、强大的I/O外部数据吞吐能力以及更好的扩展性。根据服务器所提供的服务，一般来说服务器都具备承担响应服务请求、承担服务、保障服务的能力。服务器作为电子设备，其内部的结构十分的复杂，但与普通的计算机内部结构相差不大，如：cpu、硬盘、内存，系统、系统总线等。————来自<a href="https://baike.baidu.com/item/%E6%9C%8D%E5%8A%A1%E5%99%A8/100571?fr=aladdin">百度百科</a></p><p>通俗地来说，服务器就是比个人计算机更稳定、更可靠地计算机✅</p><h2 id="2-阿里云服务器"><a href="#2-阿里云服务器" class="headerlink" title="2. 阿里云服务器"></a>2. 阿里云服务器</h2><p>由于是个人学习，所以直接在<a href="https://free.aliyun.com/?spm=5176.12825654.eofdhaal5.d159.5f802c4aOzgP3R&amp;scm=20140722.997.2.1030">阿里云</a>申请的个人使用的免费云服务器。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/77.jpg" alt=""></p><p>我申请的是Debian 9.9系统的服务器。申请好之后在控制台中的实例中点击远程连接即可通过SSH连接到服务器。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/78.jpg" alt=""></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/79.jpg" alt=""></p><p>不知道密码可以在设置中重新设密码。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/80.jpg" alt=""></p><h2 id="3-安装Java、Tomcat"><a href="#3-安装Java、Tomcat" class="headerlink" title="3. 安装Java、Tomcat"></a>3. 安装Java、Tomcat</h2><p>emmm，开始为了方便，直接使用apt包管理工具安装默认的java和tomcat，结果和我开发使用的版本不同，部署项目出了大问题😣，还是老老实实地安装和开发环境相同地版本吧。</p><h3 id="3-1-安装Java"><a href="#3-1-安装Java" class="headerlink" title="3.1 安装Java"></a>3.1 安装Java</h3><p>新建usr/download文件夹。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;usr&#x2F;download</span><br></pre></td></tr></table></figure><p>切换到download文件夹下。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;usr&#x2F;download</span><br></pre></td></tr></table></figure><p>使用wget来下载java压缩包</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https:&#x2F;&#x2F;download.java.net&#x2F;openjdk&#x2F;jdk13&#x2F;ri&#x2F;openjdk-13+33_linux-x64_bin.tar.gz</span><br></pre></td></tr></table></figure><p>新建/usr/lib/jvm文件夹(文件夹存在则跳过)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;usr&#x2F;lib&#x2F;jvm</span><br></pre></td></tr></table></figure><p>将下载的文件解压到这个目录。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf openjdk-13+33_linux-x64_bin.tar.gz -C &#x2F;usr&#x2F;lib&#x2F;jvm</span><br></pre></td></tr></table></figure><p>切换到jdk-13文件夹下，看到以下文件，说明已经成功一半了🤗</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/81.jpg" alt=""></p><p>设置环境变量。在网上搜到的很多教程是把下面的代码卸载/etc/profile文件中，再使用<code>source /etc/profile</code>更新，不知道为啥我这样操作不行。反而直接在命令行直接执行就可以了。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">export JAVA_HOME&#x3D;&#x2F;usr&#x2F;lib&#x2F;jvm&#x2F;jdk-13</span><br><span class="line">export JRE_HOME&#x3D;&#x2F;$&#123;JAVA_HOME&#125;</span><br><span class="line">export CLASSPATH&#x3D;.:$&#123;JAVA_HOME&#125;&#x2F;libss:$&#123;JRE_HOME&#125;&#x2F;lib</span><br><span class="line">export PATH&#x3D;$&#123;JAVA_HOME&#125;&#x2F;bin:$PATH</span><br></pre></td></tr></table></figure><p>然后输入<code>java -version</code>检查java版本。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/82.jpg" alt=""></p><p>说明安装成功🤪</p><h3 id="3-2-安装Tomcat"><a href="#3-2-安装Tomcat" class="headerlink" title="3.2 安装Tomcat"></a>3.2 安装Tomcat</h3><p>在download文件夹中执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget &quot;https:&#x2F;&#x2F;mirror.bit.edu.cn&#x2F;apache&#x2F;tomcat&#x2F;tomcat-9&#x2F;v9.0.34&#x2F;bin&#x2F;apache-tomcat-9.0.34.tar.gz&quot;</span><br></pre></td></tr></table></figure><p>新建目录/usr/lib/tomcat9</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdir &#x2F;usr&#x2F;lib&#x2F;tomcat9</span><br></pre></td></tr></table></figure><p>将文件解压在这个目录下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -xzvf apache-tomcat-9.0.34.tar.gz -C &#x2F;usr&#x2F;lib&#x2F;tomcat9</span><br></pre></td></tr></table></figure><p>就大功告成了(我没有设置环境变量，启动的时候切换到安装目录下的bin目录下启动startup.sh就可以了😀)</p><h2 id="4-启动Tomcat"><a href="#4-启动Tomcat" class="headerlink" title="4. 启动Tomcat"></a>4. 启动Tomcat</h2><p>在/usr/lib/tomcat9的目录下，运行bin/startup.sh，即启动tomcat，当时遇到这样一个错误：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Using CLASSPATH:       &#x2F;usr&#x2F;lib&#x2F;tomcat9&#x2F;bin&#x2F;bootstrap.jar:&#x2F;usr&#x2F;lib&#x2F;tomcat9&#x2F;bin&#x2F;tomcat-juli.jar</span><br><span class="line">touch: 无法创建”&#x2F;usr&#x2F;lib&#x2F;tomcat9&#x2F;logs&#x2F;catalina.out”: 没有那个文件或目录</span><br><span class="line">.&#x2F;catalina.sh: 399: .&#x2F;catalina.sh: cannot create &#x2F;usr&#x2F;lib&#x2F;tomcat9&#x2F;logs&#x2F;catalina.out: Directory nonexistent</span><br></pre></td></tr></table></figure><p>这里就很清楚了，tomcat的logs目录不对，经查tomcat的目录安装在/var/log/tomcat9，因此：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ln -s &#x2F;var&#x2F;log&#x2F;tomcat9 logs</span><br></pre></td></tr></table></figure><blockquote><p>ln命令(link) 它的功能是为某一个文件在另外一个位置建立一个同步的链接。<br>当我们需要在不同的目录，用到相同的文件时，我们不需要在每一个需要的目录下都放一个必须相同的文件，我们只要在某个固定的目录，放上该文件，然后在 其它的目录下用ln命令链接（link）它就可以，不必重复的占用磁盘空间。<a href="https://www.runoob.com/linux/linux-comm-ln.html">菜鸟教程——ln命令</a></p></blockquote><p><strong>注意：这个错误是当时我使用apt安装tomcat时遇到的，自己手动安装可能不会遇到这个错误，在此记录一下。</strong></p><p>启动后，输入服务器的公网ip加端口号，看到如下界面说明启动成功👀</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/83.jpg" alt=""></p><h3 id="4-1-处理服务器公网连接问题"><a href="#4-1-处理服务器公网连接问题" class="headerlink" title="4.1 处理服务器公网连接问题"></a>4.1 处理服务器公网连接问题</h3><p>tomcat默认是在8080端口工作，所以需要给服务器开放8080端口。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/84.jpg" alt=""></p><p>在实例安全组中选择配置规则。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/85.jpg" alt=""></p><p>先点击手动添加，下面的设置按照图中的来就可以了。</p><p>当然你也可以修改tomcat的工作端口，就不用添加8080的访问规则了。</p><h2 id="5-部署Web项目"><a href="#5-部署Web项目" class="headerlink" title="5. 部署Web项目"></a>5. 部署Web项目</h2><p>可以选择ssh工具直接war包，将war包放在/usr/lib/tomcat9/apache-tomcat-9.0.34/webapps目录下，放进去的war包会自动解压缩。</p><p>启动tomcat，就可以在浏览器中输入<strong>公网IP:端口号/项目名称</strong>来访问项目了。</p><p>我这里参考了大佬的帖子，也会自己总结一下，可以看我这篇文章——<a href="https://shenshilei1022.gitee.io/2020/05/09/%E6%8A%80%E6%9C%AF/IDEA%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2%E8%87%B3%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/">IDEA一键部署至云服务器</a></p><h2 id="6-参考"><a href="#6-参考" class="headerlink" title="6. 参考"></a>6. 参考</h2><ul><li><a href="https://www.cnblogs.com/zhangmingcheng/p/5577648.html">在Ubutu14.04的Eclipse启动Tomcat的问题</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 云服务器 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Web </tag>
            
            <tag> 服务器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>在IDEA中使用Maven新建Web项目-记录踩坑</title>
      <link href="post/54e0/"/>
      <url>post/54e0/</url>
      
        <content type="html"><![CDATA[<p>之前我的文章——<a href="https://shenshilei1022.gitee.io/2020/05/04/%E6%8A%80%E6%9C%AF/Java%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0-Maven/">Java学习笔记-Maven</a>中有写在IDEA使用Maven创建Web项目。当时仅仅创建好项目，生成对应的目录结构就结束了，项目还没有跑起来。等到自己部署项目的时候，还是发现了一堆问题，在此记录，以免二次踩坑🐷。</p><h2 id="1-设置Java源码文件夹"><a href="#1-设置Java源码文件夹" class="headerlink" title="1. 设置Java源码文件夹"></a>1. 设置Java源码文件夹</h2><p>由于在IDEA新建的web项目的目录结构中src文件夹下是main文件夹，main中又包括webapp文件夹，没有自动生成放置Java源码的文件夹，需要自己进行创建。</p><p>右键main文件夹，新建目录java。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/63.jpg" alt=""></p><p>右键java文件夹，选择 Mark Directory as - Sources Root，设置完看到java文件夹显示蓝色就好啦（右键java能看到新建java类选项也能证明设置好啦。）</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/64.jpg" alt=""></p><h2 id="2-检查项目结构"><a href="#2-检查项目结构" class="headerlink" title="2. 检查项目结构"></a>2. 检查项目结构</h2><p>点击按钮，打开项目结构面板。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/65.jpg" alt=""></p><p>在网上看到很多教程，都是在Modules中自己新建Web，但是我这个直接打开就有了，可能是版本的问题吧，象征性的检查一下😋</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/66.jpg" alt=""></p><p>选择web 上面一栏看一下是否对应项目的web.xml路径，下面一栏是否对应webapp路径。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/67.jpg" alt=""></p><p>再来看一下Artifacts，和上面一样，我这里也是自动打包好的😭，最后点击下面的确定就好了。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/68.jpg" alt=""></p><h2 id="3-配置Tomcat"><a href="#3-配置Tomcat" class="headerlink" title="3. 配置Tomcat"></a>3. 配置Tomcat</h2><p>选择右上角的添加配置。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/69.jpg" alt=""></p><p>点击 + 号 - Tomcat Server - local</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/70.jpg" alt=""></p><p>配置Tomcat</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/71.jpg" alt=""></p><p>部署war包</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/72.jpg" alt=""></p><p>点击Artifact后，选择和项目名称相同的war包即可。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/73.jpg" alt=""></p><p>可以设置web项目的应用路径。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/75.jpg" alt=""></p><p>选择确定保存设置。</p><h2 id="4-运行"><a href="#4-运行" class="headerlink" title="4. 运行"></a>4. 运行</h2><p>点击绿色小三角运行。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/74.jpg" alt=""></p><p>可以看到浏览器显示出了index.jsp的内容。</p><h2 id="5-踩坑"><a href="#5-踩坑" class="headerlink" title="5. 踩坑"></a>5. 踩坑</h2><p>因为Maven依赖的java版本和IDEA设置的java版本不一样，会导致部署失败。</p><p>解决方法：在Maven中指定IDEA的java版本。IDEA设置的java版本在项目结构中可以看到。打开Maven的settings.xml，在profiles标签中添加下面代码</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">profile</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">id</span>&gt;</span>jdk-11<span class="tag">&lt;/<span class="name">id</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;<span class="name">activation</span>&gt;</span>  </span><br><span class="line">     <span class="tag">&lt;<span class="name">activeByDefault</span>&gt;</span>true<span class="tag">&lt;/<span class="name">activeByDefault</span>&gt;</span>  </span><br><span class="line">     <span class="tag">&lt;<span class="name">jdk</span>&gt;</span>11<span class="tag">&lt;/<span class="name">jdk</span>&gt;</span>  </span><br><span class="line"> <span class="tag">&lt;/<span class="name">activation</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">project.build.sourceEncoding</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">maven.compiler.source</span>&gt;</span>11<span class="tag">&lt;/<span class="name">maven.compiler.source</span>&gt;</span>  </span><br><span class="line">     <span class="tag">&lt;<span class="name">maven.compiler.target</span>&gt;</span>11<span class="tag">&lt;/<span class="name">maven.compiler.target</span>&gt;</span>   </span><br><span class="line"> <span class="tag">&lt;/<span class="name">properties</span>&gt;</span>   </span><br><span class="line"><span class="tag">&lt;/<span class="name">profile</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
          <category> IDEA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Web </tag>
            
            <tag> Maven </tag>
            
            <tag> IDEA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode-两数之和</title>
      <link href="post/9ab8/"/>
      <url>post/9ab8/</url>
      
        <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><blockquote><p>给定一个数组<code>nums</code>和一个目标值<code>target</code>，请你在该数组中找出和为目标值的那两个整数，并返回它们的数组下标。你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。</p></blockquote><div class="note default no-icon flat"><p>示例：<br>    给定 nums = [2, 7, 11, 15], target = 9 <br><br>    因为 nums[0] + nums[1] = 2 + 7 = 9 <br><br>    所以返回 [0, 1]</p></div><h2 id="解法"><a href="#解法" class="headerlink" title="解法"></a>解法</h2><h3 id="1-暴力法"><a href="#1-暴力法" class="headerlink" title="1. 暴力法"></a>1. 暴力法</h3><p>由于每种输入只会对应一种答案，使用双重循环遍历，若相加得到的值等于target，则返回对应的下标数组。</p><p><strong>实现</strong><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] twoSum(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target) &#123;</span><br><span class="line">        <span class="keyword">int</span>[] result = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length - <span class="number">1</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">int</span> j = i + <span class="number">1</span>; j &lt; nums.length; j++) &#123;</span><br><span class="line">                <span class="keyword">if</span> (target == nums[i] + nums[j]) &#123;</span><br><span class="line">                    result[<span class="number">0</span>] = i;</span><br><span class="line">                    result[<span class="number">1</span>] = j;</span><br><span class="line">                    <span class="keyword">return</span> result;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/42.jpg" alt=""></p><p><strong>复杂度分析</strong></p><ul><li><p>时间复杂度：$O(n^2)$</p><p> 对长度为n的数组进行了双重遍历，所以时间复杂度是$O(n^2)$</p></li><li><p>空间复杂度：$O(1)$</p><p> 没有使用额外的内存空间，所以空间复杂度为$O(1)$</p></li></ul><h3 id="2-HashMap"><a href="#2-HashMap" class="headerlink" title="2. HashMap"></a>2. HashMap</h3><p>为了对时间复杂度进行优化，需要一种更有效的方式来进行检索。保持数组中每个元素和其索引相互对应的最好方法是什么？哈希表。</p><p>可以遍历数组，将对应的键值对存入哈希表。然后判断哈希表中是否存在$target-nums[i]$，若存在，则直接返回索引。</p><p><strong>实现</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">int</span>[] twoSum(<span class="keyword">int</span>[] nums, <span class="keyword">int</span> target) &#123;</span><br><span class="line">        <span class="keyword">int</span>[] result = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line">        HashMap&lt;Integer,Integer&gt; hash = <span class="keyword">new</span> HashMap&lt;Integer, Integer&gt;();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; nums.length; i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (hash.containsKey(target-nums[i])) &#123;</span><br><span class="line">                result[<span class="number">0</span>] = hash.get(target-nums[i]);</span><br><span class="line">                result[<span class="number">1</span>] = i;</span><br><span class="line">                <span class="keyword">return</span> result;</span><br><span class="line">            &#125;</span><br><span class="line">            hash.put(nums[i], i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/43.jpg" alt=""></p><p><strong>复杂度分析</strong></p><ul><li><p>时间复杂度：$O(n)$</p><p> 只对长度为n的数组进行了一次遍历。</p></li><li><p>空间复杂度：$O(n)$</p><p> 所需的额外空间取决于哈希表中存储元素的个数。</p></li></ul><h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><ul><li><a href="https://leetcode-cn.com/problems/two-sum/">LeetCode</a></li><li><a href="https://56rrk9.coding-pages.com/algorithm/1.twosum/">1.两数之和</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
          <category> LeetCode </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习笔记-Maven</title>
      <link href="post/4b7c/"/>
      <url>post/4b7c/</url>
      
        <content type="html"><![CDATA[<h2 id="1-为什么要学习Maven？"><a href="#1-为什么要学习Maven？" class="headerlink" title="1. 为什么要学习Maven？"></a>1. 为什么要学习Maven？</h2><p>Maven是专门用于构建和管理Java相关项目的工具。Maven在犹太语中表示专家的意思。</p><p>所以使用Maven管理Java项目，就是专家啦~</p><p><strong>主要作用</strong></p><ul><li>相同的项目结构：<ul><li>有一个pom.xml用于维护当前项目都用了哪些jar包。</li><li>所有的java代码都放在src/main/java下面</li><li>所有的测试代码都放在src/test/java下面</li></ul></li><li>统一维护jar包<ul><li>maven将所有jar包放在一个仓库里，只需要给出jar包的名称和版本号即可，相当于从仓库中引用需要的jar包。这样即使很多项目也不会维护重复的jar包啦。</li></ul></li></ul><h2 id="2-Maven仓库"><a href="#2-Maven仓库" class="headerlink" title="2. Maven仓库"></a>2. Maven仓库</h2><p>打开Maven安装目录，找到conf/settings.xml配置文件打开。</p><p>localRepository标签中的路径为Maven的仓库路径，默认在C盘，可以修改为d:/Maven/repository</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/48.jpg" alt=""></p><p><strong>使用阿里云下载路径：</strong></p><p>防止jar包下载过慢，还是换成国内阿里云的镜像。</p><p>在settings.xml配置文件中添加如下代码：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">mirror</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">id</span>&gt;</span>alimaven<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">mirrorOf</span>&gt;</span>central<span class="tag">&lt;/<span class="name">mirrorOf</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">name</span>&gt;</span>aliyun maven<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">url</span>&gt;</span>http://maven.aliyun.com/nexus/content/repositories/central/<span class="tag">&lt;/<span class="name">url</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mirror</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/49.jpg" alt=""></p><h2 id="3-IntelliJ中Maven设置"><a href="#3-IntelliJ中Maven设置" class="headerlink" title="3. IntelliJ中Maven设置"></a>3. IntelliJ中Maven设置</h2><p>打开File-Settings</p><p>选择Build, Execution, Deployment，选择Build Tools下的Maven</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/50.jpg" alt=""></p><p>修改Maven路径，配置文件(这里勾选Override才可以修改)</p><p>另外，为了避免重启idea配置改变，打开File-Other Settings-Settings for New Projects</p><p>做同样的设置。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/52.jpg" alt=""></p><h2 id="4-在IntelliJ中利用Maven创建项目"><a href="#4-在IntelliJ中利用Maven创建项目" class="headerlink" title="4. 在IntelliJ中利用Maven创建项目"></a>4. 在IntelliJ中利用Maven创建项目</h2><h3 id="4-1-J2SE项目"><a href="#4-1-J2SE项目" class="headerlink" title="4.1 J2SE项目"></a>4.1 J2SE项目</h3><p>新建项目，选择Maven，勾选从模板创建，选择quickstart，点击Next</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/53.jpg" alt=""></p><p>填写项目参数，接着Next。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/54.jpg" alt=""></p><p>看到如下Maven配置，这时也可以检查一下Maven配置是否正确。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/55.jpg" alt=""></p><p>确定新建项目。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/56.jpg" alt=""></p><p>此时项目就新建好了，点击右下角的Import Changes初始化一些工作。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/57.jpg" alt=""></p><p>得到目录结构如下的项目。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/58.jpg" alt=""></p><blockquote><p>main java代码<br>test 测试java代码<br>pom.xml 配置文件(管理jar包)</p></blockquote><h3 id="4-2-Web项目"><a href="#4-2-Web项目" class="headerlink" title="4.2 Web项目"></a>4.2 Web项目</h3><p>新建项目，选择webapp模板。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/59.jpg" alt=""></p><p>填写项目信息。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/60.jpg" alt=""></p><p>后面几步和创建JavaSE项目相同，这里就不赘述了。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/61.jpg" alt=""></p><p>得到web项目的目录结构。</p><h2 id="5-参考"><a href="#5-参考" class="headerlink" title="5. 参考"></a>5. 参考</h2><ul><li><a href="https://how2j.cn/k/maven/maven-introduction/1328.html">How2J-Maven</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 项目管理 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用bash脚本实现Gitee Pages一键部署</title>
      <link href="post/d369/"/>
      <url>post/d369/</url>
      
        <content type="html"><![CDATA[<p>因为Gitee Pages服务的免费版是不支持更新仓库后自动部署的，所以每次更新博客都需要手动进码云仓库，点击 服务-Gitee Pages-更新。一点都不Geek🤣，之前我的解决方法是使用bat批处理脚本打开对应的网址，自己的操作就变成了点击脚本-再点击网页中的更新就🆗了。但实际上还是有点麻烦，于是在网上搜索了一下，还真的有大佬做过这个事情——<a href="https://forgkan.gitee.io/2019/12/25/note/gitee-auto-pages/">gitee pages服务自动部署分析</a>，参考了大佬的方法，自己做了一些修改，实现了这个功能。</p><h2 id="1-分析请求"><a href="#1-分析请求" class="headerlink" title="1. 分析请求"></a>1. 分析请求</h2><p>打开Giee Pages部署页面，右键点击网页，点击检查。</p><p>然后点击Network，再点击🚫，清空目前监听的网络请求。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/44.jpg" alt=""></p><p>点击更新。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/45.jpg" alt=""></p><p>发现有这几个请求，实际上只需要发出rebuild这个请求就可以实现Gitee Pages的部署了。</p><p>我们点开rebuild这个请求，脚本中的请求头、cookie、token信息在其中都能找到。</p><h2 id="2-实现脚本"><a href="#2-实现脚本" class="headerlink" title="2. 实现脚本"></a>2. 实现脚本</h2><p>这里使用bash中的curl命令来发送post请求。其中-H表示添加请求头信息，—compressed表示以压缩的形式返回，&gt;./log.txt 最后重定向在当前目录下的log文件中(这里查看是否部署成功。)</p><p>脚本代码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line">hexo clean</span><br><span class="line">hexo d -g</span><br><span class="line"></span><br><span class="line">curl <span class="string">&#x27;你的Request URL&#x27;</span> -X POST -H <span class="string">&#x27;authority: gitee.com&#x27;</span> -H <span class="string">&#x27;pragma: no-cache&#x27;</span> -H <span class="string">&#x27;cache-control: no-cache&#x27;</span> -H <span class="string">&#x27;accept: */*&#x27;</span> -H <span class="string">&#x27;origin: https://gitee.com&#x27;</span> -H <span class="string">&#x27;x-csrf-token: 你的x-csrf-token&#x27;</span> -H <span class="string">&#x27;x-requested-with: XMLHttpRequest&#x27;</span> -H <span class="string">&#x27;user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.163 Safari/537.36&#x27;</span> -H <span class="string">&#x27;content-type: application/x-www-form-urlencoded; charset=UTF-8&#x27;</span> -H <span class="string">&#x27;sec-fetch-site: same-origin&#x27;</span> -H <span class="string">&#x27;sec-fetch-mode: cors&#x27;</span> -H <span class="string">&#x27;referer: 你的Referer&#x27;</span> -H <span class="string">&#x27;accept-encoding: gzip, deflate, br&#x27;</span> -H <span class="string">&#x27;accept-language: zh-CN,zh;q=0.9&#x27;</span> -H <span class="string">&#x27;cookie: 你的Cookie 注意不是Set-Cookie&#x27;</span> --data <span class="string">&#x27;branch=master&amp;build_directory=&amp;force_https=true&#x27;</span> --compressed &gt; ./log.txt</span><br></pre></td></tr></table></figure><p>将脚本中需要替换的参数在rebuild请求中粘贴过来即可。</p><p><strong>其中注意这行代码：</strong><br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--data <span class="string">&#x27;branch=master&amp;build_directory=&amp;force_https=true&#x27;</span></span><br></pre></td></tr></table></figure></p><p>这里携带的三个参数对应的是下图中的选项</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/46.jpg" alt=""></p><p>因为我要部署的是整个仓库，所以build_directory的值为空。</p><p>我是windows系统，直接打开git bash，输入命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bash 脚本名.sh</span><br></pre></td></tr></table></figure><h2 id="3-参考"><a href="#3-参考" class="headerlink" title="3. 参考"></a>3. 参考</h2><ul><li><a href="https://forgkan.gitee.io/2019/12/25/note/gitee-auto-pages/">gitee pages服务自动部署分析</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Gitee </tag>
            
            <tag> bash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用mkdocs管理文档</title>
      <link href="post/d947/"/>
      <url>post/d947/</url>
      
        <content type="html"><![CDATA[<p>想把leetcode刷题记录放在博客上，但是博客弄得比较花哨，不适合放这种过于严肃的东西🤠。在网上浏览看到了这位大佬的博客——<a href="https://www.smslit.top/">SMSLIT</a>，使用了mkdocs来管理，看起来条理清晰，简单大方。于是我也准备搭建自己的mkdocs。</p><h2 id="1-下载mkdocs"><a href="#1-下载mkdocs" class="headerlink" title="1. 下载mkdocs"></a>1. 下载mkdocs</h2><p>打开命令行，使用pip下载mkdocs(pip下载速度慢的可以看我这篇文章——<a href="https://shenshilei1022.gitee.io/2020/04/16/%E6%95%99%E7%A8%8B/Windows%E4%B8%8B%E7%BB%99pip%E6%8D%A2%E4%B8%BA%E5%9B%BD%E5%86%85%E6%BA%90/">Windows下给pip换为国内源</a>)</p><blockquote><p>没有安装python的小伙伴自行搜索一下哈，很简单，这里就不多赘述了。</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install mkdocs</span><br></pre></td></tr></table></figure><p>查看版本，如下图说明安装成功</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/37.jpg" alt=""></p><h2 id="2-新建MyDocs"><a href="#2-新建MyDocs" class="headerlink" title="2. 新建MyDocs"></a>2. 新建MyDocs</h2><p>使用命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdocs new MyDocs</span><br></pre></td></tr></table></figure><p>新建MyDocs。</p><p>类似于Hugo、Hexo静态博客，切换进MyDocs文件夹，目录结构如下</p><pre><code>- docsmkdocs.yml</code></pre><p>其中mkdocs.yml是配置文件，docs是放文档的目录。</p><h2 id="3-在本地启动mkdocs"><a href="#3-在本地启动mkdocs" class="headerlink" title="3. 在本地启动mkdocs"></a>3. 在本地启动mkdocs</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdocs serve</span><br></pre></td></tr></table></figure><p><strong>注意是serve不是server！！！</strong></p><p>在本地启动mkdocs</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/38.jpg" alt=""></p><p>即在localhost:8000即可看到新建的mkdocs。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/39.jpg" alt=""></p><h2 id="4-修改主题"><a href="#4-修改主题" class="headerlink" title="4. 修改主题"></a>4. 修改主题</h2><p>在这里选择自己心仪的主题——<a href="https://github.com/mkdocs/mkdocs/wiki/MkDocs-Themes">MkDocs Theme</a>.</p><p>我选的是<a href="https://mkdocs.github.io/mkdocs-bootswatch/">MkDocs Bootstrap Theme</a></p><p>使用pip进行安装</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install mkdocs-bootswatch</span><br></pre></td></tr></table></figure><p>安装后在配置文件中添加一句即可切换主题</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">theme:</span> <span class="string">flatly</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/40.jpg" alt=""></p><h2 id="5-设置子目录"><a href="#5-设置子目录" class="headerlink" title="5. 设置子目录"></a>5. 设置子目录</h2><p>配置文件当中这样写</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">nav:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">简介:</span> <span class="string">index.md</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">about:</span> </span><br><span class="line">      <span class="bullet">-</span> <span class="attr">&#x27;hey&#x27;:</span> <span class="string">&#x27;hey.md&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="6-Markdown扩展"><a href="#6-Markdown扩展" class="headerlink" title="6. Markdown扩展"></a>6. Markdown扩展</h2><p>这个主题的官方文档里没有具体说明，直接写文章的话有些markdown语法它识别不出来。我找了半天👀，发现<a href="https://squidfunk.github.io/mkdocs-material/extensions/pymdown/">Material for MkDocs</a>主题中介绍了pydown，所以我就直接把这个配置拿过来了，使用Bootstrap主题也可以正常使用。</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">markdown_extensions:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">admonition</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">codehilite:</span></span><br><span class="line">      <span class="attr">guess_lang:</span> <span class="literal">false</span></span><br><span class="line">      <span class="attr">linenums:</span> <span class="literal">false</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">toc:</span></span><br><span class="line">      <span class="attr">permalink:</span> <span class="literal">true</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">footnotes</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">meta</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">def_list</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pymdownx.arithmatex</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">pymdownx.betterem:</span></span><br><span class="line">      <span class="attr">smart_enable:</span> <span class="string">all</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pymdownx.caret</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pymdownx.critic</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pymdownx.details</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">pymdownx.emoji:</span></span><br><span class="line">      <span class="attr">emoji_generator:</span> <span class="type">!!python/name:pymdownx.emoji.to_png</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pymdownx.inlinehilite</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pymdownx.magiclink</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pymdownx.mark</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pymdownx.smartsymbols</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pymdownx.superfences</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pymdownx.tasklist</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pymdownx.tilde</span></span><br></pre></td></tr></table></figure><h2 id="7-设置网页图标"><a href="#7-设置网页图标" class="headerlink" title="7. 设置网页图标"></a>7. 设置网页图标</h2><p>在docs目录下新建img文件夹，把图片文件放置在img文件夹下，并命名为favicon.ico即可。</p><blockquote><p>换完之后清理一下浏览器缓存，否则看到的还是之前的图标。</p></blockquote><p>更详细的配置请参考官方文档呀——<a href="https://www.mkdocs.org/">MkDocs</a></p><h2 id="8-部署到Gitee-Pages"><a href="#8-部署到Gitee-Pages" class="headerlink" title="8. 部署到Gitee Pages"></a>8. 部署到Gitee Pages</h2><p>和Hugo博客一样，输入命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkdocs build</span><br></pre></td></tr></table></figure><p>会在MyDocs目录下生成site文件夹，把这个文件夹推送到Gitee仓库并启用Gitee Pages服务就好啦</p><h2 id="9-增加LaTeX公式识别"><a href="#9-增加LaTeX公式识别" class="headerlink" title="9. 增加LaTeX公式识别"></a>9. 增加LaTeX公式识别</h2><p>2020.5.31补，想要使mkdocs的markdown能够识别LaTeX公式，需要在mkdocs.yml添加js</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">extra_javascript:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.0/MathJax.js?config=TeX-MML-AM_CHTML</span></span><br></pre></td></tr></table></figure><h2 id="10-参考"><a href="#10-参考" class="headerlink" title="10. 参考"></a>10. 参考</h2><ul><li><a href="https://www.smslit.top/">SMSLIT</a></li><li><a href="https://www.mkdocs.org/">MkDocs</a></li><li><a href="https://github.com/mkdocs/mkdocs/wiki/MkDocs-Themes">MkDocs Theme</a></li><li><a href="https://mkdocs.github.io/mkdocs-bootswatch/">MkDocs Bootstrap Theme</a></li><li><a href="https://squidfunk.github.io/mkdocs-material/extensions/pymdown/">Material for MkDocs</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> mkdocs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> mkdocs </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows下给pip换为国内源</title>
      <link href="post/c825/"/>
      <url>post/c825/</url>
      
        <content type="html"><![CDATA[<p>想使用mkdocs对文档进行管理，它是依赖python环境的，下载的话也是使用pip进行下载。但当时下载的时候，因为默认源是国外的，所以下载速度非常慢，最终下载失败。也无法更新pip版本。就去网上搜了解决方法，将pip源换为国内源，特此记录。</p><h2 id="1-临时换源"><a href="#1-临时换源" class="headerlink" title="1. 临时换源"></a>1. 临时换源</h2><p>安装命令后面添加<code>-i 源地址</code>项</p><p>例如安装mkdocs的命令为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install mkdocs -i https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple</span><br></pre></td></tr></table></figure><p>这样就会从清华的镜像来安装mkdocs。（下载速度瞬间飙升🌊）</p><blockquote><p>国内的一些源：</p><ul><li>清华：<a href="https://pypi.tuna.tsinghua.edu.cn/simple">https://pypi.tuna.tsinghua.edu.cn/simple</a></li><li>阿里云：<a href="http://mirrors.aliyun.com/pypi/simple/">http://mirrors.aliyun.com/pypi/simple/</a></li><li>中国科技大学<a href="https://pypi.mirrors.ustc.edu.cn/simple/">https://pypi.mirrors.ustc.edu.cn/simple/</a></li><li>华中理工大学：<a href="http://pypi.hustunique.com/">http://pypi.hustunique.com/</a></li><li>山东理工大学：<a href="http://pypi.sdutlinux.org/">http://pypi.sdutlinux.org/</a></li><li>豆瓣：<a href="http://pypi.douban.com/simple/">http://pypi.douban.com/simple/</a></li></ul></blockquote><h2 id="2-永久修改源"><a href="#2-永久修改源" class="headerlink" title="2. 永久修改源"></a>2. 永久修改源</h2><p>在C盘用户的当前登录账号的目录下新建pip文件夹。</p><p>以我的路径为例：</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/35.jpg" alt=""></p><p>新建pip.ini，其中的内容为：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[global]</span><br><span class="line"> index-url &#x3D; https:&#x2F;&#x2F;pypi.tuna.tsinghua.edu.cn&#x2F;simple</span><br></pre></td></tr></table></figure><p>则将默认源修改为清华的镜像。(无法直接添加ini文件的，可以先添加txt文件，修改文本内容后，修改文件后缀名为ini)</p><h2 id="3-参考"><a href="#3-参考" class="headerlink" title="3. 参考"></a>3. 参考</h2><ul><li><a href="https://www.jb51.net/article/163315.htm">Python 安装第三方库 pip install 安装慢安装不上的解决办法</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> pip </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> pip </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客添加DaoVoice在线联系以及壁纸切换</title>
      <link href="post/4f8f/"/>
      <url>post/4f8f/</url>
      
        <content type="html"><![CDATA[<p>继续给博客加东西🚀…</p><h2 id="1-DaoVoice在线联系"><a href="#1-DaoVoice在线联系" class="headerlink" title="1. DaoVoice在线联系"></a>1. DaoVoice在线联系</h2><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/29.jpg" alt=""></p><p>可以通过网页上点击右下角的短信图标发起在线会话。</p><p>首先，进入<a href="http://dashboard.daovoice.io/">DaoVoice官网</a>进行注册。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/30.jpg" alt=""></p><p>进入 应用设置 - 安装到网站 - 仅匿名用户，将这两段代码复制到themes/Sakura/layout/footer.ejs中(<strong>没放到head中是因为这样可以加快网页的加载速度。</strong>)</p><p>最后<code>hexo clean</code>&amp;&amp;<code>hexo g</code>&amp;&amp;<code>hexo s</code>三连在本地启动博客，就能看到右下角的DaoVoice图标啦~</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/31.jpg" alt=""></p><p>在聊天设置可以自定义一些设置👀</p><p>在个人设置中绑定微信，如果有人在网页上发起会话，可以在DaoVoice小程序中查看消息，微信也会弹出消息提醒，很方便~</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/32.jpg" alt=""></p><h2 id="2-壁纸切换按钮"><a href="#2-壁纸切换按钮" class="headerlink" title="2. 壁纸切换按钮"></a>2. 壁纸切换按钮</h2><p>我直接复制大佬文章的代码过来的哈哈😁，同样放在themes/Sakura/layout/footer.ejs</p><p><a href="https://cungudafa.top/post/771.htm">Hexo（sakura）背景动画、壁纸、通讯栏（自定义样式）</a></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!--壁纸切换--&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;skin-menu no-select&quot;</span> <span class="attr">id</span>=<span class="string">&quot;mainskin&quot;</span>  <span class="attr">style</span>=<span class="string">&quot;position: fixed&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;theme-controls row-container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">&quot;menu-list&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">&quot;white-bg&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-television&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">&quot;sakura-bg&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;iconfont icon-sakura&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">&quot;gribs-bg&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-slack&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">&quot;KAdots-bg&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;iconfont icon-dots&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">&quot;totem-bg&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-optin-monster&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">&quot;pixiv-bg&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;iconfont icon-pixiv&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">&quot;bing-bg&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;iconfont icon-bing&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">li</span> <span class="attr">id</span>=<span class="string">&quot;dark-bg&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;fa fa-moon-o&quot;</span> <span class="attr">aria-hidden</span>=<span class="string">&quot;true&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;font-family-controls row-container&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;control-btn-serif selected&quot;</span> <span class="attr">data-mode</span>=<span class="string">&quot;serif&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;mashiro_global.font_control.change_font()&quot;</span>&gt;</span>Serif<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">class</span>=<span class="string">&quot;control-btn-sans-serif&quot;</span> <span class="attr">data-mode</span>=<span class="string">&quot;sans-serif&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;mashiro_global.font_control.change_font()&quot;</span>&gt;</span>Sans Serif<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span>   </span><br><span class="line">  <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">&quot;night-mode-cover&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span> </span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;changeSkin-gear no-select&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;keys&quot;</span> <span class="attr">id</span>=<span class="string">&quot;setbtn&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;open-skinMenu&quot;</span>&gt;</span> 切换壁纸 | SCHEME TOOL </span><br><span class="line">      <span class="symbol">&amp;nbsp;</span><span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">&quot;iconfont icon-gear inline-block rotating&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span> <span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="comment">&lt;!--skin.end--&gt;</span></span><br></pre></td></tr></table></figure><p><em>放在footer标签中。</em></p><h2 id="3-参考"><a href="#3-参考" class="headerlink" title="3. 参考"></a>3. 参考</h2><ul><li><a href="http://guide.daocloud.io/daovoice?_ga=2.263215620.985882249.1586951667-1030723848.1586951667">DaoVoice用户手册</a></li><li><a href="https://cungudafa.top/post/771.htm">Hexo（sakura）背景动画、壁纸、通讯栏（自定义样式）</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 美化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给Hexo博客添加live2d看板汪</title>
      <link href="post/1e53/"/>
      <url>post/1e53/</url>
      
        <content type="html"><![CDATA[<p>频繁折腾博客中…😂看到很多大佬的博客中都有一只看板娘，而且会根据鼠标的位置做不同的动作，很是羡慕。于是准备在自己的博客上也加一只~</p><h2 id="1-安装live2d"><a href="#1-安装live2d" class="headerlink" title="1. 安装live2d"></a>1. 安装live2d</h2><p>切换到博客的根目录下，打开git bash</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br></pre></td></tr></table></figure><p>来安装hexo-helper-live2d插件。</p><blockquote><p>提示用<code>npm audit fix</code>进行修复，按照指令做就好了。</p></blockquote><hr><h2 id="2-安装喜欢的模型"><a href="#2-安装喜欢的模型" class="headerlink" title="2. 安装喜欢的模型"></a>2. 安装喜欢的模型</h2><p>模型名在这里——<a href="https://github.com/xiazeyu/live2d-widget-models">live2d-widget-models</a></p><p>模型预览在这里——<a href="https://huaji8.top/post/live2d-plugin-2.0/">hexo live2d 模型</a></p><p>我这里下载的是wanko，一只狗子🤗，命令如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install --save live2d-widget-model-wanko</span><br></pre></td></tr></table></figure><h2 id="3-配置信息"><a href="#3-配置信息" class="headerlink" title="3. 配置信息"></a>3. 配置信息</h2><p>在博客根目录下的_config.yml中添加配置：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># live2d</span></span><br><span class="line"><span class="attr">live2d:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span>  <span class="comment"># 是否启动</span></span><br><span class="line">  <span class="attr">scriptFrom:</span> <span class="string">local</span> <span class="comment"># 默认</span></span><br><span class="line">  <span class="attr">pluginRootPath:</span> <span class="string">live2dw/</span>  <span class="comment"># 插件在站点上的根目录(相对路径)</span></span><br><span class="line">  <span class="attr">pluginJsPath:</span> <span class="string">lib/</span>  <span class="comment"># 脚本文件相对与插件根目录路径</span></span><br><span class="line">  <span class="attr">pluginModelPath:</span> <span class="string">assets/</span>  <span class="comment"># 模型文件相对与插件根目录路径</span></span><br><span class="line">  <span class="attr">tagMode:</span> <span class="literal">false</span>  <span class="comment"># 标签模式, 是否仅替换 live2d tag标签而非插入到所有页面中</span></span><br><span class="line">  <span class="attr">debug:</span> <span class="literal">false</span>  <span class="comment"># 调试, 是否在控制台输出日志</span></span><br><span class="line">  <span class="attr">model:</span></span><br><span class="line">    <span class="attr">use:</span> <span class="string">live2d-widget-model-wanko</span>  <span class="comment">## 模型文件</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="attr">position:</span> <span class="string">left</span> <span class="comment"># 定位方向 left right top bottom</span></span><br><span class="line">    <span class="attr">width:</span> <span class="number">200</span>  <span class="comment"># 小人宽度</span></span><br><span class="line">    <span class="attr">height:</span> <span class="number">200</span> <span class="comment">#  小人高度</span></span><br><span class="line">    <span class="attr">hOffset:</span> <span class="number">40</span>  <span class="comment"># 向👉偏移</span></span><br><span class="line">    <span class="attr">vOffset:</span> <span class="number">50</span>  <span class="comment"># 像👆偏移</span></span><br><span class="line">  <span class="attr">mobile:</span></span><br><span class="line">    <span class="attr">show:</span> <span class="literal">false</span>  <span class="comment"># 手机端是否显示</span></span><br><span class="line">  <span class="attr">dialog:</span> </span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span>     <span class="comment">#true/false 是否显示人物对话框</span></span><br><span class="line">    <span class="attr">hitokoto:</span> <span class="literal">true</span>   <span class="comment">#true/false  是否使用一言API</span></span><br></pre></td></tr></table></figure><p>更详细的配置请参见<a href="https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md">hexo live2d官方文档</a>。</p><p>然后清空一下浏览器缓存，<code>hexo clean</code>&amp;&amp;<code>hexo g</code>&amp;&amp;<code>hexo s</code>三连就能看见博客里多了一只傻汪啦😝</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/25.jpg" alt=""></p><h2 id="4-参考"><a href="#4-参考" class="headerlink" title="4. 参考"></a>4. 参考</h2><ul><li><a href="https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md">hexo live2d 官方文档</a></li><li><a href="https://github.com/xiazeyu/live2d-widget-models">live2d-widget-models</a></li><li><a href="https://huaji8.top/post/live2d-plugin-2.0/">hexo live2d 模型</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> live2d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Github+jsDelivr搭建自己的免费cdn</title>
      <link href="post/2a9/"/>
      <url>post/2a9/</url>
      
        <content type="html"><![CDATA[<p>目前的Hexo博客使用了<a href="https://github.com/honjun/hexo-theme-sakura">Sakura主题</a>，其中的静态资源(图片，js等)都被作者放在了其cdn上，作者也很鼓励使用者建立自己的cdn，存放自己的静态资源。查阅了相关资料，使用Github+jsDelivr搭建自己的免费cdn。</p><h2 id="1-CDN"><a href="#1-CDN" class="headerlink" title="1. CDN"></a>1. CDN</h2><p>CDN的全称是Content Delivery Network，即内容分发网络。CDN是构建在网络之上的内容分发网络，依靠部署在各地的边缘服务器，通过中心平台的负载均衡、内容分发、调度等功能模块，使用户就近获取所需内容，降低网络拥塞，提高用户访问响应速度和命中率。CDN的关键技术主要有内容存储和分发技术。</p><hr><h2 id="2-新建cdn仓库"><a href="#2-新建cdn仓库" class="headerlink" title="2. 新建cdn仓库"></a>2. 新建cdn仓库</h2><p>打开<a href="https://github.com">GitHub</a>，新建仓库，仓库名为cdn。</p><p>其他的将本地文件推送到远程仓库的步骤，我就不在此赘述了😂，可以博客内查找git方面的内容。</p><hr><h2 id="3-发布版本"><a href="#3-发布版本" class="headerlink" title="3. 发布版本"></a>3. 发布版本</h2><p>点击release</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/21.png" alt=""></p><p>生成版本</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/22.png" alt=""></p><blockquote><p>例如我这里添加分别就是：</p><ul><li>版本号：1.0</li><li>版本名称：hexo</li><li>描述：增加了博客背景图片。</li></ul></blockquote><hr><h2 id="4-jsDelivr引用"><a href="#4-jsDelivr引用" class="headerlink" title="4. jsDelivr引用"></a>4. jsDelivr引用</h2><p>将github上的资源转化为快速访问网址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;你的用户名&#x2F;你的仓库名@发布的版本号&#x2F;文件路径</span><br></pre></td></tr></table></figure><p>其中版本号不是必须的，如果没有，则默认引用最新的资源。我觉得有版本号的话更清晰一点👀。</p><p>如果网址最后的文件路径是一个文件夹的话，将显示这个文件夹下面的文件。</p><p>例如：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;shenshilei1022&#x2F;cdn@1.5&#x2F;img&#x2F;</span><br></pre></td></tr></table></figure><hr><h2 id="5-参考"><a href="#5-参考" class="headerlink" title="5. 参考"></a>5. 参考</h2><ul><li><a href="https://blog.csdn.net/cungudafa/article/details/104274949">Github+jsDelivr搭建自己的免费cdn</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> jsDelivr </tag>
            
            <tag> GitHub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>把GitHub图床迁移到Gitee</title>
      <link href="post/f66f/"/>
      <url>post/f66f/</url>
      
        <content type="html"><![CDATA[<p>昨天将Hugo博客迁移到Hexo，网站也重新部署到了码云，便想着干脆把图床也部署到码云，这样图片加载的速度也会变快，用PicGo上传的时候也不会总是报错了。😜</p><p>参考大佬文章——<a href="https://saquarius.com/2019/07/picgo-gitee%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/">PICGO+Gitee搭建图床</a></p><h2 id="1-安装GitHub-Plus插件"><a href="#1-安装GitHub-Plus插件" class="headerlink" title="1. 安装GitHub-Plus插件"></a>1. 安装GitHub-Plus插件</h2><p>打开PicGo(没有安装的小伙伴移步我这篇博客<a href="https://shenshilei1022.gitee.io/2020/02/21/%E6%95%99%E7%A8%8B/%E4%BD%BF%E7%94%A8PicGo+GitHub%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%9B%BE%E5%BA%8A/">使用PicGo+GitHub搭建个人图床</a>)，选择插件设置，搜索github，下载github-plus插件。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/17.png" alt=""></p><blockquote><p>安装插件报错的话，先安装Node.js🤗</p></blockquote><hr><h2 id="2-图床设置"><a href="#2-图床设置" class="headerlink" title="2. 图床设置"></a>2. 图床设置</h2><p>在Gitee上新建仓库，权限设置为公开。(已经在github建过图床的点击最下面的导入github仓库，复制仓库链接就可以把之间的文件都同步过来啦。)</p><p>在PicGo中点击图床设置-githubPlus</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/18.png" alt=""></p><ul><li>repo 填写 用户名/仓库名</li><li>branch 仓库分支名 </li><li>path 图片保存路径</li><li>origin 修改为gitee</li><li>token 令牌，与github类似，下面会介绍如何获取。</li></ul><hr><h2 id="3-获取token"><a href="#3-获取token" class="headerlink" title="3. 获取token"></a>3. 获取token</h2><p>打开<a href="https://gitee.com/">码云</a>，登录自己账号之后，点开设置，找到私人令牌，创建私人令牌。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/19.png" alt=""></p><p>权限选择projects即可~</p><p>点击提交，就已经成功啦，速度飞快。</p><hr><h2 id="4-批量修改之前博客的图床链接"><a href="#4-批量修改之前博客的图床链接" class="headerlink" title="4. 批量修改之前博客的图床链接"></a>4. 批量修改之前博客的图床链接</h2><p>之前图床在github上的时候，已经写了挺多篇博客的了。图床迁移之后，需要修改这些博客中引用的图片链接。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;Github上的图床链接格式</span><br><span class="line">![](https:&#x2F;&#x2F;raw.githubusercontent.com&#x2F;shenshilei1022&#x2F;hugo_image_resource&#x2F;master&#x2F;imgs&#x2F;TrakaiLithuania_ZH-CN0447602818_1920x1080.jpg)</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;Gitee上的图床链接格式</span><br><span class="line">![](https:&#x2F;&#x2F;gitee.com&#x2F;shenshilei1022&#x2F;hugo_image_resource&#x2F;raw&#x2F;master&#x2F;imgs&#x2F;TrakaiLithuania_ZH-CN0447602818_1920x1080.jpg)</span><br></pre></td></tr></table></figure><p>可以看到两个链接只有master前面的地方不一样，那么只需要找到文件中的图床链接，把链接以master分割，再加上<code>&quot;https://gitee.com/shenshilei1022/hugo_image_resource/raw/master&quot;</code>即可构成新的图床链接。</p><p>我参考了这位大佬的Python脚本——<a href="https://www.jianshu.com/p/91aa86cbf5c6">博客图床迁移记</a>，自己做了一些修改。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ReplaceImage</span>:</span></span><br><span class="line"></span><br><span class="line">    path = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    lineNum = <span class="number">0</span></span><br><span class="line">    s = <span class="string">r&#x27;http[s]?://(?:raw.githubusercontent.com)/.*?(?:jpg|png|JPG)&#x27;</span></span><br><span class="line">    subpath = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    failednum = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span>(<span class="params">self</span>):</span></span><br><span class="line">        self.url_re = re.<span class="built_in">compile</span>(self.s)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">search</span>(<span class="params">self, path</span>):</span></span><br><span class="line">        self.path = path</span><br><span class="line">        self.handleDir(path)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handleDir</span>(<span class="params">self, path</span>):</span></span><br><span class="line">        dirs = os.listdir(path)</span><br><span class="line">        <span class="keyword">for</span> d <span class="keyword">in</span> dirs:</span><br><span class="line">            subpath = os.path.join(path, d)</span><br><span class="line">            <span class="keyword">if</span> os.path.isfile(subpath) <span class="keyword">and</span> subpath.endswith(<span class="string">&quot;.md&quot;</span>):</span><br><span class="line">                self.handleFile(subpath)</span><br><span class="line">            <span class="keyword">elif</span> os.path.isdir(subpath):</span><br><span class="line">                self.handleDir(subpath)</span><br><span class="line"></span><br><span class="line">        print(<span class="string">&quot;program end&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">handleFile</span>(<span class="params">self, fileName</span>):</span></span><br><span class="line">        print(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">        print(<span class="string">&quot;start read file %s...&quot;</span> % fileName)</span><br><span class="line">        self.subpath = fileName</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 注意编码</span></span><br><span class="line">        f = <span class="built_in">open</span>(fileName, <span class="string">&#x27;r+&#x27;</span>,encoding=<span class="string">&quot;utf-8&quot;</span>,errors=<span class="string">&quot;ignore&quot;</span>)</span><br><span class="line">        self.lineNum = <span class="number">1</span></span><br><span class="line">        data = <span class="string">&quot;&quot;</span></span><br><span class="line">        <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">            line = f.readline()</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> line:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            line = self.replaceImage(line)</span><br><span class="line">            self.lineNum = self.lineNum + <span class="number">1</span></span><br><span class="line">            data += line</span><br><span class="line">        f.close()</span><br><span class="line"></span><br><span class="line">        <span class="comment"># 注意编码</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(fileName, <span class="string">&quot;w+&quot;</span>,encoding=<span class="string">&quot;utf-8&quot;</span>,errors=<span class="string">&quot;ignore&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.writelines(data)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">replaceImage</span>(<span class="params">self, line</span>):</span></span><br><span class="line"></span><br><span class="line">        searchResult = self.searchImage(line)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> searchResult:</span><br><span class="line">            <span class="keyword">return</span> line</span><br><span class="line">        oldline = line</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> result <span class="keyword">in</span> searchResult:</span><br><span class="line">            <span class="comment"># 这里的replace_url就是将要替换的Gitee图床链接</span></span><br><span class="line">            replace_url = self.uploadImage(result)</span><br><span class="line">            line = self.replaceLine(line, result, replace_url)</span><br><span class="line"></span><br><span class="line">        print(<span class="string">&quot;before replace is %s&quot;</span> % oldline)</span><br><span class="line">        print(<span class="string">&quot;after replace is %s&quot;</span> % line)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> line</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">searchImage</span>(<span class="params">self, line</span>):</span></span><br><span class="line">        <span class="keyword">if</span> self.url_re.search(line):</span><br><span class="line">            all_search = search.url_re.findall(line)</span><br><span class="line">            <span class="keyword">return</span> all_search</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">return</span> []</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">replaceLine</span>(<span class="params">self, line, search, url</span>):</span></span><br><span class="line">        <span class="keyword">return</span> line.replace(search, url)</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">uploadImage</span>(<span class="params">self, url</span>):</span></span><br><span class="line">        subUrl = url.split(<span class="string">&quot;master&quot;</span>)[<span class="number">1</span>]</span><br><span class="line">        targetUrl = <span class="string">&quot;https://gitee.com/shenshilei1022/hugo_image_resource/raw/master&quot;</span> + subUrl</span><br><span class="line">        <span class="keyword">return</span> targetUrl</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    search = ReplaceImage()</span><br><span class="line">    print(<span class="string">&quot;please input dir path and api key:\n&quot;</span>)</span><br><span class="line">    <span class="built_in">dir</span> = <span class="built_in">input</span>(<span class="string">&quot;dir:&quot;</span>)</span><br><span class="line">    search.search(<span class="built_in">dir</span>)</span><br></pre></td></tr></table></figure><p>运行之后输入post路径就可把目录下的文章的图片都换成Gitee图床链接啦😃</p><hr><h2 id="5-参考"><a href="#5-参考" class="headerlink" title="5. 参考"></a>5. 参考</h2><ul><li><a href="https://saquarius.com/2019/07/picgo-gitee%E6%90%AD%E5%BB%BA%E5%9B%BE%E5%BA%8A/">PICGO+Gitee搭建图床</a></li><li><a href="https://www.jianshu.com/p/91aa86cbf5c6">博客图床迁移记</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
          <category> 图床 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
            <tag> Gitee </tag>
            
            <tag> PicGo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>迁移博客到Hexo以及博客美化</title>
      <link href="post/63b0/"/>
      <url>post/63b0/</url>
      
        <content type="html"><![CDATA[<p>前两天看到别人搭建的个人博客十分好看😃，便萌生了换主题的念头，因为当时使用的是Hugo驱动的博客，找到了一个皮肤<a href="https://github.com/shenshilei1022/hugo-tranquilpeak-theme">hugo-tranquilpeak-theme</a>，布局特别对我口味，一顿折腾配置好了之后，最终发现有一个问题——生成的文章目录有时候会失效，即点击章节不会向对应内容进行跳转，换了好几个Hugo版本也没有解决，还请教了大佬——<a href="https://saquarius.com/">Saquarius</a>(大佬使用的也是这个皮肤，但没有存在这种问题)，也没有发现问题在哪儿😭。强迫症的我实在忍不了，于是转战Hexo，花了快一天时间把博文迁移到了Hexo，并使用了<a href="https://github.com/shenshilei1022/hexo-theme-sakura">Sakura</a>主题。</p><h2 id="1-下载安装Node-js"><a href="#1-下载安装Node-js" class="headerlink" title="1. 下载安装Node.js"></a>1. 下载安装Node.js</h2><p>由于我已经有Git环境了，所以只需要下载Node.js就可以了。(没下载Git的朋友可以看我这篇文章——<a href="https://shenshilei1022.gitee.io/2020/02/24/%E6%8A%80%E6%9C%AF/Git%E5%AD%A6%E4%B9%A0-%E6%9C%AC%E5%9C%B0%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6%E4%B8%8E%E7%89%88%E6%9C%AC%E5%9B%9E%E6%BA%AF/">Git学习-本地版本控制与版本回溯</a>).</p><p>进入<a href="https://nodejs.org/zh-cn/download/">Node.js官网</a>，下载对应位数安装包进行安装，我这里下载64位的。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/1.png" alt=""></p><p>下载完成后，解压安装即可。</p><div class="note default flat"><p>Node.js是在服务端的js代码，就比如说我用java写的程序在Tomcat运行，而Node.js相当于js写的Tomcat，用js写的程序在Node.js中可以跑起来。</p></div><hr><h2 id="2-安装Hexo"><a href="#2-安装Hexo" class="headerlink" title="2. 安装Hexo"></a>2. 安装Hexo</h2><p>打开git bash (<strong>这里最好使用git bash，使用windows命令行可能会出现奇奇怪怪的错误。。。</strong>)</p><p>使用命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br></pre></td></tr></table></figure><p>如下图即安装成功了😆。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/2.png" alt=""></p><p>但是由于某些网络因素(emmm👀)，直接使用npm下载包会十分的慢，所以下载cnpm，并换成淘宝的镜像。</p><p>使用命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org</span><br></pre></td></tr></table></figure><p>下载完成后输入<code>cnpm -v</code>，出现下图即安装成功。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/3.png" alt=""></p><p>接下来，使用cnpm来安装Hexo</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure><p>下载完成后输入<code>hexo -v</code>，出现下图即安装成功。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/4.png" alt=""></p><hr><h2 id="3-在本地部署Hexo"><a href="#3-在本地部署Hexo" class="headerlink" title="3. 在本地部署Hexo"></a>3. 在本地部署Hexo</h2><p>继续在git bash中操作💪。</p><p>新建并切换到blog文件夹。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir blog</span><br><span class="line">cd blog</span><br></pre></td></tr></table></figure><p>使用<code>hexo init</code>初始化文件夹(有点像git的操作哈哈)</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/5.png" alt=""></p><p>此时就可以Start blogging with Hexo！(这个初始化文件夹的过程也比较久👀)</p><p>看一下此时文件夹的结构</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/6.png" alt=""></p><p>其中</p><ul><li>_config.yml是博客的配置文件。</li><li>scaffolds里是生成文章或页面的模板。</li><li>source里存放文章和页面的markdown文件。</li><li>themes里存放着主题。</li></ul><p>现在输入命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>在本地启动</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/7.png" alt=""></p><p>此时在浏览器中输入localhost: 4000即可看到博客啦。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/8.png" alt=""></p><p><em>这里Hexo使用的是初始化下载的landscape皮肤。</em></p><p>万里长征已经走了一半了🧐</p><hr><h2 id="4-将博客部署在Gitee上"><a href="#4-将博客部署在Gitee上" class="headerlink" title="4.将博客部署在Gitee上"></a>4.将博客部署在Gitee上</h2><p>之前我的Hugo博客是放在GitHub上的，速度实在是太慢了。所以这次选择放在Gitee上，毕竟服务器在国内，能加快网页的加载速度。</p><p>与Hugo博客部署在GitHub上类似，首先进入<a href="https://gitee.com/">码云</a>，新建仓库，<strong>仓库名一定要和自己的仓库名完全相同</strong>(例如我的用户名就是红线标的那一串，没有@，那么完整的仓库名就是shenshilei1022)，只有这样最终生成的链接才是<a href="https://shenshilei1022.gitee.io，否则会有文件夹路径😥">https://shenshilei1022.gitee.io，否则会有文件夹路径😥</a></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/9.png" alt=""></p><p>仓库权限选择公开。</p><p>复制自己仓库的地址。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/10.png" alt=""></p><p>打开blog目录下的_config.yml文件，添加如下代码。（大约在80行左右。）</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/deployment.html</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">https://gitee.com/shenshilei1022/shenshilei1022.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>保存并退出。继续使用git bash，执行<code>hexo clean</code>清理缓存文件，再执行<code>hexo d -g</code>生成public文件夹同时进行部署。</p><p>然后再打开刚才新建的Gitee仓库，找到服务，点击Gitee Pages。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/11.png" alt=""></p><p>点击更新进行部署Gitee Pages。</p><p><strong>这里没有GitHub好的地方是每一次部署完仓库，都有重新部署一次Gitee Pages，否则内容不会进行更新。（当然，你可以选择Gitee Pages Pro👀）不过为了网站的响应速度，这点缺点还是可以接受的😂</strong></p><p>走到这儿，Hexo博客就正式搭好了~</p><hr><h2 id="5-使用Sakura主题"><a href="#5-使用Sakura主题" class="headerlink" title="5. 使用Sakura主题"></a>5. 使用Sakura主题</h2><p>打开git bash，克隆<a href="https://github.com/honjun/hexo-theme-sakura">Sakura主题</a>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https:&#x2F;&#x2F;github.com&#x2F;honjun&#x2F;hexo-theme-sakura</span><br></pre></td></tr></table></figure><p>然后将克隆下来的文件全部复制到blog文件夹中(<strong>注意：不是themes文件夹！是blog根文件夹！我就踩了这个坑😥</strong>)，提示替换就进行替换。</p><p>接下来安装依赖(<strong>一定不要忘记这一步！</strong>)。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/12.png" alt=""></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/13.png" alt=""></p><p>使用<code>hugo s</code>即可在本地进行启动了~</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/14.png" alt=""></p><p>好康的不得了😋，博客的配置大家就移步到<a href="https://docs.hojun.cn/sakura/docs/#/home">作者的官方文档</a>处吧，中文版且十分详细，我就不在这里班门弄斧了😂</p><hr><h2 id="6-美化主题"><a href="#6-美化主题" class="headerlink" title="6. 美化主题"></a>6. 美化主题</h2><p>与其说是美化，不如说是根据自己的喜好自定义一些东西🚶‍♂️。</p><h3 id="6-1-修改签名栏"><a href="#6-1-修改签名栏" class="headerlink" title="6.1 修改签名栏"></a>6.1 修改签名栏</h3><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/15.png" alt=""></p><p>修改签名栏的背景色为白色。</p><p>打开themes\Sakura\source\css中的style.css文件，找到如下代码，进行替换（大概在4080行）。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.header-info</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">63%</span>;</span><br><span class="line">    <span class="attribute">margin</span>:auto;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#111101</span>;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">255</span>,<span class="number">255</span>,.<span class="number">9</span>);</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>:<span class="number">22px</span>;</span><br><span class="line">    <span class="attribute">letter-spacing</span>:<span class="number">0</span>;</span><br><span class="line">    <span class="attribute">line-height</span>:<span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>:<span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">box-sizing</span>:initial;</span><br><span class="line">    <span class="attribute">white-space</span>:nowrap;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="6-2-去掉右下角的视频播放按钮"><a href="#6-2-去掉右下角的视频播放按钮" class="headerlink" title="6.2 去掉右下角的视频播放按钮"></a>6.2 去掉右下角的视频播放按钮</h3><p>打开themes\Sakura\layout_partial中的headertop.ejs文件，找到下面这行代码，在style中添加<code>opacity: 0;</code>，即透明度设置为全透明。参考这位大佬的方法——<a href="https://www.mirai.club/2019/06/01/%E8%B6%85%E7%BA%A7%E5%B9%B2%E8%B4%A7-Hexo-Sakura%E4%B8%BB%E9%A2%98%E4%BD%BF%E7%94%A8%E4%B8%8E%E4%BF%AE%E6%94%B9/">超级干货-Hexo-Sakura主题使用与修改</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;video style&#x3D;&quot;object-fit: fill; opacity: 0;&quot; id&#x3D;&quot;bgvideo&quot; class&#x3D;&quot;video&quot; video-name&#x3D;&quot;&quot; src&#x3D;&quot;&quot; width&#x3D;&quot;auto&quot; preload&#x3D;&quot;auto&quot;&gt;</span><br></pre></td></tr></table></figure><p>同时去掉这句代码。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div id&#x3D;&quot;video-btn&quot; class&#x3D;&quot;loadvideo videolive&quot;&gt;</span><br></pre></td></tr></table></figure><h3 id="6-3-去掉左下角的贴底音乐播放器"><a href="#6-3-去掉左下角的贴底音乐播放器" class="headerlink" title="6.3 去掉左下角的贴底音乐播放器"></a>6.3 去掉左下角的贴底音乐播放器</h3><p>把主题中_config.yml文件中的aplayer设置参数全部注释掉就可以了😂</p><p>需要其他设置可以参考<a href="https://github.com/MoePlayer/APlayer">APlayer</a>和<a href="https://github.com/shenshilei1022/MetingJS">MetingJS</a>的官方文档。</p><h3 id="6-4-增加网站运行时间"><a href="#6-4-增加网站运行时间" class="headerlink" title="6.4 增加网站运行时间"></a>6.4 增加网站运行时间</h3><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/16.png" alt=""></p><p>参考大佬的方法——<a href="https://www.bingyublog.com/2019/02/20/hexo%E5%A2%9E%E5%8A%A0%E7%BD%91%E7%AB%99%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4%E7%BB%9F%E8%AE%A1/">Hexo增加网站运行时间统计</a></p><p>打开themes\Sakura\layout_partial中的footer.ejs文件。</p><p>添加如下代码即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&lt;span&gt;本站已运行&lt;span id&#x3D;&quot;showDays&quot;&gt;&lt;&#x2F;span&gt;&lt;&#x2F;span&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">var seconds &#x3D; 1000;</span><br><span class="line">var minutes &#x3D; seconds * 60;</span><br><span class="line">var hours &#x3D; minutes * 60;</span><br><span class="line">var days &#x3D; hours * 24;</span><br><span class="line">var years &#x3D; days * 365;</span><br><span class="line">var birthDay &#x3D; Date.UTC(2020,02,19,14,00,00); &#x2F;&#x2F; 这里设置建站时间</span><br><span class="line">setInterval(function() &#123;</span><br><span class="line">    var today &#x3D; new Date();</span><br><span class="line">    var todayYear &#x3D; today.getFullYear();</span><br><span class="line">    var todayMonth &#x3D; today.getMonth()+1;</span><br><span class="line">    var todayDate &#x3D; today.getDate();</span><br><span class="line">    var todayHour &#x3D; today.getHours();</span><br><span class="line">    var todayMinute &#x3D; today.getMinutes();</span><br><span class="line">    var todaySecond &#x3D; today.getSeconds();</span><br><span class="line">    var now &#x3D; Date.UTC(todayYear,todayMonth,todayDate,todayHour,todayMinute,todaySecond);</span><br><span class="line">    var diff &#x3D; now - birthDay;</span><br><span class="line">    var diffYears &#x3D; Math.floor(diff&#x2F;years);</span><br><span class="line">    var diffDays &#x3D; Math.floor((diff&#x2F;days)-diffYears*365);</span><br><span class="line">    var diffHours &#x3D; Math.floor((diff-(diffYears*365+diffDays)*days)&#x2F;hours);</span><br><span class="line">    var diffMinutes &#x3D; Math.floor((diff-(diffYears*365+diffDays)*days-diffHours*hours)&#x2F;minutes);</span><br><span class="line">    var diffSeconds &#x3D; Math.floor((diff-(diffYears*365+diffDays)*days-diffHours*hours-diffMinutes*minutes)&#x2F;seconds);</span><br><span class="line">    document.getElementById(&#39;showDays&#39;).innerHTML&#x3D;&quot;&quot;+diffYears+&quot;年&quot;+diffDays+&quot;天&quot;+diffHours+&quot;小时&quot;+diffMinutes+&quot;分钟&quot;+diffSeconds+&quot;秒&quot;;</span><br><span class="line">&#125;, 1000);</span><br><span class="line">&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure><h3 id="6-5-更改图标"><a href="#6-5-更改图标" class="headerlink" title="6.5 更改图标"></a>6.5 更改图标</h3><p>我主页上的码云图标和导航栏中的图标分别是从<a href="https://www.iconfont.cn/?spm=a313x.7781069.1998910419.d4d0a486a">阿里巴巴矢量库</a>和<a href="https://fontawesome.dashgame.com/?tdsourcetag=s_pcqq_aiomsg#basic">Font Awsome</a>中获得。</p><p>从矢量库中获得的图标使用cdn即可更换。</p><p>Font Awsome的图标使用如下格式的语法即可替换<br><code>fa: fa-leaf</code>，fa后面跟着的是图标名称，名称可以再上面的官网中获取。</p><h2 id="7-参考"><a href="#7-参考" class="headerlink" title="7. 参考"></a>7. 参考</h2><ul><li><a href="https://docs.hojun.cn/sakura/docs/#/home">Sakura</a></li><li><a href="https://www.mirai.club/2019/06/01/%E8%B6%85%E7%BA%A7%E5%B9%B2%E8%B4%A7-Hexo-Sakura%E4%B8%BB%E9%A2%98%E4%BD%BF%E7%94%A8%E4%B8%8E%E4%BF%AE%E6%94%B9/">超级干货-Hexo-Sakura主题使用与修改</a></li><li><a href="https://www.bingyublog.com/2019/02/20/hexo%E5%A2%9E%E5%8A%A0%E7%BD%91%E7%AB%99%E8%BF%90%E8%A1%8C%E6%97%B6%E9%97%B4%E7%BB%9F%E8%AE%A1/">Hexo增加网站运行时间统计</a></li><li><a href="https://github.com/MoePlayer/APlayer">APlayer</a></li><li><a href="https://github.com/shenshilei1022/MetingJS">MetingJS</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 个人博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装Maven</title>
      <link href="post/bd1/"/>
      <url>post/bd1/</url>
      
        <content type="html"><![CDATA[<h1 id="安装Maven"><a href="#安装Maven" class="headerlink" title="安装Maven"></a>安装Maven</h1><h2 id="1-下载Maven"><a href="#1-下载Maven" class="headerlink" title="1. 下载Maven"></a>1. 下载Maven</h2><p>进入<a href="http://maven.apache.org/download.cgi">Maven官网</a>，下载自己想要格式的压缩包。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/Maven%E5%AE%98%E7%BD%91.png" alt=""></p><h2 id="2-配置环境变量"><a href="#2-配置环境变量" class="headerlink" title="2. 配置环境变量"></a>2. 配置环境变量</h2><p>将压缩包解压到任意路径下。进入环境变量设置，添加一个环境变量</p><p><code>MAVEN_HOME 路径</code></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/Maven%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.png" alt=""></p><p>在Path环境变量中添加一条</p><p><code>%MAVEN_HOME%\bin\</code></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/MavenPath%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.png" alt=""></p><p>保存设置✌</p><h2 id="3-检验是否安装成功"><a href="#3-检验是否安装成功" class="headerlink" title="3. 检验是否安装成功"></a>3. 检验是否安装成功</h2><p>打开命令行窗口，输入<code>mvn -v</code>，出现版本号信息，说明安装成功~</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/Maven%E5%AE%89%E8%A3%85%E6%88%90%E5%8A%9F.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
          <category> 安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Maven </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端学习-实现别踩白块</title>
      <link href="post/6319/"/>
      <url>post/6319/</url>
      
        <content type="html"><![CDATA[<h2 id="1-思路"><a href="#1-思路" class="headerlink" title="1. 思路"></a>1. 思路</h2><ul><li>漏点判断：当div元素下有6个行元素时，对最后一行的元素进行判断，如果仍有元素具有target属性，则判断有漏点，游戏结束，显示最终成绩，终止动画定时函数，终止提速定时函数。</li><li>点击判断：点击的元素若没有target属性，则游戏结束；有则成绩+1</li><li>动画实现：使用定时函数，来修改位置参数。</li></ul><p><a href="https://shenshilei1022.github.io/JavaScriptPractice/%E5%88%AB%E8%B8%A9%E7%99%BD%E5%9D%97/doNotStepOnWhiteBlocks.html">在线观看</a></p><h2 id="2-代码"><a href="#2-代码" class="headerlink" title="2. 代码"></a>2. 代码</h2><p><em>HTML</em><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span><span class="attr">content</span>=<span class="string">&quot;text/html; charset=utf-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;style.css&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;score&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;wrapper&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span>Game Start<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;author&quot;</span>&gt;</span>作者：沈世磊<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;main&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;jquery.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;doNotStepOnWhiteBlocks.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><em>CSS</em><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.wrapper</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">200px</span> auto;</span><br><span class="line">    <span class="attribute">border-style</span>: solid;</span><br><span class="line">    <span class="attribute">border-width</span>: <span class="number">2px</span>;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="attribute">overflow</span>: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.main</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: -<span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.title</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: Arial;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">color</span>: lightseagreen;</span><br><span class="line">    <span class="attribute">border-bottom-style</span>: dashed;</span><br><span class="line">    <span class="attribute">border-bottom-width</span>: <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">border-color</span>: lightblue;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">cursor</span>: pointer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.author</span> &#123;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.row</span> &#123;</span><br><span class="line">    <span class="attribute">border-bottom-width</span>: <span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">border-bottom-style</span>: solid;</span><br><span class="line">    <span class="attribute">border-bottom-color</span>: black;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">149px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.col</span>, <span class="selector-class">.target</span> &#123;</span><br><span class="line">    <span class="attribute">border-right-width</span>: <span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">border-right-style</span>: solid;</span><br><span class="line">    <span class="attribute">border-right-color</span>: black;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">149px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">99px</span>;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.score</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">30px</span>;</span><br><span class="line">    <span class="attribute">color</span>: darkorange;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">1000px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">    <span class="attribute">font-family</span>: SimSum, <span class="string">&quot;宋体&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><em>JQuery</em><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">Step</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">this</span>.score = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">this</span>.lastScore = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">this</span>.speed = <span class="number">2</span>;</span><br><span class="line">    <span class="comment">// 是否重新开始</span></span><br><span class="line">    <span class="built_in">this</span>.start = <span class="literal">false</span>;</span><br><span class="line">    <span class="comment">// Dom元素</span></span><br><span class="line">    <span class="built_in">this</span>.dom = &#123;</span><br><span class="line">        title: $(<span class="string">&quot;.title&quot;</span>),</span><br><span class="line">        author: $(<span class="string">&quot;.author&quot;</span>),</span><br><span class="line">        main: $(<span class="string">&quot;.main&quot;</span>),</span><br><span class="line">        score: $(<span class="string">&quot;.score&quot;</span>)</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// 整个别踩白块动作交互</span></span><br><span class="line">    <span class="built_in">this</span>.bindEvent();</span><br><span class="line">    <span class="comment">// 动画定时函数</span></span><br><span class="line">    <span class="built_in">this</span>.timer1 = &#123;&#125;;</span><br><span class="line">    <span class="comment">// 加速定时函数</span></span><br><span class="line">    <span class="built_in">this</span>.timer2 = &#123;&#125;;</span><br><span class="line">    <span class="comment">// 显示分数</span></span><br><span class="line">    <span class="built_in">this</span>.timer3 = &#123;&#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * bindEvent() 绑定事件</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@function </span>name: bindEvent</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param <span class="variable">none</span></span></span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="variable">none</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Step.prototype.bindEvent = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> self = <span class="built_in">this</span>;</span><br><span class="line">    <span class="keyword">var</span> topValue = -<span class="number">150</span>;</span><br><span class="line">    self.dom.title.on(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// 隐藏标题和作者信息</span></span><br><span class="line">        self.dom.title.css(<span class="string">&quot;display&quot;</span>, <span class="string">&quot;none&quot;</span>);</span><br><span class="line">        self.dom.author.css(<span class="string">&quot;display&quot;</span>, <span class="string">&quot;none&quot;</span>);</span><br><span class="line">        <span class="comment">// 显示分数信息</span></span><br><span class="line">        self.dom.score.css(<span class="string">&quot;display&quot;</span>, <span class="string">&quot;block&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建第一行钢琴块</span></span><br><span class="line">        self.createBlock(<span class="number">0</span>);</span><br><span class="line">        <span class="comment">// 创建动画定时函数</span></span><br><span class="line">        self.timer1 = <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="comment">// 检验是否有漏点</span></span><br><span class="line">            <span class="keyword">var</span> main = self.dom.main;</span><br><span class="line">            <span class="keyword">if</span> (main.children().length == <span class="number">6</span>) &#123;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">                    <span class="keyword">if</span> (main.children().eq(<span class="number">5</span>).children().eq(i).attr(<span class="string">&quot;class&quot;</span>) == <span class="string">&quot;target&quot;</span>) &#123;</span><br><span class="line">                        self.start = confirm(<span class="string">&quot;最终得分：&quot;</span> + self.score + <span class="string">&quot;\n是否重新开始？&quot;</span>);</span><br><span class="line">                        <span class="built_in">clearInterval</span>(self.timer1);</span><br><span class="line">                        <span class="built_in">clearInterval</span>(self.timer2);</span><br><span class="line">                        <span class="built_in">clearInterval</span>(self.timer3);</span><br><span class="line">                        self.startOrNot();</span><br><span class="line">                        <span class="keyword">return</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                main.children().eq(<span class="number">5</span>).remove();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 通过修改main的位置实现动画效果</span></span><br><span class="line">            <span class="keyword">var</span> main = self.dom.main;</span><br><span class="line">            topValue += self.speed;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">parseInt</span>(main.css(<span class="string">&quot;top&quot;</span>)) &gt; <span class="number">0</span>) &#123;</span><br><span class="line">                topValue = -<span class="number">150</span>;</span><br><span class="line">                self.createBlock(<span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            main.css(<span class="string">&quot;top&quot;</span>, topValue+<span class="string">&quot;px&quot;</span>);</span><br><span class="line">        &#125;, <span class="number">10</span>);</span><br><span class="line">        <span class="comment">// 创建速度定时函数 得分是10的倍数，速度增加</span></span><br><span class="line">        self.timer2 = <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> diffScore = self.score - self.lastScore;</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">10</span> == diffScore) &#123;</span><br><span class="line">                self.speed++;</span><br><span class="line">                self.lastScore = self.score;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;, <span class="number">100</span>);</span><br><span class="line">        <span class="comment">// 显示分数</span></span><br><span class="line">        self.timer3 = <span class="built_in">setInterval</span>(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            self.dom.score.text(<span class="string">&quot;&quot;</span>);</span><br><span class="line">            self.dom.score.append(<span class="string">&quot;当前分数：&quot;</span> + self.score);</span><br><span class="line">        &#125;, <span class="number">10</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * createBlock() 创建钢琴块</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@function </span>name: createBlock()</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param </span>flag flag=0 说明创建第一行钢琴块；flag=1 说明在后面添加钢琴块</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return <span class="variable">none</span></span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">Step.prototype.createBlock = <span class="function"><span class="keyword">function</span> (<span class="params">flag</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> self = <span class="built_in">this</span>;</span><br><span class="line">    <span class="keyword">var</span> main = self.dom.main;</span><br><span class="line">    <span class="keyword">var</span> row = $(<span class="string">&#x27;&lt;div class=&quot;row&quot;&gt;&lt;/div&gt;&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">0</span> == flag) &#123;</span><br><span class="line">        main.append(row);</span><br><span class="line">        main.css(<span class="string">&quot;display&quot;</span>, <span class="string">&quot;block&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">1</span> == flag) &#123;</span><br><span class="line">        main.prepend(row);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 生成四个钢琴块</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">var</span> col = $(<span class="string">&#x27;&lt;div class=&quot;col&quot;&gt;&lt;/div&gt;&#x27;</span>);</span><br><span class="line">        row.append(col);</span><br><span class="line">        <span class="comment">// 对钢琴块进行点击判定</span></span><br><span class="line">        col.on(<span class="string">&quot;click&quot;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> ($(<span class="built_in">this</span>).attr(<span class="string">&quot;class&quot;</span>) == <span class="string">&quot;target&quot;</span>) &#123;</span><br><span class="line">                <span class="comment">// 点击了正确的钢琴块</span></span><br><span class="line">                $(<span class="built_in">this</span>).css(<span class="string">&quot;background-color&quot;</span>, <span class="string">&quot;lightgray&quot;</span>).attr(<span class="string">&quot;class&quot;</span>, <span class="string">&quot;col&quot;</span>);</span><br><span class="line">                self.score++;</span><br><span class="line">                <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 未点击正确的钢琴块</span></span><br><span class="line">            self.start = confirm(<span class="string">&quot;最终得分：&quot;</span> + self.score + <span class="string">&quot;\n是否重新开始？&quot;</span>);</span><br><span class="line">            <span class="built_in">clearInterval</span>(self.timer1);</span><br><span class="line">            <span class="built_in">clearInterval</span>(self.timer2);</span><br><span class="line">            <span class="built_in">clearInterval</span>(self.timer3);</span><br><span class="line">            self.startOrNot();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 生成随机数字标记钢琴块</span></span><br><span class="line">    <span class="keyword">var</span> index = <span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * <span class="number">4</span>);</span><br><span class="line">    row.children().eq(index).css(<span class="string">&quot;background-color&quot;</span>, <span class="string">&quot;black&quot;</span>).attr(<span class="string">&quot;class&quot;</span>, <span class="string">&quot;target&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Step.prototype.startOrNot = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">this</span>.start) &#123;</span><br><span class="line">        <span class="built_in">window</span>.location.reload();</span><br><span class="line">        <span class="comment">// 刷新结束置为false</span></span><br><span class="line">        <span class="built_in">this</span>.start = <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> Step();</span><br></pre></td></tr></table></figure></p><h2 id="3-遇到的问题"><a href="#3-遇到的问题" class="headerlink" title="3. 遇到的问题"></a>3. 遇到的问题</h2><ul><li>将鼠标移到Game Start上，鼠标指针变为手型，提醒用户点击，需要将元素对应的CSS格式中添加<code>cursor: pointer;</code></li><li>这里设置的wrapper标签高度为600px，宽度为400px，但每个钢琴块的长度和宽度需要设置为149px和99px，若是150px和100px。则一行将填不下四个钢琴块。(因为边框也有宽度😺)</li><li>使用浮动float生成并列的钢琴块</li><li><code>var col = $(&#39;&lt;div class=&quot;col&quot;&gt;&lt;/div&gt;&#39;);</code>不能定义在循环外，否则只添加一个钢琴块。</li><li>对每个钢琴块进行点击判断时，this是当前点击的对象，$(this)将其转换为jquery对象，获得其属性。</li><li>使用<code>overflow: hidden</code>对超出范围的元素进行隐藏，由于钢琴块的CSS格式中有<code>position: absolute;</code>，导致其定位的position变成了整个视窗，内容将不会被裁剪，这时需要在wrapper中添加<code>position: relative;</code>。</li><li><strong>相对定位元素经常被用来作为绝对定位元素的容器块</strong>，养成这种习惯避免遇到上个问题👀</li></ul><h2 id="4-参考"><a href="#4-参考" class="headerlink" title="4. 参考"></a>4. 参考</h2><ul><li><a href="https://github.com/forrany/Web-Project/tree/master/%E5%88%AB%E8%B8%A9%E7%99%BD%E5%9D%97">forrany/Web-Project</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> 实战 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> HTML </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习笔记-JSP</title>
      <link href="post/b1ef/"/>
      <url>post/b1ef/</url>
      
        <content type="html"><![CDATA[<h2 id="1-为什么需要JSP？"><a href="#1-为什么需要JSP？" class="headerlink" title="1. 为什么需要JSP？"></a>1. 为什么需要JSP？</h2><p>通过Servlet输出html代码，会十分的复杂和别扭😂。如果能够直接使用html代码，然后在html中写java代码，就很方便了。</p><p>JSP就可以实现。</p><h2 id="2-执行过程"><a href="#2-执行过程" class="headerlink" title="2. 执行过程"></a>2. 执行过程</h2><p>为什么JSP可以在html中运行java代码？这是因为JSP被转译成了Servlet。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/JSP%E6%89%A7%E8%A1%8C%E8%BF%87%E7%A8%8B.png" alt=""></p><h2 id="3-页面元素"><a href="#3-页面元素" class="headerlink" title="3. 页面元素"></a>3. 页面元素</h2><p>JSP由这些页面元素组成：</p><ul><li>静态内容：html css javascript等内容</li><li>指令：以&lt;%@开始 %&gt;结尾</li><li>表达式： &lt;%=%&gt; 输出一段html</li><li>Scriptlet： 在&lt;%%&gt;之间，可以写任何Java代码</li><li>声明：&lt;%!字段或方法%&gt;</li><li>动作：<jsp: include page="Filename"/></li><li>注释：&lt;%— —%&gt;</li></ul><h2 id="4-包含"><a href="#4-包含" class="headerlink" title="4. 包含"></a>4. 包含</h2><p>每个网页的最下方都有版权声明等信息。如果不使用包含，那么每个网页都需要单独添加版权声明，如果版权声明要修改，则需要很大的工作量。</p><p>可以准备一个footer.jsp，然后在其他页面包含footer.jsp即可(类似于引用变量或者是方法重用的思想)。修改的时候，只需要修改footer.jsp所有的页面就都修改了，维护成本降低了很多。</p><ol><li>指令include &lt;%@include file=”footer.jsp”%&gt;</li><li>动作include <jsp: include page="footer.jsp"/></li></ol><p>区别：使用前者将把footer.jsp和引用它的jsp文件转译成一个java文件；而后者会被转译成两个java文件，footer_jsp.java.</p><p>如果使用动作include，传参也需要使用动作参数<jsp: param name="参数名" value="参数值">，在footer.jsp中使用request.getParameter(“year”)</p><h2 id="5-跳转"><a href="#5-跳转" class="headerlink" title="5. 跳转"></a>5. 跳转</h2><ul><li>服务端跳转(转发)：request.getRequestDispatcher().forward(request, response); 或使用动作<jsp: forward page=""></li><li>客户端跳转(重定向)：response.sendRedirect();</li></ul><h2 id="6-Cookie"><a href="#6-Cookie" class="headerlink" title="6. Cookie"></a>6. Cookie</h2><p>作用：例如登录一个网站的账户时，会提示是否保持免登录状态，勾选之后，将在一段时间进入不需要账号密码。这些就是靠Cookie实现的。</p><p>Cookie是一种浏览器和服务器交互数据的方式。它是由服务器端创建的，但是不会保存在服务器，在创建好之后，发送给浏览器，浏览器保存在本地。下一次访问网站的时候，浏览器把Cookie发送给服务器。</p><p><em>setCookie.jsp</em><br><figure class="highlight jsp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&lt;%@ page language=<span class="string">&quot;java&quot;</span> contentType=<span class="string">&quot;text/html; charset=utf-8&quot;</span> pageEncoding=<span class="string">&quot;utf-8&quot;</span> <span class="keyword">import</span>=<span class="string">&quot;javax.servlet.http.Cookie&quot;</span>&gt;</span><br><span class="line">&lt;%</span><br><span class="line">    <span class="comment">// 创建Cookie对象，名字是name，值是Gareen</span></span><br><span class="line">    Cookie c = <span class="keyword">new</span> Cookie(<span class="string">&quot;name&quot;</span>, <span class="string">&quot;Gareen&quot;</span>);</span><br><span class="line">    <span class="comment">// 设置Cookie在本地保存的时间(这里表示一天)</span></span><br><span class="line">    c.setMaxAge(<span class="number">24</span>*<span class="number">60</span>*<span class="number">60</span>);</span><br><span class="line">    <span class="comment">// Path表示服务器访问Path路径将会提交Cookie给服务器(这里表示所有应用都会提交)</span></span><br><span class="line">    c.setPath(<span class="string">&quot;/&quot;</span>);</span><br><span class="line">    <span class="comment">// 把Cookie保存在浏览器端</span></span><br><span class="line">    response.addCookie(c);</span><br><span class="line">%&gt;</span><br></pre></td></tr></table></figure></p><h2 id="7-Session"><a href="#7-Session" class="headerlink" title="7. Session"></a>7. Session</h2><p>Session(会话)就像一个个盒子，而Cookie就像一把把钥匙，不同的Cookie对应着不同的Session。</p><p>Session指的是从用户打开浏览器访问一个网站开始，无论在这个网站中访问了多少页面，点击了多少链接，都属于同一个会话。直到该用户关闭浏览器为止。</p><p>session.setAttribute(“key”, “value”) Session对象保存数据的方式，有点像Map的键值对。</p><p>session.getAttribute(“key”) 根据键取出对应的值</p><p>如果浏览器把cookie功能关闭，那么每次访问，都会生成一个新的Session对象。</p><h2 id="8-总结"><a href="#8-总结" class="headerlink" title="8. 总结"></a>8. 总结</h2><p>由于只是简单的了解一下JSP，具体的练习还没有自己去做，其表达式语言等用到了再进行学习。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> Web项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Web项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习笔记-Tomcat和Servlet</title>
      <link href="post/ca10/"/>
      <url>post/ca10/</url>
      
        <content type="html"><![CDATA[<h2 id="1-Tomcat"><a href="#1-Tomcat" class="headerlink" title="1. Tomcat"></a>1. Tomcat</h2><h3 id="1-1-Hello-Tomcat"><a href="#1-1-Hello-Tomcat" class="headerlink" title="1.1 Hello Tomcat"></a>1.1 Hello Tomcat</h3><p>Tomcat是常见的免费的web服务器。独立达到提供web服务的效果。</p><p>不使用tomcat打开html页面，可以看到输入框中是html文件的绝对路径，而是用tomcat后，可以127.0.0.1: 8080/test.html像访问一个网站似的，访问一个html文件了。这是因为tomcat本身是一个web服务器，test.html部署在了这个web服务器上，所以可以这样访问。</p><p>安装和启动Tomcat参考我的另一篇博客<a href="https://shenshilei1022.github.io/2020/03/%E5%AE%89%E8%A3%85tomcat/">安装Tomcat</a>。</p><p>部署一个简单的html测试一下效果，把html文件复制到Tomcat目录下的webapps\ROOT文件夹下。就可以通过localhost:8080/test.html进行访问了。</p><h3 id="1-2-改端口"><a href="#1-2-改端口" class="headerlink" title="1.2 改端口"></a>1.2 改端口</h3><p>Tomcat默认的端口号是8080，可以通过配置把端口号改成web服务默认的端口号80.</p><p>打开conf\server.xml文件，查找8080，将其改为80。</p><p>此时就可以通过127.0.0.1/test.html来访问网页了。</p><h3 id="1-3-部署"><a href="#1-3-部署" class="headerlink" title="1.3 部署"></a>1.3 部署</h3><p>如何正确部署一个J2EE应用。</p><p>首先准备一个J2EE应用，解压到某个目录下。</p><p>打开server.xml，在host节点中写入下列语句：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Context</span> <span class="attr">path</span>=<span class="string">&quot;/WebProject&quot;</span> <span class="attr">docBase</span>=<span class="string">&quot;D:/WebProject&quot;</span> <span class="attr">reloadable</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>其中：</p><ul><li>path：浏览器访问时的路径名</li><li>docBase：web项目的webRoot所在的路径，注意时webRoot的路径，不是项目的路径，其实也就是编译后的项目。</li><li>reloadable：设定项目有改动时，tomcat是否重新加载该项目。</li></ul><p>重启Tomcat，在输入框中输入127.0.0.1/WebProject/hello访问项目。</p><h2 id="2-Servlet"><a href="#2-Servlet" class="headerlink" title="2. Servlet"></a>2. Servlet</h2><h3 id="2-1-Servlet-简介"><a href="#2-1-Servlet-简介" class="headerlink" title="2.1 Servlet 简介"></a>2.1 Servlet 简介</h3><p>Java Servlet是运行在Web服务器或应用服务器上的程序，它是作为来自Web浏览器或其它HTTP客户端的请求和HTTP服务器上的数据库或应用程序之间的中间层。</p><p>使用Servlet，可以收集来自网页表单的用户输入，呈现来自数据库或者其他源的记录，还可以动态创建网页。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/Servlet%E6%9E%B6%E6%9E%84.png" alt=""></p><p>主要任务：</p><ul><li>读取客户端（浏览器）发送的显式数据。包括网页上的HTML表单。</li><li>读取客户端（浏览器）发送的隐式的HTTP请求数据。包括cookies、媒体类型和浏览器能理解的压缩格式等。</li><li>处理数据并生成结果。这个过程可能要访问数据库。</li><li>发送显式的数据到客户端（浏览器）。数据格式多种多样，包括文本文件（HTML或XML）、二进制文件、Excel等。</li><li>发送隐式的HTTP响应到客户端（浏览器）。</li></ul><h3 id="2-2-Hello-Servlet和获取参数"><a href="#2-2-Hello-Servlet和获取参数" class="headerlink" title="2.2 Hello Servlet和获取参数"></a>2.2 Hello Servlet和获取参数</h3><p>首先一个web项目的目录结构如下：</p><pre><code>- j2ee    - src    - web        - WEB-INF            - classes</code></pre><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/Web%E9%A1%B9%E7%9B%AE%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.png" alt=""></p><ul><li>src目录下放java写的Servlet类</li><li>WEB-INF目录下放置xml配置文件</li><li>classes目录下放置编译好的类</li><li>web目录下放置html文件</li></ul><p><em>HelloServlet类</em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">HelloServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doGet</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            response.getWriter().println(<span class="string">&quot;&lt;h1&gt;Hello Servlet!&lt;/h1&gt;&quot;</span>);</span><br><span class="line">            response.getWriter().println(<span class="keyword">new</span> Date().toString());</span><br><span class="line">        &#125; <span class="keyword">catch</span> (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><em>LoginServlet类</em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        String name = request.getParameter(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        String password = request.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;name:&quot;</span> + name);</span><br><span class="line">        System.out.println(<span class="string">&quot;password:&quot;</span> + password);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在WEB-INF目录下新建web.xml文件<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>HelloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>HelloServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>HelloServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/hello<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LoginServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>LoginServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>LoginServlet<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/login<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>使用1.3的方法，将项目部署在Tomcat上面。</p><p>在地址框中输入127.0.0.1/web/hello，可以看到如下网页，且每次刷新网页，显示的是当前时间。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/HelloServlet.png" alt=""></p><p>输入127.0.0.1/web/login.html，显示如下界面</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E8%8E%B7%E5%8F%96%E5%8F%82%E6%95%B01.png" alt=""></p><p>输入账号、密码，点击登录，可以在Tomcat服务端获取到数据。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E8%8E%B7%E5%8F%96%E5%8F%82%E6%95%B02.png" alt=""></p><h3 id="2-3-响应"><a href="#2-3-响应" class="headerlink" title="2.3 响应"></a>2.3 响应</h3><p>验证是否登录成功，本来应该访问数据库的，这里为了简便直接在内存中进行验证，如果用户名是admin，密码是123即为成功，否则为失败。</p><p>使用response.getWriter().println()打印在html上。</p><p><strong>注意：为了防止未进行输入就点击登录，获取到null，导致空指针异常，这里把常量写在前面！</strong></p><p><em>LoginServlet</em><br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LoginServlet</span> <span class="keyword">extends</span> <span class="title">HttpServlet</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">doPost</span><span class="params">(HttpServletRequest request, HttpServletResponse response)</span> <span class="keyword">throws</span> ServletException, IOException </span>&#123;</span><br><span class="line">        String name = request.getParameter(<span class="string">&quot;name&quot;</span>);</span><br><span class="line">        String password = request.getParameter(<span class="string">&quot;password&quot;</span>);</span><br><span class="line"></span><br><span class="line">        String html = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="string">&quot;name:&quot;</span> + name);</span><br><span class="line">        System.out.println(<span class="string">&quot;password:&quot;</span> + password);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="string">&quot;admin&quot;</span>.equals(name) &amp;&amp; <span class="string">&quot;123&quot;</span>.equals(password)) &#123;</span><br><span class="line">            html = <span class="string">&quot;&lt;div style=&#x27;color: green&#x27;&gt;success&lt;/div&gt;&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            html = <span class="string">&quot;&lt;div style=&#x27;color: red&#x27;&gt;fail&lt;/div&gt;&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        response.getWriter().println(html);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E7%99%BB%E5%BD%95%E6%88%90%E5%8A%9F.png" alt=""></p><h3 id="2-4-调用流程"><a href="#2-4-调用流程" class="headerlink" title="2.4 调用流程"></a>2.4 调用流程</h3><p>① 访问127.0.0.1/web/login.html，打开一个静态的html页面，在这个页面通过form，以post的形式提交数据。<br>② 用form，以post形式把账号、密码提交到/login路径<br>③ Tomcat接收到一个新的请求：127.0.0.1/login，接着和配置文件web.xml进行匹配，发现/login对应的Servlet类是LoginServlet。找寻LoginServlet<br>④ Tomcat定位到LoginServlet后，发现并没有LoginServlet的实例存在，于是调用LoginServlet的public无参的构造方法实例化一个LoginServlet对象。<br>⑤ Tomcat拿到LoginServlet实例之后，根据post形式调用对应的doPost方法。<br>⑥ 进入doPost方法，通过request取出账号密码信息。<br>⑦ 接着，判断账号密码是否正确，创建不同的html字符串，然后把html字符串通过response.getWriter().println(html)设置在response对象上。<br>⑧ 在Servlet完成工作后，Tomcat拿到被Servlet修改过的response，根据这个response生成html字符串，然后通过HTTP协议，回发给浏览器。浏览器在根据HTTP协议获取这个html字符串，并渲染在界面上，看到最终效果。</p><h3 id="2-5-service"><a href="#2-5-service" class="headerlink" title="2.5 service()"></a>2.5 service()</h3><p>在根据post或get形式分别调用doPost或doGet方法之前，都会先执行service()方法，根据方法继续调用doPost或doGet方法。</p><p>所以有时可以直接重写service()方法，在其中提供相应的服务，就不用区分到底是post还是get了。</p><h3 id="2-6-中文问题"><a href="#2-6-中文问题" class="headerlink" title="2.6 中文问题"></a>2.6 中文问题</h3><p>request中文设置：在获取账户密码时，对request的编码进行设置 <code>request.setCharacterEncoding(&quot;utf-8&quot;);</code>，放在request.getParameter()之前。</p><p>response中文设置：在response中设置编码方式<code>response.setContentType(&quot;text/html; charset=utf-8&quot;)</code>，放在response.getWriter()之前。</p><p>此外，login.html也需要utf-8编码。</p><h3 id="2-7-生命周期"><a href="#2-7-生命周期" class="headerlink" title="2.7 生命周期"></a>2.7 生命周期</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">st&#x3D;&gt;start: 实例化</span><br><span class="line">op1&#x3D;&gt;operation: 初始化</span><br><span class="line">op2&#x3D;&gt;operation: 提供服务</span><br><span class="line">op3&#x3D;&gt;operation: 销毁</span><br><span class="line">en&#x3D;&gt;end: 被回收</span><br><span class="line">st-&gt;op1-&gt;op2-&gt;op3-&gt;en</span><br></pre></td></tr></table></figure><p><em>这里的Servlet类是单例的。</em></p><h3 id="2-8-跳转"><a href="#2-8-跳转" class="headerlink" title="2.8 跳转"></a>2.8 跳转</h3><p>在web目录下新建success.html和fail.html，分别用于显示登录成功和登录失败。</p><ul><li>服务端跳转（转发）<br>在判断密码正确的条件语句下修改为<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">request.getRequestDispatcher(<span class="string">&quot;success.html&quot;</span>).forward(request, response);</span><br></pre></td></tr></table></figure>跳转后可以看到浏览器的地址仍然是/login路径</li><li>客户端跳转（重定向）<br>在判断密码错误的条件语句下修改为<figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">response.sendRedirect(<span class="string">&quot;fail.html&quot;</span>);</span><br></pre></td></tr></table></figure>跳转后了浏览器地址变为fail.html</li></ul><h3 id="2-9-自启动"><a href="#2-9-自启动" class="headerlink" title="2.9 自启动"></a>2.9 自启动</h3><p>有时候会有这样的业务需求：Tomcat一启动，就需要执行一些初始化的代码，比如校验数据库的完整性等。但是Servlet的生命周期是用户访问浏览器对应的路径开始的，如果没有用户的第一次访问，就无法执行相关代码。</p><p>此时就需要Servlet实现自启动，伴随着Tomcat的启动，自动初始化，在初始化方法init()中，就可以进行一些业务代码的工作了。</p><p>init方法<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">(ServletConfig config)</span> </span>&#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;init of Hello Servlet&quot;</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>在web.xml中的servlet标签下添加<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>10<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br></pre></td></tr></table></figure><br>其中取值范围是1-99，数字越小，启动的优先级越高。</p><h3 id="2-10-request常见方法"><a href="#2-10-request常见方法" class="headerlink" title="2.10 request常见方法"></a>2.10 request常见方法</h3><div class="table-container"><table><thead><tr><th>方法</th><th>作用</th></tr></thead><tbody><tr><td>request.getRequestURL()</td><td>浏览器发出请求时的完整URL，包括协议 主机名 端口(如果有)</td></tr><tr><td>request.getRequestURI()</td><td>浏览器发出请求的资源名部分，去掉了协议和主机名</td></tr><tr><td>request.getRemoteAddr()</td><td>浏览器所处于的客户机的IP地址</td></tr><tr><td>request.getRemoteHost()</td><td>浏览器所处于的客户机的主机名</td></tr><tr><td>request.getRemotePort()</td><td>浏览器所处于的客户机使用的网络端口</td></tr><tr><td>request.getLocalAddr()</td><td>服务器的IP地址</td></tr><tr><td>request.getLocalName()</td><td>服务器的主机名</td></tr><tr><td>request.getMethod()</td><td>得到客户机请求方式——GET或POST</td></tr></tbody></table></div><p>获取参数</p><ul><li>request.getParameter() 用于获取单值的参数</li><li>request.getParameterValues() 用于获取多个相同值的参数，返回list</li><li>request.getParameterMap() 用于遍历所有参数，并返回Map类型</li></ul><p>获取头信息</p><ul><li>request.getHeader() 获取浏览器传递过来的头信息</li><li>request.getHeaderNames() 获取浏览器所有的头信息名称，根据头信息名称就能遍历出所有的头信息</li></ul><h3 id="2-11-response常见方法"><a href="#2-11-response常见方法" class="headerlink" title="2.11 response常见方法"></a>2.11 response常见方法</h3><p>设置响应内容</p><ul><li>response.getWriter() 获取一个PrintWriter对象，使用println(), append(), write(), format()等等方法设置返回给浏览器的html内容</li></ul><p>设置响应格式</p><ul><li>response.setContentType() 括号中如果填写了”text/html”，那么浏览器可以识别这种格式，如果换一个其他格式，比如”text/lol”，浏览器不能识别，那么打开此servlet就会弹出一个下载的对话框，从而可以用这种方法实现下载功能。</li></ul><p>设置响应编码</p><ul><li>response.setContentType()</li><li>response.setCharacterEncoding()<br><strong>这两种方式都需要在response.getWriter调用之前执行才能生效。</strong><br>二者区别：前者不仅发送到浏览器的内容按设置编码，且告诉浏览器使用该种编码方式进行显示；后者只是发送到浏览器的内容按设置编码。</li></ul><p>重定向</p><ul><li>response.sendRedirect()</li></ul><p>设置不使用缓存</p><ul><li>response.setDateHeader(“Expires”, 0);<br>response.setHeader(“Cache-Control”, “no-cache”);<br>response.setHeader(“pragma”, “no-cache”);<br>使用缓存可以加快页面的加载，降低服务端的负担。但是也可能看到过时的信息，可以通过上面通知浏览器不要使用缓存。</li></ul><h2 id="3-参考"><a href="#3-参考" class="headerlink" title="3. 参考"></a>3. 参考</h2><ul><li><a href="https://how2j.cn/k/tomcat/tomcat-tutorial/541.html">HOW2J-Tomcat</a></li><li><a href="https://how2j.cn/k/servlet/servlet-eclipse/558.html">HOW2J-Servlet</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> Web项目 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Web项目 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装Tomcat</title>
      <link href="post/a643/"/>
      <url>post/a643/</url>
      
        <content type="html"><![CDATA[<h1 id="安装Tomcat"><a href="#安装Tomcat" class="headerlink" title="安装Tomcat"></a>安装Tomcat</h1><p>安装Tomcat，以及安装过程中对踩的一些坑进行记录。</p><h2 id="1-下载Tomcat"><a href="#1-下载Tomcat" class="headerlink" title="1. 下载Tomcat"></a>1. 下载Tomcat</h2><p>进入<a href="http://tomcat.apache.org/">Tomcat官网</a>，点击Tomcat 9，选择64位进行下载。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/Tomcat%E5%AE%89%E8%A3%8501.png" alt=""></p><h2 id="2-配置环境变量"><a href="#2-配置环境变量" class="headerlink" title="2. 配置环境变量"></a>2. 配置环境变量</h2><p>将下载下来的压缩包解压到想要放置的路径。</p><p>打开计算机属性-高级系统设置-环境变量。</p><p>在用户自定义变量中新建 CATALINA_HOME，变量值是压缩包的绝对路径。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/Tomcat%E5%AE%89%E8%A3%8505.png" alt=""></p><p>编辑Path环境变量，添加 %CATALINA_HOME%\bin\</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/Tomcat%E5%AE%89%E8%A3%8506.png" alt=""></p><p>保存设置。</p><h2 id="3-添加JDK的配置信息"><a href="#3-添加JDK的配置信息" class="headerlink" title="3. 添加JDK的配置信息"></a>3. 添加JDK的配置信息</h2><p>这里配置的原因好像是因为jdk13 没有jar文件，反正不配置tomcat启动不起来。</p><p>在Tomcat的bin目录下，找到catalina.bat文件，增加下列语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set JAVA_HOME&#x3D;D:\Software\Java</span><br><span class="line">set JRE_HOME&#x3D;D:\Software\Java</span><br></pre></td></tr></table></figure><p><strong>注意这里的路径是自己电脑上java的路径。</strong></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/Tomcat%E5%AE%89%E8%A3%8507.png" alt=""></p><p>保存文件后，再找到service.bat文件，增加下列语句</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">set &quot;JAVA_HOME&#x3D;D:\Software\Java&quot;</span><br><span class="line">set &quot;JRE_HOME&#x3D;D:\Software\Java&quot;</span><br><span class="line">set &quot;JVM&#x3D;D:\Software\Java\bin\server\jvm.dll&quot;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/Tomcat%E5%AE%89%E8%A3%8508.png" alt=""></p><p>保存文件，仍然在bin目录下，摁住shift，点击鼠标右键，打开PowerShell，输入<code>service.bat install</code>安装Tomcat。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/Tomcat%E5%AE%89%E8%A3%8503.png" alt=""></p><p>出现Tomcat 9 has been installed表示安装成功。</p><h2 id="4-启动Tomcat"><a href="#4-启动Tomcat" class="headerlink" title="4. 启动Tomcat"></a>4. 启动Tomcat</h2><p>打开命令行，输入startup命令，弹出命令窗口，表示启动成功了。打开浏览器，在网址输入框中输入localhost:8080能打开Tomcat首页表示配置成功了。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/Tomcat%E5%AE%89%E8%A3%8502.png" alt=""></p><h2 id="5-删除Tomcat"><a href="#5-删除Tomcat" class="headerlink" title="5. 删除Tomcat"></a>5. 删除Tomcat</h2><p>切换到Tomcat的bin目录下，使用同样的方法打开PowerShell，输入<code>service.bat remove Tomcat9</code>删除Tomcat。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/Tomcat%E5%88%A0%E9%99%A4.png" alt=""></p><h2 id="6-启动窗口中文乱码问题"><a href="#6-启动窗口中文乱码问题" class="headerlink" title="6. 启动窗口中文乱码问题"></a>6. 启动窗口中文乱码问题</h2><p>我在安装配置好Tomcat后，启动Tomcat时，弹出的窗口中存在中文显示的乱码问题。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/Tomcat%E7%AA%97%E5%8F%A3%E4%B9%B1%E7%A0%8101.png" alt=""></p><p>在网上寻找解决方法，有提到是catalina.bat文件编码问题，我修改了之后还是没有效果。最后找到一个解决方法是切换到Tomcat的conf目录下，找到logging.properties文件，将java.util.logging.ConsoleHandler.encoding=UTF-8改为GBK即可。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/Tomcat%E7%AA%97%E5%8F%A3%E4%B9%B1%E7%A0%8103.png" alt=""></p><h2 id="7-参考"><a href="#7-参考" class="headerlink" title="7. 参考"></a>7. 参考</h2><ul><li><a href="https://blog.csdn.net/qq_38287890/article/details/102459332">Tomcat下载与配置及删除（Tomcat9+jdk13）</a></li><li><a href="https://blog.csdn.net/weixin_43615803/article/details/89469708">Win10 JDK12搭配Tomcat9.0.19</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
          <category> 安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Tomcat </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>把HTML和PDF文件部署到GitHub上</title>
      <link href="post/64e2/"/>
      <url>post/64e2/</url>
      
        <content type="html"><![CDATA[<p>最近学习了一些前端的知识，用JavaScript代码实现网页的交互，想把它放在远端服务器上，方便随时进行查看其效果。于是了解到了Github Pages这一服务。</p><p>Github很好的将代码和社区联系在了一起，于是发生了很多有趣的事情，世界也因为他美好了一点点。Github作为现在最流行的代码仓库，已经得到很多大公司和项目的青睐，比如jQuery、Twitter等。为使项目更方便的被人理解，介绍页面少不了，甚至会需要完整的文档站，Github替你想到了这一点，他提供了<a href="https://pages.github.com/">Github Pages</a>的服务，不仅可以方便的为项目建立介绍站点，也可以用来建立个人博客。</p><h2 id="1-创建空仓库"><a href="#1-创建空仓库" class="headerlink" title="1. 创建空仓库"></a>1. 创建空仓库</h2><p>登录<a href="https://www.github.com/">GitHub</a>网站，点击右上角的+号，选择New Repository创建空仓库。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E6%8A%8AHTML%E5%92%8CPDF%E6%96%87%E4%BB%B6%E9%83%A8%E7%BD%B2%E5%88%B0GitHub%E4%B8%8A01.png" alt=""></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E6%8A%8AHTML%E5%92%8CPDF%E6%96%87%E4%BB%B6%E9%83%A8%E7%BD%B2%E5%88%B0GitHub%E4%B8%8A02.png" alt=""></p><h2 id="2-同步本地文件到GitHub远程仓库"><a href="#2-同步本地文件到GitHub远程仓库" class="headerlink" title="2. 同步本地文件到GitHub远程仓库"></a>2. 同步本地文件到GitHub远程仓库</h2><p>git init 初始化文件夹<br>git add .<br>git commit -m “提交内容”</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E6%8A%8AHTML%E5%92%8CPDF%E6%96%87%E4%BB%B6%E9%83%A8%E7%BD%B2%E5%88%B0GitHub%E4%B8%8A03.png" alt=""></p><p>关联远程仓库 git remote add origin <a href="https://github.com/用户名/仓库名.git">https://github.com/用户名/仓库名.git</a></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E6%8A%8AHTML%E5%92%8CPDF%E6%96%87%E4%BB%B6%E9%83%A8%E7%BD%B2%E5%88%B0GitHub%E4%B8%8A04.png" alt=""></p><p>将本地内容推送到远端 git push -u origin master</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E6%8A%8AHTML%E5%92%8CPDF%E6%96%87%E4%BB%B6%E9%83%A8%E7%BD%B2%E5%88%B0GitHub%E4%B8%8A05.png" alt=""></p><h2 id="3-启用GitHub-Pages服务"><a href="#3-启用GitHub-Pages服务" class="headerlink" title="3. 启用GitHub Pages服务"></a>3. 启用GitHub Pages服务</h2><p>点击Settings，向下翻找到GitHub Pages这一选项，选择master branch。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E6%8A%8AHTML%E5%92%8CPDF%E6%96%87%E4%BB%B6%E9%83%A8%E7%BD%B2%E5%88%B0GitHub%E4%B8%8A06.png" alt=""></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E6%8A%8AHTML%E5%92%8CPDF%E6%96%87%E4%BB%B6%E9%83%A8%E7%BD%B2%E5%88%B0GitHub%E4%B8%8A07.png" alt=""></p><p>之后就可以使用如下格式的网址打开文件了：GitHub用户名.github.io/仓库名/文件名</p><p>ps: 这里的文件名表示在仓库下的相对路径，记得要填完整。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E6%8A%8AHTML%E5%92%8CPDF%E6%96%87%E4%BB%B6%E9%83%A8%E7%BD%B2%E5%88%B0GitHub%E4%B8%8A08.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
            <tag> Git Pages </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>记一次失败的做蛋糕经历</title>
      <link href="post/edce/"/>
      <url>post/edce/</url>
      
        <content type="html"><![CDATA[<p>由于疫情的原因，现在出门不是很方便。大家在屋里都发挥自己精湛的厨艺，变着花样做好吃的。厨房小菜鸟的我也准备尝试一把电饭煲蛋糕，解锁一门新技能的同时，也能充实一下最近的生活🤗~</p><p>首先准备材料：</p><ul><li>五个鸡蛋</li><li>四分之三杯面粉</li><li>半杯白砂糖</li><li>三分之一杯牛奶</li><li>少量玉米油</li></ul><p><strong>使用的盆盆罐罐必须无水无油！</strong></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/62C1448C9BC167F3B11E9E6148FAC50D.JPG" alt=""></p><p>先把蛋黄和蛋清分离，我在分离的时候不小心弄破了一个蛋黄，同志还需努力😂</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/A3E6DD97554CC6814EF570625BBDFA23.JPG" alt=""></p><p>将玉米油加热，倒入面粉中，搅拌均匀后再和蛋黄混合，使用筷子Z字形搅拌成面糊状。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/B8849A317420603F2DED54DDDFC17F4A.JPG" alt=""></p><p>接下来是最痛苦的一环，打发蛋清。使用网上的妙招——塑料瓶(如图)来搅拌据说能省不少劲儿。但是亲身实践告诉我，事情没有那么简单👀，我还是打了快一个小时才打成下图那样。。。</p><p>搅拌前，先在蛋清中加三分之一的白砂糖；等蛋清出现绵密泡沫后，再加三分之一的糖；蛋清体积明显变大，加入最后三分之一的糖。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/476FBD2C1BD520B9F060BD316D826DCA.JPG" alt=""></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/114BF5C9E9DA7872F8A882EA64BA7562.JPG" alt=""></p><p>将打法的蛋清和蛋黄糊混合，像炒菜一样进行搅拌。<strong>切记不能转圈搅拌，不然会上劲。</strong></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/B6D54741B305C3E053C05FE56D123850.JPG" alt=""></p><p>将混合好的糊糊从距电饭煲内胆30厘米左右向下导入内胆，减少气泡的产生。倒好后拍一拍，把气泡震掉。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/8DE1A60F34399D3F9D3401DE516E6881.JPG" alt=""></p><p>最后，我打开了电饭煲的蛋糕模式，脑子里想的都是：一会儿就有蛋糕吃了😝。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/2F81370F9E050C14515F9CBFCC12E683.JPG" alt=""></p><p>梦想是美好的，现实是残酷的😭。再炒一盘菜盖在上面，我可能做了个披萨哈哈哈~中间没有发起来我也不知道什么原因🤣但其实味道还挺好的，也算是没有浪费这些食材😋</p>]]></content>
      
      
      <categories>
          
          <category> 生活 </category>
          
          <category> 厨房 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 厨房 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端学习-JavaScript</title>
      <link href="post/fb5f/"/>
      <url>post/fb5f/</url>
      
        <content type="html"><![CDATA[<h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h2><p>JavaScript用于网页和用户之间的交互，比如提交的时候，进行用户名是否为空的判断。</p><p>JavaScript代码必须放在script标签中，建议把script标签放在body标签快结束的位置，否则可能影响页面内容的加载。和CSS一样，当JavaScript代码特别多，并且都写在HTML里的时候，会显得比较繁杂，难以维护。这个时候可以采取和CSS一样的手段，单独剥离出来放在.js文件中，在HTML中引用该文件即可。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;文件位置&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>JavaScript中的注释方式和Java相同，//用于单行注释；/**/用于多行注释。</p><h2 id="2-基础知识"><a href="#2-基础知识" class="headerlink" title="2. 基础知识"></a>2. 基础知识</h2><h3 id="2-1-变量"><a href="#2-1-变量" class="headerlink" title="2.1 变量"></a>2.1 变量</h3><p>使用var关键字声明一个变量。</p><p><strong>注意：不使用var关键字也可以声明变量，当没有使用var时，创建的变量为全局变量！</strong></p><h3 id="2-2-调试"><a href="#2-2-调试" class="headerlink" title="2.2 调试"></a>2.2 调试</h3><p>在浏览器中的检查-console中查看错误信息</p><h3 id="2-3-基本数据类型"><a href="#2-3-基本数据类型" class="headerlink" title="2.3 基本数据类型"></a>2.3 基本数据类型</h3><ul><li>Number</li><li>String </li><li>Boolean</li><li>undefined 声明了但没有赋值</li><li>null 空对象/对象不存在</li></ul><p>使用typeof来进行判断数据类型。</p><h3 id="2-4-数据类型转换"><a href="#2-4-数据类型转换" class="headerlink" title="2.4 数据类型转换"></a>2.4 数据类型转换</h3><p>有点类似于java中的装箱拆箱，JavaScript中具有<strong>伪对象</strong>的概念：即使是基本类型，也是伪对象，都有自己的属性和方法。</p><h4 id="2-4-1-转换为字符串"><a href="#2-4-1-转换为字符串" class="headerlink" title="2.4.1 转换为字符串"></a>2.4.1 转换为字符串</h4><p>Number Boolean String都有一个toString方法，可以转换为字符串</p><p>注意：数字转换为字符串，toString(参数)中参数是数字几表示转换为几进制的字符串(默认是10进制)</p><p>例如：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = <span class="number">10</span>;</span><br><span class="line"><span class="comment">// 将a转换为二进制的字符串</span></span><br><span class="line"><span class="built_in">document</span>.write(a.toString(<span class="number">2</span>))</span><br></pre></td></tr></table></figure></p><h4 id="2-4-2-转换为数字"><a href="#2-4-2-转换为数字" class="headerlink" title="2.4.2 转换为数字"></a>2.4.2 转换为数字</h4><p>parseInt() parseFloat()可以转换为数字</p><h4 id="2-4-3-转换为布尔类型"><a href="#2-4-3-转换为布尔类型" class="headerlink" title="2.4.3 转换为布尔类型"></a>2.4.3 转换为布尔类型</h4><p>Boolean()可以转换为布尔类型，非空为true、非0为true、非null为true</p><h3 id="2-5-函数"><a href="#2-5-函数" class="headerlink" title="2.5 函数"></a>2.5 函数</h3><p>使用如下格式的代码定义一个函数。</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">document</span>.write(<span class="string">&quot;自定义函数&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-6-条件、循环"><a href="#2-6-条件、循环" class="headerlink" title="2.6 条件、循环"></a>2.6 条件、循环</h3><p>整体均类似于java，具体有不同的地方用到再进行学习。</p><h2 id="3-练习"><a href="#3-练习" class="headerlink" title="3. 练习"></a>3. 练习</h2><h3 id="3-1-练习01"><a href="#3-1-练习01" class="headerlink" title="3.1 练习01"></a>3.1 练习01</h3><p>做一个简单的加法计算器。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/JavaScriptPractice01.png" alt=""></p><p><a href="https://shenshilei1022.github.io/JavaScriptPractice/Practice01/Practice01.html">在线观看</a></p><p><em>HTML</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html; charset=utf-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;style.css&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layout&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;num1&quot;</span>&gt;</span> + <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;num2&quot;</span>&gt;</span> = <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;sum&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;运算&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;getSum()&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;calc.js&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><em>CSS</em></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-class">.layout</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">80px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>JavaScript</em></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getSum</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="comment">// 注意这里直接得到的值是字符串类型，要转换成Number类型进行计算</span></span><br><span class="line">    <span class="keyword">var</span> num1 = <span class="built_in">document</span>.getElementById(<span class="string">&quot;num1&quot;</span>).value;</span><br><span class="line">    <span class="keyword">var</span> num2 = <span class="built_in">document</span>.getElementById(<span class="string">&quot;num2&quot;</span>).value;</span><br><span class="line">    <span class="keyword">var</span> sum = <span class="built_in">parseFloat</span>(num1) + <span class="built_in">parseFloat</span>(num2);</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;sum&quot;</span>).value = sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里使用了DOM的知识获取输入框的值以及将值返回到输入框，后面会详细提到。</p><h3 id="3-2-练习02"><a href="#3-2-练习02" class="headerlink" title="3.2 练习02"></a>3.2 练习02</h3><p>使用格式化字符串的知识，做出如下功能的界面。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/JavaScriptPractice02.png" alt=""></p><p><a href="https://shenshilei1022.github.io/JavaScriptPractice/Practice02/Practice02.html">在线观看</a></p><p><em>HTML</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span><span class="attr">content</span>=<span class="string">&quot;text/html; charset=utf-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;style.css&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layout&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;tag&quot;</span>&gt;</span>地名：<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;locate&quot;</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;tag&quot;</span>&gt;</span>公司类型：<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;companyType&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;tag&quot;</span>&gt;</span>公司名称：<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;companyName&quot;</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;tag&quot;</span>&gt;</span>老板姓名：<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;bossName&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;tag&quot;</span>&gt;</span>money：<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;totalMoney&quot;</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;tag&quot;</span>&gt;</span>产品：<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;product&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;tag&quot;</span>&gt;</span>价格计量单位：<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;moneyUnit&quot;</span>&gt;</span> </span><br><span class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;生成&quot;</span> <span class="attr">class</span>=<span class="string">&quot;button&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;format()&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">textarea</span> <span class="attr">id</span>=<span class="string">&quot;result&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;stringFormat.js&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><em>CSS</em></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-class">.layout</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">700px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">200px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: 宋体;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.tag</span> &#123;</span><br><span class="line">    <span class="attribute">border-width</span>: <span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">border-color</span>: lightgray;</span><br><span class="line">    <span class="attribute">border-style</span>: solid;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span><span class="selector-class">.button</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">textarea</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>JavaScript</em></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">format</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> locate = <span class="built_in">document</span>.getElementById(<span class="string">&quot;locate&quot;</span>).value;</span><br><span class="line">    <span class="keyword">var</span> companyType = <span class="built_in">document</span>.getElementById(<span class="string">&quot;companyType&quot;</span>).value;</span><br><span class="line">    <span class="keyword">var</span> companyName = <span class="built_in">document</span>.getElementById(<span class="string">&quot;companyName&quot;</span>).value;</span><br><span class="line">    <span class="keyword">var</span> bossName = <span class="built_in">document</span>.getElementById(<span class="string">&quot;bossName&quot;</span>).value;</span><br><span class="line">    <span class="keyword">var</span> totalMoney = <span class="built_in">document</span>.getElementById(<span class="string">&quot;totalMoney&quot;</span>).value;</span><br><span class="line">    <span class="keyword">var</span> product = <span class="built_in">document</span>.getElementById(<span class="string">&quot;product&quot;</span>).value;</span><br><span class="line">    <span class="keyword">var</span> moneyUnit = <span class="built_in">document</span>.getElementById(<span class="string">&quot;moneyUnit&quot;</span>).value;</span><br><span class="line">    <span class="keyword">var</span> result = locate + <span class="string">&quot;最大&quot;</span> + companyType + companyName + <span class="string">&quot;倒闭了，王八蛋老板&quot;</span> + bossName + <span class="string">&quot;吃喝嫖赌，欠下了&quot;</span> + totalMoney + <span class="string">&quot;个亿，带着他的小姨子跑了！我们没有办法，拿着&quot;</span> + product + <span class="string">&quot;抵工资！原价都是一&quot;</span> + moneyUnit + <span class="string">&quot;多、两&quot;</span> + moneyUnit + <span class="string">&quot;多、三&quot;</span> + moneyUnit + <span class="string">&quot;多的&quot;</span> + product + <span class="string">&quot;，现在全部只卖二十块，统统只要二十块！&quot;</span> + bossName + <span class="string">&quot;王八蛋，你不是人！我们辛辛苦苦给你干了大半年，你不发工资，你还我血汗钱，还我血汗钱！&quot;</span>;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;result&quot;</span>).value = result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里当时做的时候遇上了不小的麻烦👀，还是对CSS的掌握不够熟练。一开始看到这个网页样式时，想到的是用table标签的方式去做，但是做出来后元素之间的距离无法调整，达不到目标样式。<strong>因为我们可以对表格table设置margin，而不能设置padding；对单元格td可以设置padding，而不能设置margin。所以不能通过对单元格td设置margin来调整元素之间的距离。</strong>而这里的目标样式是带边框的，需要通过调整margin来调节距离。去找答案，看到了inline-block这一参数🙄。</p><ul><li>block：将元素显示为块级元素。特点：总是在新行上开始；高度、行高以及顶和底边距都可以控制。例如<code>&lt;div&gt;, &lt;p&gt;, &lt;li&gt;, &lt;h&gt;</code>都是块元素。</li><li>inline：将元素显示为行内元素。特点：和其它元素都在一行上；高度、行高以及顶和底边距不能改变；宽度就是其文字或图片的宽度，不可改变。例如<code>&lt;span&gt;, &lt;a&gt;</code>都是行内元素。</li><li>inline-block：使块对象可以在同一行显示，并且可以调节其高度、行高以及顶和底边距。</li></ul><p>inline-block正好满足了我的需求😮~</p><h3 id="3-3-练习03"><a href="#3-3-练习03" class="headerlink" title="3.3 练习03"></a>3.3 练习03</h3><p>实现计算复利的效果。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/JavaScriptPractice03.png" alt=""></p><p><a href="https://shenshilei1022.github.io/JavaScriptPractice/Practice03/Practice03.html">在线观看</a></p><p><em>HTML</em></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span><span class="attr">content</span>=<span class="string">&quot;text/html; charset=utf-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;style.css&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layout&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>起始资金<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;principal&quot;</span>&gt;</span> ￥<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>每年收益<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;profitPerYear&quot;</span>&gt;</span> %<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>复利年数<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;numberOfYears&quot;</span>&gt;</span> 年<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>每年追加资金<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;appendMoney&quot;</span>&gt;</span> ￥<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;计算&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;calcProfit()&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>本金和<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span> <span class="attr">disabled</span>=<span class="string">&quot;disabled&quot;</span> <span class="attr">id</span>=<span class="string">&quot;sum1&quot;</span>&gt;</span> ￥<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>利息和<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span> <span class="attr">disabled</span>=<span class="string">&quot;disabled&quot;</span> <span class="attr">id</span>=<span class="string">&quot;sum2&quot;</span>&gt;</span> ￥<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span>本息和<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;0&quot;</span> <span class="attr">disabled</span>=<span class="string">&quot;disabled&quot;</span> <span class="attr">id</span>=<span class="string">&quot;sum3&quot;</span>&gt;</span> ￥<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;calcProfit.js&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><em>CSS</em></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: 宋体;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.layout</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">400px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">500px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">table</span> &#123;</span><br><span class="line">    <span class="attribute">border-collapse</span>: collapse;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">td</span> &#123;</span><br><span class="line">    <span class="attribute">border-style</span>: solid;</span><br><span class="line">    <span class="attribute">border-width</span>: <span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">border-color</span>: lightgray;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">180px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><em>JavaScript</em></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getValue</span>(<span class="params">id</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> value = <span class="built_in">document</span>.getElementById(id).value;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">parseFloat</span>(value);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 取幂</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getPower</span>(<span class="params">num, power</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">0</span> == power) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">1</span> == power) &#123;</span><br><span class="line">        <span class="keyword">return</span> num;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> result = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">1</span>; i &lt;= power; i++) &#123;</span><br><span class="line">            result = result * num;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> result;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 求复利</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getCompoundInterest</span>(<span class="params">rate, numberOfYears</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">0</span> == numberOfYears || <span class="number">1</span> == numberOfYears) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> interestRate = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">var</span> i = numberOfYears-<span class="number">1</span>; i &gt; <span class="number">0</span>; i--) &#123;</span><br><span class="line">            interestRate += getPower(rate, i);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> interestRate;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">calcProfit</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> principal = getValue(<span class="string">&quot;principal&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> profitPerYear = getValue(<span class="string">&quot;profitPerYear&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> numberOfYears = getValue(<span class="string">&quot;numberOfYears&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> appendMoney = getValue(<span class="string">&quot;appendMoney&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> sum1 = principal + appendMoney * (numberOfYears - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">var</span> sum3 = principal * getPower((<span class="number">1</span> + profitPerYear * <span class="number">0.01</span>), numberOfYears) + appendMoney * getCompoundInterest((<span class="number">1</span> + profitPerYear * <span class="number">0.01</span>), numberOfYears);</span><br><span class="line">    <span class="keyword">var</span> sum2 = sum3 - sum1;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;sum1&quot;</span>).value = sum1.toFixed(<span class="number">2</span>);</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;sum2&quot;</span>).value = sum2.toFixed(<span class="number">2</span>);</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;sum3&quot;</span>).value = sum3.toFixed(<span class="number">2</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的输入框使用了disabled属性，之前没有用过的，作用是使用户不能在网页上输入框中输入文本，只能显示文本。</p><h2 id="4-对象"><a href="#4-对象" class="headerlink" title="4. 对象"></a>4. 对象</h2><p>JavaScript的对象也比较好理解，类似于java，目前还没有用到，用到的时候再进行查阅学习。</p><p>参考How2j的教程😁</p><ul><li><a href="https://how2j.cn/k/javascript/javascript-number/438.html">数字</a></li><li><a href="https://how2j.cn/k/javascript/javascript-string/439.html">字符串</a></li><li><a href="https://how2j.cn/k/javascript/javascript-array/441.html">数组</a></li><li><a href="https://how2j.cn/k/javascript/javascript-date/440.html">日期</a></li><li><a href="https://how2j.cn/k/javascript/javascript-math/520.html">Math</a></li><li><a href="https://how2j.cn/k/javascript/javascript-object/442.html">自定义对象</a></li></ul><h2 id="5-BOM"><a href="#5-BOM" class="headerlink" title="5. BOM"></a>5. BOM</h2><p>BOM即浏览器对象模型(Browser Object Model)</p><p>浏览器对象包括：</p><ul><li>Window(窗口)</li><li>Navigator(浏览器)</li><li>Screen(客户端屏幕)</li><li>History(访问历史)</li><li>Location(浏览器地址)</li></ul><p>通过浏览器对象模型，我们可以获得用户的浏览器对象的相关信息，从而达到项目目的。</p><h3 id="5-1-Window"><a href="#5-1-Window" class="headerlink" title="5.1 Window"></a>5.1 Window</h3><p>通过window对象获取文档显示区域的高度和宽度</p><pre><code class="lang-window.innerHeigth```">```window.innerWidth</code></pre><p>获取外部浏览器的高度和宽度</p><pre><code class="lang-window.outerHeigth```">```window.outerWidth</code></pre><h4 id="5-1-1-弹出框"><a href="#5-1-1-弹出框" class="headerlink" title="5.1.1 弹出框"></a>5.1.1 弹出框</h4><p>浏览器上常见的弹出框有警告框，确认框，提示框，都是调用window对象实现的。但由于十分常用，所以把window省略掉了。</p><ul><li>警告框：常用于提示信息 <code>alert(内容)</code></li><li>确认框：常用于危险性操作的确认提示，返回布尔类型的true或false <code>var boolean = confirm(内容)</code></li><li>输入框：供用户输入相关信息(很少使用) <code>var string = prompt(内容)</code></li></ul><h3 id="5-2-Navigator"><a href="#5-2-Navigator" class="headerlink" title="5.2 Navigator"></a>5.2 Navigator</h3><p>通过Navigator对象获取浏览器的相关信息</p><div class="table-container"><table><thead><tr><th>属性</th><th>内容</th></tr></thead><tbody><tr><td>navigator.appName</td><td>浏览器产品名称</td></tr><tr><td>navigator.appVersion</td><td>浏览器版本号</td></tr><tr><td>navigator.appCodeName</td><td>浏览器内部代码</td></tr><tr><td>navigator.platform</td><td>浏览器操作系统</td></tr><tr><td>navigator.cookieEnabled</td><td>浏览器是否启用Cookies</td></tr><tr><td>navigator.userAgent</td><td>浏览器的用户代理报头</td></tr></tbody></table></div><h3 id="5-3-Screen"><a href="#5-3-Screen" class="headerlink" title="5.3 Screen"></a>5.3 Screen</h3><p>通过Screen对象获取用户屏幕相关信息。</p><p>获取用户屏幕分辨率<br><code>screen.width  screen.height</code></p><p>获取用户屏幕可用区域大小<br><code>screen.availWidth screen.availHeight</code></p><h3 id="5-4-History"><a href="#5-4-History" class="headerlink" title="5.4 History"></a>5.4 History</h3><p>通过History对象记录访问历史</p><p>返回上一次访问</p><pre><code class="lang-history.back()```">返回上上次的访问```history.go(-2) // -1表示上次，-2表示上上次，以此类推</code></pre><h3 id="5-5-Location"><a href="#5-5-Location" class="headerlink" title="5.5 Location"></a>5.5 Location</h3><p>通过Location对象控制网页地址。</p><p>刷新当前页面<code>location.reload()</code></p><p>跳转到另一个页面<code>location=&quot;/&quot; location.assign(&quot;/&quot;)</code></p><p><strong>区别：assign会添加记录到浏览历史，点击后退可以返回之前页面</strong></p><div class="table-container"><table><thead><tr><th>属性</th><th>内容</th></tr></thead><tbody><tr><td>location.protocol</td><td>协议</td></tr><tr><td>location.hostname</td><td>主机号</td></tr><tr><td>location.port</td><td>端口号</td></tr><tr><td>location.host</td><td>主机+端口号</td></tr><tr><td>location.pathname</td><td>访问路径</td></tr><tr><td>location.hash</td><td>锚点</td></tr><tr><td>location.search</td><td>参数列表</td></tr></tbody></table></div><h3 id="5-6-计时器"><a href="#5-6-计时器" class="headerlink" title="5.6 计时器"></a>5.6 计时器</h3><div class="table-container"><table><thead><tr><th>方法</th><th>作用</th></tr></thead><tbody><tr><td>setTimeout(函数, 毫秒数)</td><td>毫秒数结束之后执行函数</td></tr><tr><td>setInterval(函数, 间隔毫秒数)</td><td>重复执行函数</td></tr><tr><td>clearInterval(重复执行的任务)</td><td>终止一个不断重复地任务 </td></tr></tbody></table></div><p>clearInterval例子：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> task = <span class="built_in">setInterval</span>(print, <span class="number">2000</span>);</span><br><span class="line"><span class="built_in">clearInterval</span>(task); <span class="comment">// 终止task</span></span><br></pre></td></tr></table></figure><h2 id="6-DOM"><a href="#6-DOM" class="headerlink" title="6. DOM"></a>6. DOM</h2><p>DOM即文档对象模型(Document Object Model)。</p><p>DOM是把HTML里面的各种数据当作对象进行操作的一种思路。</p><p>DOM把所有的HTML都转换为节点。</p><ul><li>元素节点</li><li>属性节点</li><li>内容节点</li></ul><h3 id="6-1-获取节点"><a href="#6-1-获取节点" class="headerlink" title="6.1 获取节点"></a>6.1 获取节点</h3><ol><li>获取元素节点</li></ol><ul><li>通过id document.getElementById(id)</li><li>通过标签 document.getElementsByTagName(标签)</li><li>通过类名 document.getElementsByClassName(类名)</li></ul><ol><li>获取属性节点</li></ol><p>先获取对应的元素节点，然后通过元素节点的attributes获取其下所有的属性节点。使用nodeName和nodeValue查看属性名和属性值。</p><ol><li>获取内容节点</li></ol><p>先获取对应的元素节点，然后用过childNodes获取其所有的子节点，其中第一个子节点就是内容节点。使用nodeName和nodeValue查看内容节点名和内容节点值。</p><p><strong>innerHTML表示元素的文本内容</strong></p><h3 id="6-2-事件"><a href="#6-2-事件" class="headerlink" title="6.2 事件"></a>6.2 事件</h3><p>鼠标、键盘等在网页上的一系列动作称为事件，通过捕获事件执行对应的函数来实现网页的交互。</p><div class="table-container"><table><thead><tr><th>事件</th><th>关键字</th></tr></thead><tbody><tr><td>焦点事件(文本框)</td><td>onfocus onblur</td></tr><tr><td>鼠标事件</td><td>onmousedown onmouseup onmousemove onmouseout</td></tr><tr><td>键盘事件</td><td>onkeydown onkeypress onkeyup</td></tr><tr><td>点击事件</td><td>onclick ondblclick</td></tr><tr><td>变化事件</td><td>onchange</td></tr><tr><td>提交事件</td><td>onsubmit</td></tr><tr><td>加载事件</td><td>onload</td></tr><tr><td>当前组件</td><td>this</td></tr></tbody></table></div><h3 id="6-3-节点关系"><a href="#6-3-节点关系" class="headerlink" title="6.3 节点关系"></a>6.3 节点关系</h3><p>HTML中的节点是有层次的，也就有父子关系。</p><p>parentNode和childNodes可以寻找当前节点的父节点和子节点。<br>previousSibling和nextSibling可以寻找当前节点的前一个或后一个同胞节点。</p><p><strong>childNodes和children的区别：它们都可以获取一个元素的子节点，但children获取的节点中不包括文本节点，而childNodes包含文本节点。</strong></p><h3 id="6-4-创建节点"><a href="#6-4-创建节点" class="headerlink" title="6.4 创建节点"></a>6.4 创建节点</h3><ul><li>创建元素节点 document.createElement(节点名)</li><li>创建文本节点 document.createTextNode(文本内容)</li><li>创建属性节点 document.createAttribute(属性名)</li></ul><p>例如创建一个超链，链接文本是 www.12306.com，指向链接为 www.12306.com</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    <span class="comment">// 创建a标签</span></span><br><span class="line">    <span class="keyword">var</span> a = <span class="built_in">document</span>.createElement(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">    <span class="comment">// 创建文本节点</span></span><br><span class="line">    <span class="keyword">var</span> text = <span class="built_in">document</span>.createTextNode(<span class="string">&quot;www.12306.com&quot;</span>);</span><br><span class="line">    <span class="comment">// 添加到a标签中</span></span><br><span class="line">    a.appendChild(text);</span><br><span class="line">    <span class="comment">// 创建href属性</span></span><br><span class="line">    <span class="keyword">var</span> href = <span class="built_in">document</span>.createAttribute(<span class="string">&quot;href&quot;</span>);</span><br><span class="line">    <span class="comment">// 设置属性值</span></span><br><span class="line">    href.nodeValue = <span class="string">&quot;www.12306.com&quot;</span>;</span><br><span class="line">    <span class="comment">// 将属性添加到a标签中</span></span><br><span class="line">    a.setAttributeNode(href);</span><br><span class="line">&lt;/script&gt;</span><br></pre></td></tr></table></figure><h3 id="6-5-删除节点"><a href="#6-5-删除节点" class="headerlink" title="6.5 删除节点"></a>6.5 删除节点</h3><ul><li>删除元素节点 removeChild （先获取父节点，然后在父节点上删除该节点）</li><li>删除属性节点 removeAttribute</li><li>删除文本节点 childNodes[0]获取文本节点，再使用removeChild删除；innerHTML=””直接删除文本节点。</li></ul><h3 id="6-6-替换节点"><a href="#6-6-替换节点" class="headerlink" title="6.6 替换节点"></a>6.6 替换节点</h3><p>replaceChild(节点1, 节点2) 在父节点上进行操作，节点1是保留的参数，节点2是被替换的节点。</p><h3 id="6-7-插入节点"><a href="#6-7-插入节点" class="headerlink" title="6.7 插入节点"></a>6.7 插入节点</h3><ul><li>追加节点 appendChild</li><li>指定位置插入节点 insertBefore(节点1, 节点2) 在节点2前插入节点1</li></ul><h3 id="6-8-练习"><a href="#6-8-练习" class="headerlink" title="6.8 练习"></a>6.8 练习</h3><h4 id="6-8-1-练习01"><a href="#6-8-1-练习01" class="headerlink" title="6.8.1 练习01"></a>6.8.1 练习01</h4><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/DOMPractice01.png" alt=""></p><p><a href="https://shenshilei1022.github.io/JavaScriptPractice/DOM/Practice01/Practice01.html">在线观看</a></p><p><em>HTML</em><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span><span class="attr">content</span>=<span class="string">&quot;text/html; charset=utf-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>DOM练习01<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>1. 验证账号是否存在：使用简单地验证规则，如果账号以a或A开头，就提示已经存在<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;inputUser&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;验证&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;checkAccount()&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color: lightcoral; display: none&quot;</span> <span class="attr">id</span>=<span class="string">&quot;noUser&quot;</span>&gt;</span>账号已经存在<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color: lightgreen; display: none&quot;</span> <span class="attr">id</span>=<span class="string">&quot;yesUser&quot;</span>&gt;</span>账号可以使用<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>2. 切换不同的图片<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;通过src属性切换图片1&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;switch1()&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;通过属性节点切换图片2&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;switch2()&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;0.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;img&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>3. 判断输入框里的值是否是整数（浮点数也不行）<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;num&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;是否是整数？&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;judgeInt()&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">&quot;result&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;practice01.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><em>JavaScript</em><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getElement</span>(<span class="params">id</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> value = <span class="built_in">document</span>.getElementById(id);</span><br><span class="line">    <span class="keyword">return</span> value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkAccount</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> account = getElement(<span class="string">&quot;inputUser&quot;</span>).value;</span><br><span class="line">    <span class="keyword">var</span> noUser = getElement(<span class="string">&quot;noUser&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> yesUser = getElement(<span class="string">&quot;yesUser&quot;</span>);</span><br><span class="line">    <span class="comment">// 开始设置noUser和yesUser为不显示</span></span><br><span class="line">    noUser.style.display = <span class="string">&quot;none&quot;</span>;</span><br><span class="line">    yesUser.style.display = <span class="string">&quot;none&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> firstChar = account.charAt(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">0</span> == account.length)&#123;</span><br><span class="line">        noUser.style.display = <span class="string">&quot;none&quot;</span>;</span><br><span class="line">        yesUser.style.display = <span class="string">&quot;none&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;a&quot;</span> == firstChar || <span class="string">&quot;A&quot;</span> == firstChar) &#123;</span><br><span class="line">        noUser.style.display = <span class="string">&quot;inline&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        yesUser.style.display = <span class="string">&quot;inline&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">switch1</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> img = getElement(<span class="string">&quot;img&quot;</span>);</span><br><span class="line">    img.src = <span class="string">&quot;1.jpg&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">switch2</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> img = getElement(<span class="string">&quot;img&quot;</span>);</span><br><span class="line">    img.attributes[<span class="string">&quot;src&quot;</span>].nodeValue = <span class="string">&quot;0.jpg&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">judgeInt</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> numStr = getElement(<span class="string">&quot;num&quot;</span>).value;</span><br><span class="line">    <span class="keyword">var</span> result = getElement(<span class="string">&quot;result&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">0</span> == numStr.length) &#123;</span><br><span class="line">        result.childNodes[<span class="number">0</span>].nodeValue = <span class="string">&quot;输入为空！&quot;</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> num = <span class="keyword">new</span> <span class="built_in">Number</span>(numStr);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isNaN</span>(num) == <span class="literal">true</span>) &#123;</span><br><span class="line">            result.childNodes[<span class="number">0</span>].nodeValue = <span class="string">&quot;输入包含非数字！&quot;</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> numList = numStr.split(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="number">2</span> == numList.length) &#123;</span><br><span class="line">                result.childNodes[<span class="number">0</span>].nodeValue = <span class="string">&quot;输入为小数！&quot;</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                result.childNodes[<span class="number">0</span>].nodeValue = <span class="string">&quot;输入为整数~&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>踩坑： 第三题刚开始做的时候一直有问题，如果html中的span标签中没有空格的话，即没有文本节点，那么用childNodes[0]是获取不到的，再通过其nodeValue修改值是行不通的。所以解决办法是设置空格，相当于有了文本节点；或者直接使用innerHTML修改内容节点的值。</strong></p><h4 id="6-8-2-练习02"><a href="#6-8-2-练习02" class="headerlink" title="6.8.2 练习02"></a>6.8.2 练习02</h4><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/DOMPractice02.png" alt=""></p><p><a href="https://shenshilei1022.github.io/JavaScriptPractice/DOM/Practice02/Practice02.html">在线观看</a></p><p><em>HTML</em><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span><span class="attr">content</span>=<span class="string">&quot;text/html; charset=utf-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;style.css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>1. 鼠标移动到不同菜单时，显示不同的下拉菜单<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#nowhere&quot;</span> <span class="attr">class</span>=<span class="string">&quot;d1&quot;</span> <span class="attr">onmouseover</span>=<span class="string">&quot;showMenu(this.className)&quot;</span>&gt;</span>武器<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#nowhere&quot;</span> <span class="attr">class</span>=<span class="string">&quot;d2&quot;</span> <span class="attr">onmouseover</span>=<span class="string">&quot;showMenu(this.className)&quot;</span>&gt;</span>护甲<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#nowhere&quot;</span> <span class="attr">class</span>=<span class="string">&quot;d3&quot;</span> <span class="attr">onmouseover</span>=<span class="string">&quot;showMenu(this.className)&quot;</span>&gt;</span>英雄<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;d d1&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#nowhere&quot;</span>&gt;</span>大剑<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#nowhere&quot;</span>&gt;</span>屠龙<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#nowhere&quot;</span>&gt;</span>倚天<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#nowhere&quot;</span>&gt;</span>七孔砖<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;d d2&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#nowhere&quot;</span>&gt;</span>胸甲<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#nowhere&quot;</span>&gt;</span>护腕<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#nowhere&quot;</span>&gt;</span>头盔<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#nowhere&quot;</span>&gt;</span>鞋子<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;d d3&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#nowhere&quot;</span>&gt;</span>盖伦<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#nowhere&quot;</span>&gt;</span>提莫<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#nowhere&quot;</span>&gt;</span>安妮<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#nowhere&quot;</span>&gt;</span>死歌<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 200px;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>2. 当用户输入用户名时，就自动验证账号是否存在<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;inputUser&quot;</span> <span class="attr">oninput</span>=<span class="string">&quot;checkAccount()&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color: lightcoral; display: none&quot;</span> <span class="attr">id</span>=<span class="string">&quot;noUser&quot;</span>&gt;</span>账号已经存在<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;color: lightgreen; display: none&quot;</span> <span class="attr">id</span>=<span class="string">&quot;yesUser&quot;</span>&gt;</span>账号可以使用<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 50px;&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h3</span>&gt;</span>3. 点击全选，选中所有复选框；点击反选，反选复选框<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;checkClick()&quot;</span>&gt;</span>全选<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">class</span>=<span class="string">&quot;check&quot;</span>&gt;</span>tokyo hot<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">class</span>=<span class="string">&quot;check&quot;</span>&gt;</span>dota<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">class</span>=<span class="string">&quot;check&quot;</span>&gt;</span>lol<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">class</span>=<span class="string">&quot;check&quot;</span>&gt;</span>wow<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">class</span>=<span class="string">&quot;check&quot;</span>&gt;</span>warcraft<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span> <span class="attr">class</span>=<span class="string">&quot;check&quot;</span>&gt;</span>diablo<span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#nowhere&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;reverseSelect()&quot;</span>&gt;</span>反选<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;practice02.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><em>CSS</em><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.d</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: lightgray;</span><br><span class="line">    <span class="attribute">border-style</span>: solid;</span><br><span class="line">    <span class="attribute">border-color</span>: lightgray;</span><br><span class="line">    <span class="attribute">border-width</span>: <span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">80px</span>;</span><br><span class="line">    <span class="attribute">display</span>: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.d</span> <span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#888</span>;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">    <span class="attribute">font-family</span>: 宋体;</span><br><span class="line">    <span class="attribute">display</span>: block;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">10</span> <span class="number">5</span> <span class="number">10</span> <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.d</span> <span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#f1f1f1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.d1</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">80px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.d2</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">50px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">80px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.d3</span> &#123;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">95px</span>;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">80px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><em>JavaScript</em><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showMenu</span>(<span class="params">className</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> menu = <span class="built_in">document</span>.getElementsByClassName(className)[<span class="number">1</span>];</span><br><span class="line">    <span class="keyword">var</span> totalMenu = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&quot;d&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; totalMenu.length; i++) &#123;</span><br><span class="line">        totalMenu[i].style.display = <span class="string">&quot;none&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    menu.style.display = <span class="string">&quot;block&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getElement</span>(<span class="params">id</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> value = <span class="built_in">document</span>.getElementById(id);</span><br><span class="line">    <span class="keyword">return</span> value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkAccount</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> account = getElement(<span class="string">&quot;inputUser&quot;</span>).value;</span><br><span class="line">    <span class="keyword">var</span> noUser = getElement(<span class="string">&quot;noUser&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> yesUser = getElement(<span class="string">&quot;yesUser&quot;</span>);</span><br><span class="line">    <span class="comment">// 开始设置noUser和yesUser为不显示</span></span><br><span class="line">    noUser.style.display = <span class="string">&quot;none&quot;</span>;</span><br><span class="line">    yesUser.style.display = <span class="string">&quot;none&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> firstChar = account.charAt(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">0</span> == account.length)&#123;</span><br><span class="line">        noUser.style.display = <span class="string">&quot;none&quot;</span>;</span><br><span class="line">        yesUser.style.display = <span class="string">&quot;none&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (<span class="string">&quot;a&quot;</span> == firstChar || <span class="string">&quot;A&quot;</span> == firstChar) &#123;</span><br><span class="line">        noUser.style.display = <span class="string">&quot;inline&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">        yesUser.style.display = <span class="string">&quot;inline&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkClick</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> checkboxes = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&quot;check&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; checkboxes.length; i++) &#123;</span><br><span class="line">        checkboxes[i].checked = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">reverseSelect</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> checkboxes = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&quot;check&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; checkboxes.length; i++) &#123;</span><br><span class="line">        checkboxes[i].checked = ! checkboxes[i].checked;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h4 id="6-8-3-练习03"><a href="#6-8-3-练习03" class="headerlink" title="6.8.3 练习03"></a>6.8.3 练习03</h4><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/DOMPractice03.png" alt=""></p><p><a href="https://shenshilei1022.github.io/JavaScriptPractice/DOM/Practice03/Practice03.html">在线观看</a></p><p><em>HTML</em><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span><span class="attr">content</span>=<span class="string">&quot;text/html; charset=utf-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;style.css&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layout&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span>动态创建一个表<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            id: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;ID&quot;</span>&gt;</span></span><br><span class="line">            名称: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;Name&quot;</span>&gt;</span></span><br><span class="line">            血量: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;HP&quot;</span>&gt;</span></span><br><span class="line">            伤害: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;damage&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">center</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 20px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;添加&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;addMessage()&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;dynamicTable&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>id<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>名称<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>血量<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>伤害<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;practice03.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><em>CSS</em><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-class">.layout</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">550px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">80px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">td</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">table</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">border-bottom-style</span>: solid;</span><br><span class="line">    <span class="attribute">border-bottom-width</span>: <span class="number">2px</span>;</span><br><span class="line">    <span class="attribute">border-bottom-color</span>: lightgray;</span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><em>JavaScript</em><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addMessage</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> id = getValue(<span class="string">&quot;ID&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> name = getValue(<span class="string">&quot;Name&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> hp = getValue(<span class="string">&quot;HP&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> damage = getValue(<span class="string">&quot;damage&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 创建table元素</span></span><br><span class="line">    <span class="keyword">var</span> tableElement = <span class="built_in">document</span>.createElement(<span class="string">&quot;table&quot;</span>);</span><br><span class="line">    <span class="comment">// 创建tr元素</span></span><br><span class="line">    <span class="keyword">var</span> trElement = <span class="built_in">document</span>.createElement(<span class="string">&quot;tr&quot;</span>);</span><br><span class="line">    <span class="comment">// 创建td元素</span></span><br><span class="line">    <span class="keyword">var</span> tdElement1 = <span class="built_in">document</span>.createElement(<span class="string">&quot;td&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> tdElement2 = <span class="built_in">document</span>.createElement(<span class="string">&quot;td&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> tdElement3 = <span class="built_in">document</span>.createElement(<span class="string">&quot;td&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> tdElement4 = <span class="built_in">document</span>.createElement(<span class="string">&quot;td&quot;</span>);</span><br><span class="line">    <span class="comment">// 创建文本节点</span></span><br><span class="line">    <span class="keyword">var</span> idText = <span class="built_in">document</span>.createTextNode(id);</span><br><span class="line">    <span class="keyword">var</span> nameText = <span class="built_in">document</span>.createTextNode(name);</span><br><span class="line">    <span class="keyword">var</span> hpText = <span class="built_in">document</span>.createTextNode(hp);</span><br><span class="line">    <span class="keyword">var</span> damageText = <span class="built_in">document</span>.createTextNode(damage);</span><br><span class="line">    <span class="comment">// 添加到td元素中</span></span><br><span class="line">    tdElement1.appendChild(idText);</span><br><span class="line">    tdElement2.appendChild(nameText);</span><br><span class="line">    tdElement3.appendChild(hpText);</span><br><span class="line">    tdElement4.appendChild(damageText);</span><br><span class="line">    <span class="comment">// 添加到tr元素中</span></span><br><span class="line">    trElement.appendChild(tdElement1);</span><br><span class="line">    trElement.appendChild(tdElement2);</span><br><span class="line">    trElement.appendChild(tdElement3);</span><br><span class="line">    trElement.appendChild(tdElement4);</span><br><span class="line">    <span class="comment">// 添加到table元素中</span></span><br><span class="line">    tableElement.appendChild(trElement);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> div = <span class="built_in">document</span>.getElementById(<span class="string">&quot;dynamicTable&quot;</span>);</span><br><span class="line">    div.appendChild(tableElement);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 清空输入框的值</span></span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;ID&quot;</span>).value = <span class="literal">null</span>;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;Name&quot;</span>).value = <span class="literal">null</span>;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;HP&quot;</span>).value = <span class="literal">null</span>;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;damage&quot;</span>).value = <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getValue</span>(<span class="params">id</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> value = <span class="built_in">document</span>.getElementById(id).value;</span><br><span class="line">    <span class="keyword">return</span> value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>可以用循环改进。。</strong></p><h4 id="6-8-4-练习04"><a href="#6-8-4-练习04" class="headerlink" title="6.8.4 练习04"></a>6.8.4 练习04</h4><p>动态加载js</p><p><a href="https://shenshilei1022.github.io/JavaScriptPractice/DOM/Practice04/Practice04.html">在线观看</a></p><p><em>HTML</em><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span><span class="attr">content</span>=<span class="string">&quot;text/html; charset=utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span> <span class="attr">id</span>=<span class="string">&quot;parent&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;dynamicJS()&quot;</span>&gt;</span>动态加载js<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> <span class="attr">onclick</span>=<span class="string">&quot;test()&quot;</span>&gt;</span>动态加载js后点击才有效果<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">            <span class="function"><span class="keyword">function</span> <span class="title">dynamicJS</span>(<span class="params"></span>) </span>&#123;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 创建script元素</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> scriptElement = <span class="built_in">document</span>.createElement(<span class="string">&quot;script&quot;</span>);</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 创建属性节点</span></span></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> src = <span class="built_in">document</span>.createAttribute(<span class="string">&quot;src&quot;</span>);</span></span><br><span class="line"><span class="javascript">                src.nodeValue = <span class="string">&quot;practice04.js&quot;</span>;</span></span><br><span class="line"><span class="javascript">                <span class="comment">// 将属性添加到节点</span></span></span><br><span class="line">                scriptElement.setAttributeNode(src);</span><br><span class="line"></span><br><span class="line"><span class="javascript">                <span class="keyword">var</span> body = <span class="built_in">document</span>.getElementById(<span class="string">&quot;parent&quot;</span>);</span></span><br><span class="line">                body.appendChild(scriptElement);</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><em>JavaScript</em><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">test</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    alert(<span class="string">&quot;this is test.js&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="6-9-常用场景"><a href="#6-9-常用场景" class="headerlink" title="6.9 常用场景"></a>6.9 常用场景</h3><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/DOMPractice05.png" alt=""></p><p><a href="https://shenshilei1022.github.io/JavaScriptPractice/DOM/Practice05/Practice05.html">在线观看</a></p><p><em>HTML</em><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span><span class="attr">content</span>=<span class="string">&quot;text/html; charset=utf-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">            <span class="selector-tag">div</span><span class="selector-class">.layout</span> &#123;</span></span><br><span class="line">                margin: auto;</span><br><span class="line">                padding: 50px;</span><br><span class="line">                width: 700px;</span><br><span class="line">            &#125;</span><br><span class="line">            table &#123;</span><br><span class="line">                border-collapse: collapse;</span><br><span class="line">            &#125;</span><br><span class="line">            td &#123;</span><br><span class="line">                border-style: solid;</span><br><span class="line">                border-width: 1px;</span><br><span class="line">                border-color: lightslategray;</span><br><span class="line">                width: 200px;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layout&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span>&gt;</span>1. 删除行为前的提示<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>在进行删除操作前，都应该提示用户是否要删除<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>英雄名称<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>操作<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">&quot;tr1&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>盖伦<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#nowhere&quot;</span> <span class="attr">class</span>=<span class="string">&quot;tr1&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;deleteData(this.className)&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">&quot;tr2&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>船长<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#nowhere&quot;</span> <span class="attr">class</span>=<span class="string">&quot;tr2&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;deleteData(this.className)&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">tr</span> <span class="attr">class</span>=<span class="string">&quot;tr3&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span>卡沙<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#nowhere&quot;</span> <span class="attr">class</span>=<span class="string">&quot;tr3&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;deleteData(this.className)&quot;</span>&gt;</span>删除<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span>&gt;</span>2. 验证账号密码是否为空<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>比如登录的时候，如果账号或密码为空，弹出提示，并且不提交(由于还没学服务器的知识，先不写表单提交的动作。)<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                账号：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;user&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                密码：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span> <span class="attr">id</span>=<span class="string">&quot;pwd&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;登录&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;isEmpty()&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span>&gt;</span>3. 提交数据，验证长度<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>比如注册用户名时，用户名至少需要3位长度<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                账号：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;account&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;注册&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;judgeAccountLength()&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span>&gt;</span>4. 验证年龄是否为数字<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span>比如注册的时候，需要提交年龄信息，用户输入的年龄信息必须是数字的(且不能是小数)。<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                账号：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                年龄：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;age&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;注册&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;judgeAge()&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span>&gt;</span>5. 验证Email格式是否正确<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                Email：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;email&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;注册&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;judgeEmail()&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h3</span>&gt;</span>6. 隐藏和显示<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;隐藏div&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;hide()&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;显示div&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;show()&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;closable&quot;</span>&gt;</span>这是一个div<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;practice05.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><em>JavaScript</em><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">deleteData</span>(<span class="params">className</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> flag = confirm(<span class="string">&quot;确定删除？&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (flag) &#123;</span><br><span class="line">        <span class="keyword">var</span> trElement = <span class="built_in">document</span>.getElementsByClassName(className)[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">var</span> parent = trElement.parentElement;</span><br><span class="line">        <span class="comment">// 删除节点</span></span><br><span class="line">        parent.removeChild(trElement);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">isEmpty</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> user = <span class="built_in">document</span>.getElementById(<span class="string">&quot;user&quot;</span>).value;</span><br><span class="line">    <span class="keyword">var</span> pwd = <span class="built_in">document</span>.getElementById(<span class="string">&quot;pwd&quot;</span>).value;</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">0</span> == user.length) &#123;</span><br><span class="line">        alert(<span class="string">&quot;用户名不能为空！&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">0</span> == pwd.length) &#123;</span><br><span class="line">        alert(<span class="string">&quot;密码不能为空！&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        alert(<span class="string">&quot;登录成功！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">judgeAccountLength</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> account = <span class="built_in">document</span>.getElementById(<span class="string">&quot;account&quot;</span>).value;</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">3</span> &gt; account.length) &#123;</span><br><span class="line">        alert(<span class="string">&quot;用户名至少需要3位！&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        alert(<span class="string">&quot;注册成功！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">judgeAge</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> age = <span class="built_in">document</span>.getElementById(<span class="string">&quot;age&quot;</span>).value;</span><br><span class="line">    <span class="keyword">if</span> (<span class="number">0</span> == age.length) &#123;</span><br><span class="line">        alert(<span class="string">&quot;年龄不能为空！&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">var</span> ageNum = <span class="keyword">new</span> <span class="built_in">Number</span>(age);</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isNaN</span>(ageNum)) &#123;</span><br><span class="line">            alert(<span class="string">&quot;输入包含非法字符！&quot;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">var</span> numList = age.split(<span class="string">&quot;.&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span> (numList.length &gt; <span class="number">1</span>) &#123;</span><br><span class="line">                alert(<span class="string">&quot;输入包含小数！&quot;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                alert(<span class="string">&quot;注册成功！&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">judgeEmail</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> email = <span class="built_in">document</span>.getElementById(<span class="string">&quot;email&quot;</span>).value;</span><br><span class="line">    <span class="keyword">var</span> regEmail = <span class="regexp">/^(?:\w+\.?)*\w+@(?:\w+\.)*\w+$/</span>;</span><br><span class="line">    <span class="keyword">var</span> re = <span class="regexp">/^[a-zA-Z0-9_-]+@[a-zA-Z0-9\._-]+[a-zA-Z0-9_-]+$/</span>;</span><br><span class="line">    <span class="keyword">if</span> (re.test(email)) &#123;</span><br><span class="line">        alert(<span class="string">&quot;注册成功！&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        alert(<span class="string">&quot;请输入正确的邮箱格式！&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">hide</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> div1 = <span class="built_in">document</span>.getElementById(<span class="string">&quot;closable&quot;</span>);</span><br><span class="line">    div1.style.display = <span class="string">&quot;none&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> div1 = <span class="built_in">document</span>.getElementById(<span class="string">&quot;closable&quot;</span>);</span><br><span class="line">    div1.style.display = <span class="string">&quot;block&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>踩坑：做 6.隐藏与显示 时，我开始使用的函数名是close()，发现不起作用，改为hide()便正常了。应该是close在js中是保留的关键字，不要使用它作为变量或函数名。类似的还有open和click。</strong></p><h4 id="7-排序问题：点击表头对表格内数据进行排序"><a href="#7-排序问题：点击表头对表格内数据进行排序" class="headerlink" title="7.排序问题：点击表头对表格内数据进行排序"></a>7.排序问题：点击表头对表格内数据进行排序</h4><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/DOMPractice03.png" alt=""></p><p><a href="https://shenshilei1022.github.io/JavaScriptPractice/DOM/Practice06/Practice06.html">在线观看</a></p><p><em>HTML</em><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span><span class="attr">content</span>=<span class="string">&quot;text/html; charset=utf-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;style.css&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layout&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span>动态创建一个表<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            id: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;ID&quot;</span>&gt;</span></span><br><span class="line">            名称: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;Name&quot;</span>&gt;</span></span><br><span class="line">            血量: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;HP&quot;</span>&gt;</span></span><br><span class="line">            伤害: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">id</span>=<span class="string">&quot;damage&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">center</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 20px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;添加&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;addMessage()&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;dynamicTable&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#nowhere&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;sort(0)&quot;</span>&gt;</span>id<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#nowhere&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;sort(1)&quot;</span>&gt;</span>名称<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#nowhere&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;sort(2)&quot;</span>&gt;</span>血量<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#nowhere&quot;</span> <span class="attr">onclick</span>=<span class="string">&quot;sort(3)&quot;</span>&gt;</span>伤害<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;practice06.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p><em>CSS</em><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-class">.layout</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">550px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">80px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">td</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">150px</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">table</span> &#123;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">border-bottom-style</span>: solid;</span><br><span class="line">    <span class="attribute">border-bottom-width</span>: <span class="number">2px</span>;</span><br><span class="line">    <span class="attribute">border-bottom-color</span>: lightgray;</span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><em>JavaScript</em><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">addMessage</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> id = getValue(<span class="string">&quot;ID&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> name = getValue(<span class="string">&quot;Name&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> hp = getValue(<span class="string">&quot;HP&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> damage = getValue(<span class="string">&quot;damage&quot;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="number">0</span> == id.length || <span class="number">0</span> == name.length || <span class="number">0</span> == hp.length || <span class="number">0</span> == damage.length) &#123;</span><br><span class="line">        alert(<span class="string">&quot;有选项未填写！&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="comment">// 创建table元素</span></span><br><span class="line">        <span class="keyword">var</span> tableElement = <span class="built_in">document</span>.createElement(<span class="string">&quot;table&quot;</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> className = <span class="built_in">document</span>.createAttribute(<span class="string">&quot;class&quot;</span>);</span><br><span class="line">        className.nodeValue = <span class="string">&quot;sort&quot;</span>;</span><br><span class="line">        tableElement.setAttributeNode(className);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建tr元素</span></span><br><span class="line">        <span class="keyword">var</span> trElement = <span class="built_in">document</span>.createElement(<span class="string">&quot;tr&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建td元素</span></span><br><span class="line">        <span class="keyword">var</span> tdElement1 = <span class="built_in">document</span>.createElement(<span class="string">&quot;td&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> tdElement2 = <span class="built_in">document</span>.createElement(<span class="string">&quot;td&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> tdElement3 = <span class="built_in">document</span>.createElement(<span class="string">&quot;td&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> tdElement4 = <span class="built_in">document</span>.createElement(<span class="string">&quot;td&quot;</span>);</span><br><span class="line">        <span class="comment">// 创建文本节点</span></span><br><span class="line">        <span class="keyword">var</span> idText = <span class="built_in">document</span>.createTextNode(id);</span><br><span class="line">        <span class="keyword">var</span> nameText = <span class="built_in">document</span>.createTextNode(name);</span><br><span class="line">        <span class="keyword">var</span> hpText = <span class="built_in">document</span>.createTextNode(hp);</span><br><span class="line">        <span class="keyword">var</span> damageText = <span class="built_in">document</span>.createTextNode(damage);</span><br><span class="line">        <span class="comment">// 添加到td元素中</span></span><br><span class="line">        tdElement1.appendChild(idText);</span><br><span class="line">        tdElement2.appendChild(nameText);</span><br><span class="line">        tdElement3.appendChild(hpText);</span><br><span class="line">        tdElement4.appendChild(damageText);</span><br><span class="line">        <span class="comment">// 添加到tr元素中</span></span><br><span class="line">        trElement.appendChild(tdElement1);</span><br><span class="line">        trElement.appendChild(tdElement2);</span><br><span class="line">        trElement.appendChild(tdElement3);</span><br><span class="line">        trElement.appendChild(tdElement4);</span><br><span class="line">        <span class="comment">// 添加到table元素中</span></span><br><span class="line">        tableElement.appendChild(trElement);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">var</span> div = <span class="built_in">document</span>.getElementById(<span class="string">&quot;dynamicTable&quot;</span>);</span><br><span class="line">        div.appendChild(tableElement);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 清空输入框的值</span></span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&quot;ID&quot;</span>).value = <span class="literal">null</span>;</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&quot;Name&quot;</span>).value = <span class="literal">null</span>;</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&quot;HP&quot;</span>).value = <span class="literal">null</span>;</span><br><span class="line">        <span class="built_in">document</span>.getElementById(<span class="string">&quot;damage&quot;</span>).value = <span class="literal">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getValue</span>(<span class="params">id</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> value = <span class="built_in">document</span>.getElementById(id).value;</span><br><span class="line">    <span class="keyword">return</span> value;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> col = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> reverse = <span class="literal">false</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sort</span>(<span class="params">column</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (col == column) &#123;</span><br><span class="line">        reverse = !reverse;</span><br><span class="line">    &#125;</span><br><span class="line">    col = column;</span><br><span class="line">    <span class="keyword">var</span> div = <span class="built_in">document</span>.getElementById(<span class="string">&quot;dynamicTable&quot;</span>);</span><br><span class="line">    <span class="comment">// 提取出来Collection</span></span><br><span class="line">    <span class="keyword">var</span> tableCollection = <span class="built_in">document</span>.getElementsByClassName(<span class="string">&quot;sort&quot;</span>);</span><br><span class="line">    <span class="comment">// 因为Collection没有自带的排序函数，所以需要转换为数组，利用数组的排序。</span></span><br><span class="line">    <span class="keyword">var</span> tables = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; tableCollection.length; i++) &#123;</span><br><span class="line">        tables.push(tableCollection[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    tables.sort(comparator);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt;tables.length; i++) &#123;</span><br><span class="line">        div.appendChild(tables[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">comparator</span>(<span class="params">table1, table2</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> td1 = table1.children[<span class="number">0</span>].children[col].innerHTML;</span><br><span class="line">    <span class="keyword">var</span> td2 = table2.children[<span class="number">0</span>].children[col].innerHTML;</span><br><span class="line">    <span class="keyword">if</span> (reverse) &#123;</span><br><span class="line">        <span class="keyword">return</span> td2.localeCompare(td1);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> td1.localeCompare(td2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p><strong>踩坑：数组的排序问题。自定义排序可以定义一个comparator函数，然后作为参数传到数组的sort方法中。关于comparator的排序定义是这样的，comparator(t1, t2)返回t1 - t2的话，表示按从小到大的顺序进行排列，因为t1大于t2的话，返回的是正值，t1就会拥有比t2要高的地位，放在t2的后面，形成从小到大的排序；而返回t2 - t1，则表示按照从大到小的顺序排列，因为此时需要t2大于t1，t1才会排在t2后面。</strong></p><h2 id="7-参考"><a href="#7-参考" class="headerlink" title="7. 参考"></a>7. 参考</h2><ul><li><a href="https://how2j.cn/k/javascript/javascript-javascript-tutorial/519.html">HOW2J.CN JavaScript</a></li><li><a href="https://how2j.cn/k/dom/dom-node/457.html">HOW2J.CN DOM</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Python批量将word和图片转换为PDF格式</title>
      <link href="post/5143/"/>
      <url>post/5143/</url>
      
        <content type="html"><![CDATA[<p>最近受疫情的影响，还没有开学😭。很多学校都实行了网络教学，我们学校也不例外。由于老师的工作比较繁忙，我作为老师的助教帮忙批改一下作业。这段时间学生交的电子版作业格式五花八门，有图片格式(png, jpg, jpeg)、word格式(doc, docx)、PDF格式。PDF格式最方便批改，在iPad上配上笔和实体批改作业基本没什么两样。所以我就想是否可以把它们都转换成统一的PDF格式，但是学生数量一多，手动去转就会十分的麻烦。于是想到用之前学过的Python写个小脚本，把文件夹下的文件都转换成需要的PDF格式。</p><h2 id="1-图片格式转换为PDF格式"><a href="#1-图片格式转换为PDF格式" class="headerlink" title="1. 图片格式转换为PDF格式"></a>1. 图片格式转换为PDF格式</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> PIL <span class="keyword">import</span> Image</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">img2pdf</span>(<span class="params">img_name, pdf_name</span>):</span></span><br><span class="line">    img = Image.<span class="built_in">open</span>(img_name)</span><br><span class="line">    <span class="keyword">if</span> img.mode == <span class="string">&quot;RGBA&quot;</span>:</span><br><span class="line">        img = img.convert(<span class="string">&#x27;RGB&#x27;</span>)</span><br><span class="line">    img.save(pdf_name, <span class="string">&quot;PDF&quot;</span>, resolution=<span class="number">100.0</span>, save_all=<span class="literal">True</span>)</span><br><span class="line">    print(<span class="string">&quot;输出文件名称：&quot;</span>, pdf_name)</span><br><span class="line">    <span class="comment"># 创建好pdf文件，删除文件夹中的img文件</span></span><br><span class="line">    os.remove(img_name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    path = <span class="built_in">input</span>(<span class="string">&quot;请输入文件夹路径：&quot;</span>)</span><br><span class="line">    file_list = os.listdir(path)</span><br><span class="line">    <span class="keyword">for</span> img_path <span class="keyword">in</span> file_list:</span><br><span class="line">        img_name = path + <span class="string">&quot;\\&quot;</span> + img_path</span><br><span class="line">        pdf_name = path + <span class="string">&quot;\\&quot;</span> + img_path.split(<span class="string">&quot;.&quot;</span>)[<span class="number">0</span>] + <span class="string">&quot;.pdf&quot;</span></span><br><span class="line"></span><br><span class="line">        print(img_name)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;jpg&quot;</span> <span class="keyword">in</span> img_name <span class="keyword">or</span> <span class="string">&quot;png&quot;</span> <span class="keyword">in</span> img_name <span class="keyword">or</span> <span class="string">&quot;jpeg&quot;</span> <span class="keyword">in</span> img_name:</span><br><span class="line">            img2pdf(img_name, pdf_name)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br></pre></td></tr></table></figure><h2 id="2-word格式转换为PDF格式"><a href="#2-word格式转换为PDF格式" class="headerlink" title="2. word格式转换为PDF格式"></a>2. word格式转换为PDF格式</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> comtypes.client</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">d2p</span>(<span class="params">doc_name, pdf_name</span>):</span></span><br><span class="line">in_file = doc_name</span><br><span class="line">out_file = pdf_name</span><br><span class="line"><span class="comment"># create COM object</span></span><br><span class="line">word = comtypes.client.CreateObject(<span class="string">&#x27;Word.Application&#x27;</span>)</span><br><span class="line">doc = word.Documents.Open(in_file)</span><br><span class="line">doc.SaveAs(out_file,FileFormat=<span class="number">17</span>)</span><br><span class="line">doc.Close()</span><br><span class="line">word.Quit()</span><br><span class="line"><span class="comment"># 创建好pdf文件，删除文件夹中的word文件</span></span><br><span class="line">os.remove(doc_name)</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    file_path = <span class="built_in">input</span>(<span class="string">&quot;请输入文件夹路径：&quot;</span>)</span><br><span class="line">    file_list = os.listdir(file_path)</span><br><span class="line">    <span class="keyword">for</span> word_path <span class="keyword">in</span> file_list:</span><br><span class="line">        doc_name = file_path + <span class="string">&quot;\\&quot;</span> + word_path</span><br><span class="line">        pdf_name = file_path + <span class="string">&quot;\\&quot;</span> + word_path.split(<span class="string">&quot;.&quot;</span>)[<span class="number">0</span>]+<span class="string">&quot;.pdf&quot;</span></span><br><span class="line">        </span><br><span class="line">        print(doc_name)</span><br><span class="line">        <span class="comment"># 判断文件名后缀是否是docx或doc</span></span><br><span class="line">        <span class="keyword">if</span> word_path.split(<span class="string">&quot;.&quot;</span>)[<span class="number">-1</span>] == <span class="string">&quot;docx&quot;</span> <span class="keyword">or</span> word_path.split(<span class="string">&quot;.&quot;</span>)[<span class="number">-1</span>] == <span class="string">&quot;doc&quot;</span>:</span><br><span class="line">            d2p(doc_name,pdf_name)</span><br><span class="line">            print(pdf_name)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">continue</span></span><br></pre></td></tr></table></figure><h2 id="3-操作步骤"><a href="#3-操作步骤" class="headerlink" title="3. 操作步骤"></a>3. 操作步骤</h2><ol><li>将上面的代码分别存储在word2pdf.py和img2pdf.py文件中(这里我存在了两个脚本中，也可以稍微修改代码保存在一个脚本文件中)</li><li>Windows系统中，在脚本所在的目录下，按住shift键点击鼠标右键，打开PowerShell<br><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/powershell.png" alt=""></li><li>输入<code>py word2pdf.py</code>，敲回车<br><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/word2pdf01.png" alt=""></li><li>将需要转换格式的文件拷贝到一个新的文件夹中（由于我设置的是转换完成后删除原文件，所以建议拷贝在新文件夹中进行，防止原文件丢失🤗），在PowerShell中输入新文件夹的路径，敲回车。<br><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/word2pdf02.png" alt=""></li><li>发现文件夹中的文件不到5秒中就全部转换成PDF格式啦~大功告成！</li></ol><h2 id="3-总结"><a href="#3-总结" class="headerlink" title="3. 总结"></a>3. 总结</h2><ul><li>Python的书写格式中缩进十分重要，要么使用Tab制表键进行缩进，要么使用四个空格进行缩进，不能混合使用，否则会报错。。。（还是Java好😂）</li></ul>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
          <category> 小工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 自动化办公 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端学习-CSS</title>
      <link href="post/52eb/"/>
      <url>post/52eb/</url>
      
        <content type="html"><![CDATA[<p>如果说HTML专注与内容，那么CSS就是网页的样式集合。这是一种分层设计的思想。</p><h2 id="1-语法"><a href="#1-语法" class="headerlink" title="1. 语法"></a>1. 语法</h2><p>selector {property: value;}<br>即选择器 {属性：值}(代码放在style标签里)</p><p>学习CSS即学习有哪些选择器，哪些属性以及可以使用什么样的值。</p><p>当CSS中要调整的格式太多时，把CSS写在HTML中就比较臃肿而且不易管理了。将它独立成CSS文件，就不用将它装进style标签里了。</p><h2 id="2-练习01"><a href="#2-练习01" class="headerlink" title="2. 练习01"></a>2. 练习01</h2><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/Practice01.png" alt=""></p><p>CSS代码<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 设置默认格式：14像素，灰色，占据空间的50% */</span></span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">14px</span>;</span><br><span class="line">    <span class="attribute">color</span>: gray;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置边框属性：下边框1ps，实线，粉色 */</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.border</span> &#123;</span><br><span class="line">    <span class="attribute">border-bottom</span>: <span class="number">1px</span> solid pink;</span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">12px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置标题属性：16px，加粗，绿色 */</span></span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.title</span> &#123;</span><br><span class="line">    <span class="attribute">font</span>: normal bold <span class="number">16px</span> <span class="string">&quot;default&quot;</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#B0D0A0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 向左浮动 */</span></span><br><span class="line"><span class="selector-class">.fl</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 向右浮动 */</span></span><br><span class="line"><span class="selector-class">.fr</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置头像属性：向左浮动，外边框向右10px，高300px */</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.leftblock</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置头像下方背景：内边距5px */</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.background_img</span> &#123;</span><br><span class="line">    <span class="attribute">background-image</span>: <span class="built_in">url</span>(<span class="number">5</span>.png);</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置超链属性：无下划线，蓝色，内边框左侧10px */</span></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">text-decoration</span>: none;</span><br><span class="line">    <span class="attribute">color</span>: skyblue;</span><br><span class="line">    <span class="attribute">padding-left</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置文字属性：10像素，红色 */</span></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-class">.p1</span> &#123;</span><br><span class="line">    <span class="attribute">font</span>: normal <span class="number">10px</span> <span class="string">&quot;default&quot;</span>;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置文字属性：加粗，14像素，蓝色 */</span></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-class">.p2</span> &#123;</span><br><span class="line">    <span class="attribute">font</span>: normal bold <span class="number">14px</span> <span class="string">&quot;default&quot;</span>;</span><br><span class="line">    <span class="attribute">color</span>: lightskyblue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>HTML代码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html&quot;</span>; <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;style.css&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;border&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;1.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-right: 10px;&quot;</span>&gt;</span>最新动态</span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;fr&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;2.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-right: 10px;&quot;</span>&gt;</span>设置</span><br><span class="line">            <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;border&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;leftblock&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;4.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;fl&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;background_img&quot;</span>&gt;</span>6551<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;3.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;fr&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;p1&quot;</span>&gt;</span>热门回答，来自 机械 <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>关注话题<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;p2&quot;</span>&gt;</span>人类史上令人叹为观止的极限精度制造成果有哪些？<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>Vincent Fu，<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>Materials Science，PhD<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;6.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;fl&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-right: 10px;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">                    说到精度，就不得不在材料学中最重要的一个方面：表征。该项研究一种材料性能，</span><br><span class="line">                    握在手里把玩是远远不够的，就算你拿出放大镜离近了看，也只能看到表面的一些</span><br><span class="line">                    坑坑洼洼，而为了知晓一种材料的纤维结构，科学家至少要下到纳米级（放大千倍），</span><br><span class="line">                    如果要获得更深... <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>显示全部<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">br</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;p1&quot;</span> <span class="attr">style</span>=<span class="string">&quot;color: lightGray;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;7.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span>关注问题<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;8.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span>867条评论<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;9.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span>&gt;</span>作者保留权利<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p><ol><li><code>&lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot; type=&quot;text/css&quot;&gt;</code>关联同路径下的CSS文件</li><li>设置默认格式 body {property: value;}</li><li>需要设置格式的地方定义好class，设置对应的格式</li><li>border-bottom 底部边框 宽度(像素表示) 样式(solid dotted dashed double)</li><li>font 字体格式 大小 风格 字体 字库 ex: font: normal(非斜体) bold(加粗) 15px(大小) “default”(字库); (<strong>记得按顺序</strong>)</li><li>float 浮动 文字、图片移动到域的最左边或最右边，可以利用它实现文字围绕图片的效果。</li><li>color 颜色 16进制颜色</li><li>text-decoration 文本修饰 overline(上划线) line-through(删除线) underline(下划线) none(无)</li><li>background-img: url(图片路径) 设置图片为背景。</li><li>盒子模型</li></ol><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E7%9B%92%E5%AD%90%E6%A8%A1%E5%9E%8B.png" alt=""></p><p>整个元素的总宽度应该是width + padding <em> 2 + border </em> 2 +margin * 2，高度同理</p><h2 id="2-练习02"><a href="#2-练习02" class="headerlink" title="2. 练习02"></a>2. 练习02</h2><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/Practice02.png" alt=""></p><p><strong>分层设计的思想十分重要！每一个区域都可以单独成一个元素，元素的嵌套就构成了复杂的网页结构。</strong></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 设置默认格式：背景颜色棕色 */</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.fond</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#333333</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">800px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">550px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 设置黑色背景 */</span></span><br><span class="line"><span class="selector-class">.background_dark</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#11141B</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fl</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.fr</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: right;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.boldwhite</span> &#123;</span><br><span class="line">    <span class="attribute">font-style</span>: bold;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">15px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.white</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">color</span>: white;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">5px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.gold</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#FF9100</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.gold1</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">color</span>: <span class="number">#FF9100</span>;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">span</span><span class="selector-class">.option</span> &#123;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.border</span> &#123;</span><br><span class="line">    <span class="attribute">border-top-style</span>: dashed;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#666666</span>;</span><br><span class="line">    <span class="attribute">border-width</span>: <span class="number">1</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">padding-top</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.image</span> &#123;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#666666</span>;</span><br><span class="line">    <span class="attribute">border-style</span>: solid;</span><br><span class="line">    <span class="attribute">border-width</span>: thin;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html&quot;</span>; <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;style.css&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;fond&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;background_dark fl&quot;</span> <span class="attr">style</span>=<span class="string">&quot;padding-bottom:10px;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;boldwhite&quot;</span>&gt;</span>英雄资料<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: 10px;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;white&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 坦克 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 法师 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 刺客 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: 10px;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;white&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 辅助 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 新手 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 近战 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: 10px;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;white&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 远程 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 推进 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 打野 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: 10px;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;white&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 后期 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 潜行 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 战士 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                </span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: 15px;margin-top: 15px;&quot;</span>&gt;</span>英雄价格：<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;border&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: 10px;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;white&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 6300 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 4800 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 3150 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: 10px;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;white&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 1350 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 450 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;boldwhite&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 20px;margin-bottom: 20px;&quot;</span>&gt;</span>物品资料<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: 10px;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;white&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 生命值 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: -10px&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 攻击速度 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: -20px&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 护甲穿透 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: 10px;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;white&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 暴击 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 法术穿透 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: -20px&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 魔法抗性 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: 10px;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;white&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 法术伤害 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: -20px&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 物理伤害 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: -20px&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 消耗品 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: 10px;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;white&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 韧性 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 法力值 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: -10px&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 生命偷取 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: 10px;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;white&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 冷却缩减 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: -20px&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 生命回复 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: -20px&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 附魔 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: 10px;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;white&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 法力回复 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: -20px&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 法术吸血 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: -20px&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 移动速度 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;margin-left: 10px;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;white&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;option&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;checkbox&quot;</span>&gt;</span> 护甲值 <span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span> </span><br><span class="line"></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;boldwhite&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 25px;margin-bottom: 25px;&quot;</span>&gt;</span>符文资料<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">table</span> <span class="attr">class</span>=<span class="string">&quot;background_dark&quot;</span> <span class="attr">align</span>=<span class="string">&quot;right&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-right: 5px;&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 8px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;0.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 8px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;1.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 8px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;2.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 8px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;3.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 8px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;4.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 8px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;5.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 8px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;6.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> &gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>牛头酋长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>阿里斯塔<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>牛头酋长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>阿利斯塔<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>牛头酋长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>阿利斯塔<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>牛头酋长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>阿利斯塔<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>牛头酋长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>阿利斯塔<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>牛头酋长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>阿利斯塔<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>牛头酋长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>阿利斯塔<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span> <span class="attr">style</span>=<span class="string">&quot;margin: 10px;&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 8px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;7.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 8px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;8.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 8px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;9.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 8px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;10.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 8px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;11.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 8px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;12.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 8px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;13.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> &gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>牛头酋长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>阿里斯塔<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>牛头酋长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>阿利斯塔<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>牛头酋长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>阿利斯塔<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>牛头酋长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>阿利斯塔<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>牛头酋长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>阿利斯塔<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>牛头酋长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>阿利斯塔<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>牛头酋长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>阿利斯塔<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 8px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;14.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 8px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;15.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 8px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;16.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 8px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;17.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 8px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;18.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 8px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;19.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 8px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;20.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> &gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>牛头酋长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>阿里斯塔<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>牛头酋长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>阿利斯塔<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>牛头酋长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>阿利斯塔<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>牛头酋长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>阿利斯塔<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>牛头酋长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>阿利斯塔<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>牛头酋长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>阿利斯塔<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>牛头酋长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>阿利斯塔<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 8px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;21.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 8px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;22.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 8px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;23.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 8px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;24.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 8px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;25.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 8px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;26.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 8px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;27.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> &gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>牛头酋长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>阿里斯塔<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>牛头酋长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>阿利斯塔<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>牛头酋长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>阿利斯塔<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>牛头酋长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>阿利斯塔<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>牛头酋长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>阿利斯塔<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>牛头酋长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>阿利斯塔<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>牛头酋长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>阿利斯塔<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 8px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;28.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 8px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;29.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 8px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;30.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 8px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;31.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 8px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;32.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 8px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;33.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> <span class="attr">style</span>=<span class="string">&quot;padding: 8px;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;34.jpg&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> <span class="attr">class</span>=<span class="string">&quot;image&quot;</span> <span class="attr">width</span>=<span class="string">&quot;60&quot;</span> <span class="attr">height</span>=<span class="string">&quot;60&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span> &gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>牛头酋长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>阿里斯塔<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>牛头酋长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>阿利斯塔<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>牛头酋长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>阿利斯塔<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>牛头酋长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>阿利斯塔<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>牛头酋长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>阿利斯塔<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>牛头酋长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>阿利斯塔<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>牛头酋长<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;gold1&quot;</span>&gt;</span>阿利斯塔<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">            </span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p>设置整个网页背景颜色遇到的问题。表格字间距的问题。</p><ol><li>在设置整个网页背景颜色时，如果定义在body标签中，那么背景颜色始终都充满整个页面，调整宽度和高度也无效；需要重新设定class，设置宽度、高度和背景颜色。</li><li>设定表格字间距时，不用设置padding。。。当时复制的太high了，找这个错误找了很久😭（可以将两种格式单独提取到css文件中方便调用和管理。）</li></ol><h2 id="3-练习03"><a href="#3-练习03" class="headerlink" title="3. 练习03"></a>3. 练习03</h2><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/Practice03.png" alt=""></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 设置布局属性：居中 宽度 高度 */</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.layout</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">700px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">600px</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">20px</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.border</span> &#123;</span><br><span class="line">    <span class="attribute">border-color</span>: lightblue;</span><br><span class="line">    <span class="attribute">border-width</span>: <span class="number">2px</span>;</span><br><span class="line">    <span class="attribute">border-style</span>: solid;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">610px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">480px</span>;</span><br><span class="line">    <span class="attribute">padding-bottom</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.title</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: lightblue;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">color</span>: steelblue;</span><br><span class="line">    <span class="attribute">text-align</span>: left;</span><br><span class="line">    <span class="attribute">font-weight</span>: bold;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.p</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">letter-spacing</span>: <span class="number">1px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.red</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">12px</span>;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">    <span class="attribute">letter-spacing</span>: <span class="number">1px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">input</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: ghostwhite;</span><br><span class="line">    <span class="attribute">color</span>: lightgray;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">120px</span>;</span><br><span class="line">    <span class="attribute">margin-top</span>: <span class="number">2px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>: <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.one</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">20%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.two</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">20%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.thr</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">60%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">table</span>&#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">border-bottom</span>:<span class="number">2px</span> solid lightcyan;</span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">1px</span>;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">1px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">td</span>&#123;</span><br><span class="line">    <span class="attribute">height</span>:<span class="number">90px</span>;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">margin</span>:<span class="number">2px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">a</span> &#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">11px</span>;</span><br><span class="line">    <span class="attribute">letter-spacing</span>: <span class="number">1.5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">td</span><span class="selector-class">.background</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: whitesmoke;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">330px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html&quot;</span>; <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;style.css&quot;</span> <span class="attr">type</span>=<span class="string">&quot;text/css&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;layout&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 8px;margin-bottom: 2px;&quot;</span>&gt;</span>请注意：带有“*”的项目必须填写<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;border&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span>填写您的用户名：<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;one&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span>*<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;p&quot;</span>&gt;</span>通行证用户名：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;two&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">value</span>=<span class="string">&quot;请输入用户名&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">div</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>查看用户名是否被占用<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;thr background p&quot;</span>&gt;</span></span><br><span class="line">                            用户名由a~z的英文字母（不区分大小写）、0~9的数字、<span class="tag">&lt;<span class="name">strong</span>&gt;</span>点、减号<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>或<span class="tag">&lt;<span class="name">strong</span>&gt;</span>下划线<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>组成，长度为3~18个字符，只能以数字或者字母开头和结尾，例如：kyzy_001.</span><br><span class="line">                        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;title&quot;</span>&gt;</span></span><br><span class="line">                    请填写安全设置： <span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span>=<span class="string">&quot;font-size: small;font-weight: normal;&quot;</span>&gt;</span>（安全设置用于验证账号和找回密码）<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span> <span class="attr">style</span>=<span class="string">&quot;margin-top: 10px;&quot;</span>&gt;</span>以下信息对保证您账号的安全极为重要，请您务必认真填写.<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;one&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span>*<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;p&quot;</span>&gt;</span>输入登录密码：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span>*<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;p&quot;</span>&gt;</span>登录密码确认：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;two&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;thr background p&quot;</span>&gt;</span></span><br><span class="line">                            密码长度为6~16位，区分字母大小写，登录密码可以由字母、数字、特殊字符组成.【<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>更多说明<span class="tag">&lt;/<span class="name">a</span>&gt;</span>】</span><br><span class="line">                        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;one&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span>*<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;p&quot;</span>&gt;</span>密码提示问题：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span>*<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;p&quot;</span>&gt;</span>密码提示答案：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;two&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;thr background p&quot;</span>&gt;</span></span><br><span class="line">                            当您忘记密码时可以由找回密码.例如，问题是“我的哥哥是谁”，答案为“peter2”.问题长度<span class="tag">&lt;<span class="name">strong</span>&gt;</span>不大于36<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>个字符，一个汉字占两个字符，答案长度在6~30位之间，区分大小写.【<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>更多说明<span class="tag">&lt;/<span class="name">a</span>&gt;</span>】</span><br><span class="line">                        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;one&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span>*<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;p&quot;</span>&gt;</span>输入安全码：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span>*<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;p&quot;</span>&gt;</span>安全码确认：<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;two&quot;</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">                            <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">td</span> <span class="attr">class</span>=<span class="string">&quot;thr background p&quot;</span>&gt;</span></span><br><span class="line">                            安全码是您找回密码的重要途径，安全码长度为6~16位，区分字母大小写，由字母，数字特殊字符组成. <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">&quot;red&quot;</span>&gt;</span>特别提醒：安全码一旦设定，将不可自行修改.<span class="tag">&lt;/<span class="name">span</span>&gt;</span> 【<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span>&gt;</span>更多说明<span class="tag">&lt;/<span class="name">a</span>&gt;</span>】</span><br><span class="line">                        <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">center</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">style</span>=<span class="string">&quot;margin:10px;&quot;</span> <span class="attr">type</span>=<span class="string">&quot;button&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提 交 表 单&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">center</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>center标签居中元素。</li></ol><h2 id="4-参考"><a href="#4-参考" class="headerlink" title="4. 参考"></a>4. 参考</h2><ul><li><a href="https://how2j.cn/k/css2/css2-tutorial/238.html">HOW2J.CN</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端学习-HTML</title>
      <link href="post/ffa9/"/>
      <url>post/ffa9/</url>
      
        <content type="html"><![CDATA[<p><a href="https://baike.baidu.com/item/html">HTML</a>(Hyper Text Marked Language)称为超文本标记语言，是一种标识性的语言。它包括一系列标签．通过这些标签可以将网络上的文档格式统一，使分散的Internet资源连接为一个逻辑整体。HTML文本是由HTML命令组成的描述性文本，HTML命令可以说明文字，图形、动画、声音、表格、链接等。</p><h2 id="1-HTML文本"><a href="#1-HTML文本" class="headerlink" title="1. HTML文本"></a>1. HTML文本</h2><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E7%BB%83%E4%B9%A001.png" alt=""></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html&quot;</span>; <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>英雄联盟（电子竞技类游戏）<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">strong</span>&gt;</span>《英雄联盟》<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>（简称lol）是由美国<span class="tag">&lt;<span class="name">i</span>&gt;</span>Riot Games<span class="tag">&lt;/<span class="name">i</span>&gt;</span>开发，</span><br><span class="line">            中国大陆地区由腾讯游戏运营的网络游戏。</span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">strong</span>&gt;</span>《英雄联盟》<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>除了即时战略、团队作战外，还拥有一百多位特色各异的英雄、</span><br><span class="line">            丰富的地图及玩法、自动匹配的战网平台，包括天赋树、召唤师系统、符文等元素。[<span class="tag">&lt;<span class="name">ins</span>&gt;</span>1<span class="tag">&lt;/<span class="name">ins</span>&gt;</span>]</span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span></span><br><span class="line">            2016年1月，根据官方数据显示，LOL全球最高同时在线已突破<span class="tag">&lt;<span class="name">del</span>&gt;</span>750<span class="tag">&lt;/<span class="name">del</span>&gt;</span> 900万，全球日活跃高达</span><br><span class="line">            2700万，全球月活跃已达6700万，注册用户亿计，LOL已经成为当今世界最具人气和影响力的网络游戏之一。</span><br><span class="line">            [<span class="tag">&lt;<span class="name">ins</span>&gt;</span>2<span class="tag">&lt;/<span class="name">ins</span>&gt;</span>]</span><br><span class="line">        <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>一个html网页的结构应该包括html标签 head标签和body标签</li><li>head标签中<meta http-equiv="Content-Type" content="text/html"; charset="utf-8">语句解决中文编码问题。</li><li>h1, h2, h3, h4标签代表不同大小的标题，其中h1最大。</li><li>p(paragraph)标签表示段落，会空一行。</li><li>strong标签——加粗</li><li>i标签——斜体</li><li>ins标签——下划线</li><li>del标签——删除效果</li></ol><h2 id="2-HTML非文本元素"><a href="#2-HTML非文本元素" class="headerlink" title="2. HTML非文本元素"></a>2. HTML非文本元素</h2><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E7%BB%83%E4%B9%A002.png" alt=""></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html&quot;</span>; <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>英雄技能<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span> <span class="attr">border</span>=<span class="string">&quot;1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span> <span class="attr">bgcolor</span>=<span class="string">&quot;#ccc&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">&quot;120&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>技能名<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">&quot;48&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>触发<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">&quot;105&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>技能属性<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">&quot;445&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>技能效果<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">width</span>=<span class="string">&quot;65&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>图标<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>坚韧<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>被动<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">colspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span></span><br><span class="line">                盖伦如果在9秒内不受到任何伤害，之后的每秒都会回复自己最大生命值的0.4%。</span><br><span class="line">                小兵的伤害不会中断坚韧效果。</span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./images/skill1.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>致残打击<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>Q<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>冷却时间：8<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                盖伦移除身上的所有减速效果，并获得30%移动速度加成，持续1.5/2/2.5/3/3.5秒。<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">                在接下来的4.5秒内，他的下次普通攻击会造成30/55/80/105/130(+1.4AD)物理伤害，并沉默目标1.5秒。</span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./images/skill2.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>勇气<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>W<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>冷却：24/33/22/21/20<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">strong</span>&gt;</span>被动：<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>击杀一个单位会永久提供0.25护甲和魔法抗性加成，最大值：30 <span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">strong</span>&gt;</span>主动：<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>盖伦获得一个持续2/3/4/5/6秒的防御护盾，减少即将到来的30%伤害。</span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./images/skill3.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>审判<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>E<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>冷却：9<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                盖伦快速地旋舞大剑，持续3秒，在持续期间对周围敌人总共造成物理伤害——14/18/22/26/30</span><br><span class="line">                加上他总攻击力的34/35/36/37/38%，5次(英雄每升3级加1次)。<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">                E【审判】会在攻击单个敌人时造成33%额外伤害。<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">                取消E【审判】会返还相当于剩余持续时长的冷却时间。<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">                E【审判】可以暴击，并造成额外伤害。</span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./images/skill4.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>德玛西亚正义<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">strong</span>&gt;</span>R<span class="tag">&lt;/<span class="name">strong</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span>冷却：120/100/80<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">strong</span>&gt;</span>被动：<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>最近获得最多击杀数的敌人会成为<span class="tag">&lt;<span class="name">strong</span>&gt;</span>大反派<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>。</span><br><span class="line">                盖伦的E【审判】和普攻会对<span class="tag">&lt;<span class="name">strong</span>&gt;</span>大反派<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>造成额外真实伤害，</span><br><span class="line">                伤害值为<span class="tag">&lt;<span class="name">strong</span>&gt;</span>大反派<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>1%的最大生命值。<span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">strong</span>&gt;</span>主动：<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>盖伦召唤德玛西亚之力，试图斩杀一名敌方英雄，目标损失的生命越多，</span><br><span class="line">                则此技能造成的伤害越高。造成175/350/525魔法伤害加上目标已损失生命值的28/33/40%。</span><br><span class="line">                对<span class="tag">&lt;<span class="name">strong</span>&gt;</span>大反派<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>造成真实伤害。</span><br><span class="line">            <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;./images/skill5.png&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>table标签表示在html中插入表格，tr(table row)表示行元素，td(table data)表示列元素，一个tr中有两个td表示一行两列。<ul><li>bgcolor属性——单元背景颜色(#RGB 16进制表示)</li><li>border——是否有边框以及边框宽度</li><li>align——内容按什么位置对齐(left center right 更细化的还有margin-left: 50px等) </li><li>width——单元宽度</li><li>height——单元高度</li><li>colspan——合并列单元格</li><li>rowspan——合并行单元格</li></ul></li><li><code>&lt;br /&gt;</code>换行标签</li><li>img标签表示插入图片，在src属性中填入图片的相对路径，width和height设置图片尺寸，alt属性有值时，当图片无法显示，即显示alt的值。<strong>.表示当前目录 ..表示上级目录</strong></li></ol><h2 id="3-HTML表单元素"><a href="#3-HTML表单元素" class="headerlink" title="3. HTML表单元素"></a>3. HTML表单元素</h2><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E7%BB%83%E4%B9%A003.png" alt=""></p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">&quot;Content-Type&quot;</span> <span class="attr">content</span>=<span class="string">&quot;text/html&quot;</span>; <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">table</span> <span class="attr">align</span>=<span class="string">&quot;center&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;#F00&quot;</span>&gt;</span>*<span class="tag">&lt;/<span class="name">font</span>&gt;</span>用户名：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;#F00&quot;</span>&gt;</span>用户名不得小于三个字符<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;#F00&quot;</span>&gt;</span>*<span class="tag">&lt;/<span class="name">font</span>&gt;</span>密码：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;#F00&quot;</span>&gt;</span>*<span class="tag">&lt;/<span class="name">font</span>&gt;</span>确认密码：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;password&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;#F00&quot;</span>&gt;</span>*<span class="tag">&lt;/<span class="name">font</span>&gt;</span>Email：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;email&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;#F00&quot;</span>&gt;</span>*<span class="tag">&lt;/<span class="name">font</span>&gt;</span>真实姓名：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;#F00&quot;</span>&gt;</span>*<span class="tag">&lt;/<span class="name">font</span>&gt;</span>性别：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;man&quot;</span>&gt;</span>男<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;woman&quot;</span>&gt;</span>女<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;#F00&quot;</span>&gt;</span>*<span class="tag">&lt;/<span class="name">font</span>&gt;</span>生日：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>1990<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>1991<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>1992<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>1993<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>1994<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>1995<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>1996<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>1997<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>1998<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>1999<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>6<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>7<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>8<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>9<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>10<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>11<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>12<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">select</span> <span class="attr">name</span>=<span class="string">&quot;&quot;</span> <span class="attr">id</span>=<span class="string">&quot;&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>1<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>2<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>3<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>4<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>5<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>6<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>7<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>8<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>9<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>10<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>11<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>12<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;#F00&quot;</span>&gt;</span>*<span class="tag">&lt;/<span class="name">font</span>&gt;</span>手机：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;#F00&quot;</span>&gt;</span>*<span class="tag">&lt;/<span class="name">font</span>&gt;</span>居住地：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>陕西省<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>广东省<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>西安市<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>广州市<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>雁塔区<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>碑林区<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>西影路<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">&quot;&quot;</span>&gt;</span>环城路<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span> <span class="attr">rowspan</span>=<span class="string">&quot;2&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;#F00&quot;</span>&gt;</span>*<span class="tag">&lt;/<span class="name">font</span>&gt;</span>QQ：<span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">&quot;#00F&quot;</span>&gt;</span>设置我的QQ在线状态<span class="tag">&lt;/<span class="name">font</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><ol><li>input标签在网页中插入输入框<ul><li>type=text——文本输入框</li><li>type=password——密码输入框(会遮盖密码)</li></ul></li><li>select标签添加下拉选择框，option添加选项</li><li>div和span标签用于布局，其中div会自动换行，span不会。</li><li>font标签设置字体格式（字体，颜色，大小）</li><li><p>form标签用于提交表单，向服务器提交数据。method属性有get和post两种方式。</p><pre><code> 区别：     - get是form默认的提交方式     如果通过一个超链访问某个地址，是get方式     如果在地址栏直接输入某个地址，是get方式     提交数据会在浏览器显示出来     不可以用于提交二进制数据，比如上传文件     - post必须在form上通过 method=&quot;post&quot; 显示指定提交数据不会在浏览器显示出来     可以用于提交二进制数据，比如上传文件</code></pre></li></ol><h2 id="4-参考"><a href="#4-参考" class="headerlink" title="4. 参考"></a>4. 参考</h2><ul><li><a href="https://how2j.cn/k/html/html-tutorial/175.html">HOW2J.CN</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
          <category> HTML </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习笔记-IO</title>
      <link href="post/d7ed/"/>
      <url>post/d7ed/</url>
      
        <content type="html"><![CDATA[<h2 id="1-I-O-文件对象"><a href="#1-I-O-文件对象" class="headerlink" title="1. I/O 文件对象"></a>1. I/O 文件对象</h2><p>文件和文件夹都是用File代表。</p><p>使用File类根据绝对路径或相对路径创建File对象。</p><div class="table-container"><table><thead><tr><th>方法</th><th>简介</th></tr></thead><tbody><tr><td>exists</td><td>文件是否存在</td></tr><tr><td>isDirectory</td><td>是否是文件夹</td></tr><tr><td>isFile</td><td>是否是文件</td></tr><tr><td>length</td><td>文件长度</td></tr><tr><td>lastModified</td><td>文件最后修改时间</td></tr><tr><td>setLastModified</td><td>设置文件修改时间</td></tr><tr><td>renameTo</td><td>重命名</td></tr><tr><td>list</td><td>以字符串数组的形式，返回当前文件夹下所有文件</td></tr><tr><td>listFiles</td><td>以文件数组的形式，返回当前文件夹下所有文件（可以返回文件夹，不能返回子文件夹下的文件）</td></tr><tr><td>getParent</td><td>以字符串形式返回获取所在文件夹</td></tr><tr><td>getParentFile</td><td>以文件形式返回获取所在文件夹</td></tr><tr><td>mkdir</td><td>创建文件夹，如果父文件夹不存在，创建无效</td></tr><tr><td>mkdirs</td><td>创建文件夹，如果父文件夹不存在，会创建父文件夹</td></tr><tr><td>createNewFile</td><td>创建一个空文件，如果父文件夹不存在，会抛出异常</td></tr><tr><td>listRoots</td><td>列出所有盘符</td></tr><tr><td>delete</td><td>删除文件</td></tr><tr><td>deleteOnExit</td><td>JVM结束的时候，删除文件，常用于临时文件的删除。</td></tr></tbody></table></div><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">package io.demo01;</span><br><span class="line"></span><br><span class="line">import java.io.File;</span><br><span class="line"></span><br><span class="line">public class Practice02 &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        &#x2F;&#x2F; 遍历文件夹下的所有内容，包括子文件夹。</span><br><span class="line">        File file &#x3D; new File(&quot;D:\\Media&quot;);</span><br><span class="line">        goThroughDirectory(file);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void goThroughDirectory(File file) &#123;</span><br><span class="line">        if (file.isDirectory()) &#123;</span><br><span class="line">            File[] files &#x3D; file.listFiles();</span><br><span class="line">            for (File file1 : files) &#123;</span><br><span class="line">                goThroughDirectory(file1);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            System.out.printf(&quot;文件路径：%s，文件大小：%d&quot;, file.getAbsolutePath(), file.length());</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="2-什么是流？"><a href="#2-什么是流？" class="headerlink" title="2. 什么是流？"></a>2. 什么是流？</h2><p>什么是流(Stream)，流就是一系列的数据。当不同的介质之间有数据交互的时候，Java就使用流来实现。数据源可以是文件，还可以是数据库，网络甚至是其它的程序。</p><p>比如读取文件的数据到程序中，站在程序的角度来看，就叫做输入流。</p><p>输入流：InputStream<br>输出流：OutputStream</p><h2 id="3-字节流"><a href="#3-字节流" class="headerlink" title="3. 字节流"></a>3. 字节流</h2><p>InputStream 字节输入流<br>OutputStream 字节输出流<br>用于以字节的形式读取和写入数据。</p><h3 id="3-1-ASCII码"><a href="#3-1-ASCII码" class="headerlink" title="3.1 ASCII码"></a>3.1 ASCII码</h3><p>所有的数据存放在计算机中都是以数字的形式存放的。所以字母就需要转换为数字才能够存放。比如A就对应的数字65，a对应的数字97。不同的字母和符号对应不同的数字，就是一张码表。ASCII就是这样的一张码表。它只包含简单的英文字母，符号，数字等等。不包含中文，德文，俄语等复杂的。</p><h3 id="3-2-以字节流的形式读取文件内容"><a href="#3-2-以字节流的形式读取文件内容" class="headerlink" title="3.2 以字节流的形式读取文件内容"></a>3.2 以字节流的形式读取文件内容</h3><p>InputStream是字节输入流，同时也是抽象类，只提供方法声明，不提供方法的具体实现。FileInputStream是InputStream的子类，以FileInputStream进行文件读取。</p><p>步骤：</p><ol><li>创建File对象</li><li>创建基于文件的字节输入流</li><li>创建字节数组（长度就是文件长度）</li><li>以字节流的形式读取文件所有内容</li><li>使用完流，应该进行关闭</li></ol><p>写入文件内容类似（FileOutputStream）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">package io.demo03;</span><br><span class="line"></span><br><span class="line">import java.io.File;</span><br><span class="line">import java.io.FileOutputStream;</span><br><span class="line">import java.io.IOException;</span><br><span class="line"></span><br><span class="line">public class Practice01 &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        &#x2F;* 当文件不存在时候，是会自动创建文件的。</span><br><span class="line">           但如果路径当中有文件夹存在时，而文件夹又没有存在时，则会抛出异常。</span><br><span class="line">           怎么自动创建目录呢？</span><br><span class="line"></span><br><span class="line">           判断该文件对象是否存在，若不存在，则getParentFile对象，创建父目录(mkdirs)</span><br><span class="line">         *&#x2F;</span><br><span class="line">        String path &#x3D; &quot;D:\\def\\abc\\lol.txt&quot;;</span><br><span class="line">        writeFile(path);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void writeFile(String path) &#123;</span><br><span class="line">        &#x2F;&#x2F; 1. 创建File对象</span><br><span class="line">        File f &#x3D; new File(path);</span><br><span class="line">        if (!f.exists()) &#123;</span><br><span class="line">            System.out.println(f.getParentFile().mkdirs());</span><br><span class="line">        &#125;</span><br><span class="line">        &#x2F;&#x2F; 2. 创建字节数组</span><br><span class="line">        byte[] bytes &#x3D; &#123;78, 71, 95&#125;;</span><br><span class="line">        try &#123;</span><br><span class="line">            &#x2F;&#x2F; 3. 创建字节输出流</span><br><span class="line">            FileOutputStream fos &#x3D; new FileOutputStream(f);</span><br><span class="line">            &#x2F;&#x2F; 4. 把数据写入到流中</span><br><span class="line">            fos.write(bytes);</span><br><span class="line">            &#x2F;&#x2F; 5. 关闭输出流</span><br><span class="line">            fos.close();</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">package io.demo03;</span><br><span class="line"></span><br><span class="line">import java.io.File;</span><br><span class="line">import java.io.FileInputStream;</span><br><span class="line">import java.io.FileOutputStream;</span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.util.Arrays;</span><br><span class="line"></span><br><span class="line">public class Practice02 &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) throws IOException&#123;</span><br><span class="line">        &#x2F;*</span><br><span class="line">        找到一个大于100k的文件，按照100k为单位，拆分成多个子文件，并且以编号作为文件名结束</span><br><span class="line">         *&#x2F;</span><br><span class="line">        splitFile(&quot;D:\\JDK_API_1_6_zh_CN.chw&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void splitFile(String path) throws IOException &#123;</span><br><span class="line">        File f &#x3D; new File(path);</span><br><span class="line">        FileInputStream fis &#x3D; new FileInputStream(f);</span><br><span class="line">        &#x2F;&#x2F; 创建字节数组</span><br><span class="line">        byte[] bytes &#x3D; new byte[(int) f.length()];</span><br><span class="line">        &#x2F;&#x2F; 读取文件</span><br><span class="line">        fis.read(bytes);</span><br><span class="line">        fis.close();</span><br><span class="line"></span><br><span class="line">        int size &#x3D; 100 * 1024;</span><br><span class="line">        &#x2F;&#x2F; 判断要分割成几个文件</span><br><span class="line">        int sum;</span><br><span class="line">        if (0 &#x3D;&#x3D; bytes.length % size) &#123;</span><br><span class="line">            sum &#x3D; (int) (bytes.length &#x2F; size);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            sum &#x3D; (int) (bytes.length &#x2F; size) + 1;</span><br><span class="line">        &#125;</span><br><span class="line">        for (int i &#x3D; 0; i &lt; sum; i++) &#123;</span><br><span class="line">            String fileName &#x3D; String.format(f.getName() + &quot;-%d&quot;, i + 1);</span><br><span class="line">            File fileSplit &#x3D; new File(fileName);</span><br><span class="line">            FileOutputStream fos &#x3D; new FileOutputStream(fileSplit);</span><br><span class="line">            byte[] eachContent;</span><br><span class="line">            if (i + 1 &lt; sum) &#123;</span><br><span class="line">                &#x2F;&#x2F; 不是最后一个分割文件</span><br><span class="line">                eachContent &#x3D; Arrays.copyOfRange(bytes, i * size, (i + 1) * size);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                &#x2F;&#x2F; 最后一个分割文件</span><br><span class="line">                eachContent &#x3D; Arrays.copyOfRange(bytes, i*size, bytes.length);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            fos.write(eachContent);</span><br><span class="line">            fos.close();</span><br><span class="line"></span><br><span class="line">            System.out.format(&quot;输出子文件：%s，大小是%d字节&quot;,</span><br><span class="line">                    fileSplit.getName(), fileSplit.length());</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">package io.demo03;</span><br><span class="line"></span><br><span class="line">import java.io.*;</span><br><span class="line"></span><br><span class="line">public class Practice03 &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) throws IOException&#123;</span><br><span class="line">        &#x2F;&#x2F; 把上述拆分出来的文件，合并成一个原文件。</span><br><span class="line">        mergeFile(4, &quot;JDK_API_1_6_zh_CN.chw&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void mergeFile(int sum, String fileName) throws IOException &#123;</span><br><span class="line">        File linkFile &#x3D; new File(fileName);</span><br><span class="line">        FileOutputStream fos &#x3D; new FileOutputStream(linkFile);</span><br><span class="line"></span><br><span class="line">        for (int i &#x3D; 0; i &lt; sum; i++) &#123;</span><br><span class="line">            String subFile &#x3D; String.format(fileName + &quot;-%d&quot;, i + 1);</span><br><span class="line">            File f &#x3D; new File(subFile);</span><br><span class="line">            FileInputStream fis &#x3D; new FileInputStream(f);</span><br><span class="line">            byte[] bytes &#x3D; new byte[(int) f.length()];</span><br><span class="line">            fis.read(bytes);</span><br><span class="line">            fis.close();</span><br><span class="line"></span><br><span class="line">            fos.write(bytes);</span><br><span class="line">            fos.flush(); &#x2F;&#x2F; 刷新释放输出流数据</span><br><span class="line">            System.out.printf(&quot;把子文件%s合并到%s&quot;, subFile, fileName);</span><br><span class="line">            System.out.println();</span><br><span class="line">        &#125;</span><br><span class="line">        fos.close();</span><br><span class="line"></span><br><span class="line">        System.out.printf(&quot;合并完成，文件大小为：%d字节&quot;, linkFile.length());</span><br><span class="line">        System.out.println();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-关闭流的方式"><a href="#4-关闭流的方式" class="headerlink" title="4. 关闭流的方式"></a>4. 关闭流的方式</h2><p>所有的流，无论是输入流还是输出流，使用完毕之后，都应该关闭。如果不关闭，会产生对资源占用的浪费。当量比较大的时候，会影响到业务的正常开展。</p><h3 id="4-1-在try中关闭"><a href="#4-1-在try中关闭" class="headerlink" title="4.1 在try中关闭"></a>4.1 在try中关闭</h3><p>在try的作用域中关闭文件输入流。</p><p>弊端：如果文件不存在，或者读取的时候出现问题抛出异常，那么就没有执行关闭流的代码，存在巨大的资源占用隐患。<strong>不推荐使用</strong></p><h3 id="4-2-在finally中关闭"><a href="#4-2-在finally中关闭" class="headerlink" title="4.2 在finally中关闭"></a>4.2 在finally中关闭</h3><p>这是标准的关闭流的方式</p><ol><li>首先把流的引用声明在try外面，如果声明在try里面，其作用域无法抵达finally</li><li>在finally关闭之前，需要先判断流的引用是否为空</li><li>关闭的时候，需要再进行一次try catch处理。</li></ol><p>这是标准的严谨的关闭流的方式，但是比较繁琐，所以写不重要的代码时，一般采用有隐患的try方式，比较简单。</p><h3 id="4-3-使用try-的方式"><a href="#4-3-使用try-的方式" class="headerlink" title="4.3 使用try()的方式"></a>4.3 使用try()的方式</h3><p>把流定义再try()里，try, catch或者finally结束的时候，会自动关闭，这种编写代码的方式叫做try-with-resources，这是从JDK7开始支持的技术。</p><h2 id="5-字符流"><a href="#5-字符流" class="headerlink" title="5. 字符流"></a>5. 字符流</h2><p>Reader 字符输入流<br>Writer 字符输出流</p><p>专门用于字符的形式读取和写入数据</p><h3 id="5-1-使用字符流读取文件"><a href="#5-1-使用字符流读取文件" class="headerlink" title="5.1 使用字符流读取文件"></a>5.1 使用字符流读取文件</h3><p>FileReader是Reader的子类。</p><p>步骤：</p><ol><li>创建File对象</li><li>创建基于File对象的Reader</li><li>创建字符数组，其长度就是文件的长度</li><li>以字符流的形式读取文件所有内容。</li></ol><h3 id="5-2-使用字符流把字符串写入到文件"><a href="#5-2-使用字符流把字符串写入到文件" class="headerlink" title="5.2 使用字符流把字符串写入到文件"></a>5.2 使用字符流把字符串写入到文件</h3><p>同读取文件类似。</p><h2 id="6-中文问题"><a href="#6-中文问题" class="headerlink" title="6. 中文问题"></a>6. 中文问题</h2><h3 id="6-1-编码问题"><a href="#6-1-编码问题" class="headerlink" title="6.1 编码问题"></a>6.1 编码问题</h3><p>计算机存放数据只能存储数字，所有的字符都会被转换为数字。</p><p>ASCII - 数字和西欧字母<br>GBK GB2312 BIG5 - 中文<br>UNICODE - 统一码，万国码</p><p>GB2312 是简体中文，BIG5是繁体中文，GBK同时包含简体和繁体以及日文。<br>UNICODE 包括了所有的文字，无论中文，英文，藏文，法文，世界所有的文字都包含其中</p><h3 id="6-2-UNICODE和UTF"><a href="#6-2-UNICODE和UTF" class="headerlink" title="6.2 UNICODE和UTF"></a>6.2 UNICODE和UTF</h3><p>由于UNICODE要存放所有的数据，每个数字对应4个字节，这样存储数据就会有很大的浪费。比如一篇文章大部分都是英文字母，按照UNICODE编码就会消耗很多存储空间。</p><p>在这种情况下，就出现了UNICODE的各种减肥子编码，比如UTF-8对数字和字母就使用一个字节，而对汉字就使用3个字节，从而达到了减肥还能保证健康的效果。</p><p><strong>Java采用的是UNICODE.</strong></p><h2 id="7-缓存流"><a href="#7-缓存流" class="headerlink" title="7. 缓存流"></a>7. 缓存流</h2><p>以介质是硬盘为例，字节流和字符流的弊端是：在每一次读写的时候，都会访问硬盘。如果读写的频率比较高的时候，其性能表现不佳。</p><p>为了解决以上弊端，采用缓存流。缓存流在读取的时候，会一次性读较多的数据到缓存中，以后每一次的读取，都是在缓存中访问，知道缓存中的数据读取完毕，再到硬盘中读取。</p><p>就好比吃饭，不同缓存就是每吃一口饭都到锅里去铲；用缓存就是先把饭盛到碗里，碗里的吃完了，再到锅里去铲。</p><p>缓存流在写入数据时，会先把数据写入到缓存区，知道缓存区达到一定的量，才把这些数据，一起写入到硬盘中去。按照这种模式，就不会像字节流，字符流那样每写一个字节都访问硬盘，从而减少了IO操作。</p><h3 id="7-1-使用缓存流读取数据"><a href="#7-1-使用缓存流读取数据" class="headerlink" title="7.1 使用缓存流读取数据"></a>7.1 使用缓存流读取数据</h3><p>缓存字符输入流BufferedReader可以一次读取一行数据。</p><p>步骤：</p><ol><li>创建File对象</li><li>创建文件字符流FileReader</li><li>缓存流必须建立在一个存在的流的基础上BufferedReader</li><li>一次读取一行内容。(readLine)</li></ol><h3 id="7-2-使用缓存流写出数据"><a href="#7-2-使用缓存流写出数据" class="headerlink" title="7.2 使用缓存流写出数据"></a>7.2 使用缓存流写出数据</h3><p>缓存字符输出流PrintWriter可以一次写出一行数据。</p><p>类似7.1缓存流读取数据。(println)</p><p><strong>会以覆盖的形式写入。</strong></p><h3 id="7-3-flush"><a href="#7-3-flush" class="headerlink" title="7.3 flush"></a>7.3 flush</h3><p>有的时候，需要立即把数据写入到硬盘，而不是等缓存满了才写出去，这时候就需要用到flush。(强制把缓存中的数据写入硬盘，无论缓存是否已满。)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">package io.demo07;</span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">设计一个方法，用于移除Java文件中的注释（以&#x2F;&#x2F;开头的注释行）</span><br><span class="line"> *&#x2F;</span><br><span class="line"></span><br><span class="line">import java.io.*;</span><br><span class="line"></span><br><span class="line">public class Practice01 &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        File javaFile &#x3D; new File(&quot;D:\\新建文本文档.java&quot;);</span><br><span class="line">        removeComments(javaFile);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void removeComments(File javaFile) &#123;</span><br><span class="line">        StringBuffer stringBuffer &#x3D; new StringBuffer(&quot;&quot;);</span><br><span class="line">        try (FileReader fr &#x3D; new FileReader(javaFile);</span><br><span class="line">             BufferedReader br &#x3D; new BufferedReader(fr)) &#123;</span><br><span class="line">            while (true) &#123;</span><br><span class="line">                String line &#x3D; br.readLine();</span><br><span class="line">                if (null &#x3D;&#x3D; line) &#123;</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">                if (line.startsWith(&quot;&#x2F;&#x2F;&quot;)) &#123;</span><br><span class="line">                    continue;</span><br><span class="line">                &#125;</span><br><span class="line">                stringBuffer.append(line);</span><br><span class="line">                stringBuffer.append(&quot;\n&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        try (FileWriter fw &#x3D; new FileWriter(javaFile);</span><br><span class="line">             PrintWriter pw &#x3D; new PrintWriter(fw)) &#123;</span><br><span class="line">            pw.println(stringBuffer.toString());</span><br><span class="line">            pw.flush();</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(&quot;修改成功&quot;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="8-数据流"><a href="#8-数据流" class="headerlink" title="8. 数据流"></a>8. 数据流</h2><p>DataInputStream 数据输入流<br>DataOutputStream 数据输出流</p><p>使用数据流的writeUTF()和readUTF()可以进行数据的格式化顺序读写。例如可以通过DataOutputStream向文件顺序写入布尔值，整数和字符串。然后再通过DataInputStream顺序读入这些数据。</p><p><strong>要使用DataInputStream读取一个文件，这个文件必须是由DataOutputStream写出的，否则会报错。</strong></p><p><strong>数据流也要建立在其它流之上(字节流)</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">package io.demo08;</span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">要求：</span><br><span class="line">    第一种方式：使用缓存流把两个数字以字符串的形式写到文件里，再用缓存流以字符串的形式读取，最后转换为</span><br><span class="line">               两个数字。</span><br><span class="line">    第二种方式：使用数据流DataOutputStream向文件连续写入两个数字，然后用DataInputStream连续读取两个数字。</span><br><span class="line"> *&#x2F;</span><br><span class="line"></span><br><span class="line">import java.io.*;</span><br><span class="line"></span><br><span class="line">public class Practice01 &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        File file &#x3D; new File(&quot;D:\\a.txt&quot;);</span><br><span class="line">        String str &#x3D; &quot;234@78&quot;;</span><br><span class="line">        writeBuffer(str, file);</span><br><span class="line">        readBuffer(file);</span><br><span class="line"></span><br><span class="line">        File file2 &#x3D; new File(&quot;D:\\b.txt&quot;);</span><br><span class="line">        int[] ints &#x3D; &#123;234, 78&#125;;</span><br><span class="line">        writeDataStream(ints, file2);</span><br><span class="line">        readDataStream(file2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void writeBuffer(String str, File file) &#123;</span><br><span class="line">        try (FileWriter fw &#x3D; new FileWriter(file);</span><br><span class="line">             PrintWriter pw &#x3D; new PrintWriter(fw)) &#123;</span><br><span class="line">            pw.println(str);</span><br><span class="line">            pw.flush();</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void readBuffer(File file) &#123;</span><br><span class="line">        try (FileReader fr &#x3D; new FileReader(file);</span><br><span class="line">             BufferedReader br &#x3D; new BufferedReader(fr)) &#123;</span><br><span class="line">            String str;</span><br><span class="line">            int a &#x3D; 0;</span><br><span class="line">            int b &#x3D; 0;</span><br><span class="line">            while (null !&#x3D; (str &#x3D; br.readLine())) &#123;</span><br><span class="line">                String[] strings &#x3D; str.split(&quot;@&quot;);</span><br><span class="line">                a &#x3D; Integer.parseInt(strings[0]);</span><br><span class="line">                b &#x3D; Integer.parseInt(strings[1]);</span><br><span class="line">            &#125;</span><br><span class="line">            System.out.println(a);</span><br><span class="line">            System.out.println(b);</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void writeDataStream(int[] ints, File file) &#123;</span><br><span class="line">        try (FileOutputStream fos &#x3D; new FileOutputStream(file);</span><br><span class="line">             DataOutputStream dos &#x3D; new DataOutputStream(fos)) &#123;</span><br><span class="line">            for (int anInt : ints) &#123;</span><br><span class="line">                dos.writeInt(anInt);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void readDataStream(File file) &#123;</span><br><span class="line">        try (FileInputStream fis &#x3D; new FileInputStream(file);</span><br><span class="line">             DataInputStream dis &#x3D; new DataInputStream(fis)) &#123;</span><br><span class="line">            for (int i &#x3D; 0; i &lt; 2; i++) &#123;</span><br><span class="line">                System.out.println(dis.readInt());</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="9-对象流"><a href="#9-对象流" class="headerlink" title="9. 对象流"></a>9. 对象流</h2><p>对象流指的是可以直接把一个对象以流的方式传输给其它介质，比如硬盘。一个对象以流的形式进行传输，叫做<strong>序列化</strong>，该对象所对应的类，必须是实现Serializable接口</p><p><strong>对象流也要建立在其它流之上(字节流)</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">package io.demo09;</span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">准备一个长度为10，类型是Hero的数组，使用10个Hero对象初始化该数组</span><br><span class="line">然后把该数组序列化到一个文件heroes.lol</span><br><span class="line">接着使用ObjectInputStream读取该文件，并转换为Hero数组，验证该数组中的内容，是否和序列化之前一样。</span><br><span class="line"> *&#x2F;</span><br><span class="line"></span><br><span class="line">import java.io.*;</span><br><span class="line"></span><br><span class="line">public class Practice01 &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        Hero[] heroes &#x3D; new Hero[10];</span><br><span class="line">        for (int i &#x3D; 0; i &lt; 10; i++) &#123;</span><br><span class="line">            heroes[i] &#x3D; new Hero();</span><br><span class="line">        &#125;</span><br><span class="line">        File file &#x3D; new File(&quot;D:\\heroes.lol&quot;);</span><br><span class="line">        writeObjectStream(heroes, file);</span><br><span class="line">        Hero[] heroes1 &#x3D; readObjectStream(file);</span><br><span class="line">        System.out.println(heroes &#x3D;&#x3D; heroes1);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void writeObjectStream(Hero[] heroes, File file) &#123;</span><br><span class="line">        try (FileOutputStream fos &#x3D; new FileOutputStream(file);</span><br><span class="line">             ObjectOutputStream oos &#x3D; new ObjectOutputStream(fos)) &#123;</span><br><span class="line">            for (Hero hero : heroes) &#123;</span><br><span class="line">                oos.writeObject(hero);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static Hero[] readObjectStream(File file) &#123;</span><br><span class="line">        Hero[] heroes &#x3D; new Hero[10];</span><br><span class="line">        try (FileInputStream fis &#x3D; new FileInputStream(file);</span><br><span class="line">             ObjectInputStream ois &#x3D; new ObjectInputStream(fis)) &#123;</span><br><span class="line">            int i &#x3D; 0;</span><br><span class="line">            Hero o;</span><br><span class="line">            while (true) &#123;</span><br><span class="line">                if (null &#x3D;&#x3D; (o &#x3D; (Hero) ois.readObject())) &#123;</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">                heroes[i] &#x3D; o;</span><br><span class="line">                i++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; catch (ClassNotFoundException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        return heroes;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="10-System-in"><a href="#10-System-in" class="headerlink" title="10. System.in"></a>10. System.in</h2><p>属于输入流InputStream的子类，可以从控制台输入数据。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">package io;</span><br><span class="line"></span><br><span class="line">import java.io.IOException;</span><br><span class="line">import java.io.InputStream;</span><br><span class="line"></span><br><span class="line">public class Practice01 &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        try (InputStream is &#x3D; System.in) &#123;</span><br><span class="line">            int i &#x3D; is.read();</span><br><span class="line">            System.out.println(i);</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="10-1-Scanner读取字符串"><a href="#10-1-Scanner读取字符串" class="headerlink" title="10.1 Scanner读取字符串"></a>10.1 Scanner读取字符串</h3><p>使用System.in.read虽然可以读取数据，但是很不方便<br>使用Scanner就可以逐行读取了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">package io;</span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">自动创建一个有一个类属性的类文件。</span><br><span class="line">通过控制台，获取类名，属性名称，属性类型，根据一个模板文件，自动创建这个类文件，并为属性提供setter和getter</span><br><span class="line"> *&#x2F;</span><br><span class="line"></span><br><span class="line">import java.io.*;</span><br><span class="line">import java.util.Scanner;</span><br><span class="line"></span><br><span class="line">public class Practice02 &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line"></span><br><span class="line">        Scanner sc &#x3D; new Scanner(System.in);</span><br><span class="line">        System.out.println(&quot;请输入类的名称：&quot;);</span><br><span class="line">        String className &#x3D; sc.next();</span><br><span class="line">        System.out.println(&quot;请输入属性的类型：&quot;);</span><br><span class="line">        String type &#x3D; sc.next();</span><br><span class="line">        System.out.println(&quot;请输入属性的名称：&quot;);</span><br><span class="line">        String property &#x3D; sc.next();</span><br><span class="line"></span><br><span class="line">        File template &#x3D; new File(&quot;D:\\template.txt&quot;);</span><br><span class="line">        createClass(className, property, type, template);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void createClass(String className, String property, String type, File template) &#123;</span><br><span class="line">        File targetFile &#x3D; new File(String.format(&quot;D:\\%s.java&quot;, className));</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 将property的首字母变为大写Uproperty</span><br><span class="line">        char[] chars &#x3D; property.toCharArray();</span><br><span class="line">        chars[0] &#x3D; Character.toUpperCase(chars[0]);</span><br><span class="line">        String uProperty &#x3D; new String(chars);</span><br><span class="line"></span><br><span class="line">        try (&#x2F;&#x2F;使用缓冲流</span><br><span class="line">             BufferedReader br &#x3D; new BufferedReader(new FileReader(template));</span><br><span class="line">             PrintWriter pw &#x3D; new PrintWriter(new FileWriter(targetFile))) &#123;</span><br><span class="line">            String line;</span><br><span class="line">            while (null !&#x3D; (line &#x3D; br.readLine())) &#123;</span><br><span class="line">                if (line.contains(&quot;@class@&quot;)) &#123;</span><br><span class="line">                    line &#x3D; line.replace(&quot;@class@&quot;, className);</span><br><span class="line">                &#125;</span><br><span class="line">                if (line.contains(&quot;@property@&quot;)) &#123;</span><br><span class="line">                    line &#x3D; line.replace(&quot;@property@&quot;, property);</span><br><span class="line">                &#125;</span><br><span class="line">                if (line.contains(&quot;@type@&quot;)) &#123;</span><br><span class="line">                    line &#x3D; line.replace(&quot;@type@&quot;, type);</span><br><span class="line">                &#125;</span><br><span class="line">                if (line.contains(&quot;@Uproperty@&quot;)) &#123;</span><br><span class="line">                    line &#x3D; line.replace(&quot;@Uproperty@&quot;, uProperty);</span><br><span class="line">                &#125;</span><br><span class="line">                pw.println(line);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            System.out.println(&quot;文件保存在：&quot; + targetFile.getAbsolutePath());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>template文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">public class @class@ &#123;</span><br><span class="line">    public @type@ @property@;</span><br><span class="line">    public @class@() &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    public void set@Uproperty@(@type@  @property@)&#123;</span><br><span class="line">        this.@property@ &#x3D; @property@;</span><br><span class="line">    &#125;</span><br><span class="line">      </span><br><span class="line">    public @type@  get@Uproperty@()&#123;</span><br><span class="line">        return this.@property@;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="11-练习"><a href="#11-练习" class="headerlink" title="11. 练习"></a>11. 练习</h2><h3 id="11-1-复制文件"><a href="#11-1-复制文件" class="headerlink" title="11.1 复制文件"></a>11.1 复制文件</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">package io.demo11;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 复制文件是常见的IO操作，设计方法，实现复制源文件srcFile到destFile</span><br><span class="line"></span><br><span class="line">import java.io.*;</span><br><span class="line"></span><br><span class="line">public class Practice01 &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        File srcFile &#x3D; new File(&quot;D:\\a.txt&quot;);</span><br><span class="line">        File destFile &#x3D; new File(&quot;D:\\b.txt&quot;);</span><br><span class="line">        copyFile(srcFile, destFile);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void copyFile(File srcFile, File destFile) &#123;</span><br><span class="line">        try (&#x2F;&#x2F; 缓存输入流</span><br><span class="line">             BufferedReader br &#x3D; new BufferedReader(new FileReader(srcFile));</span><br><span class="line">             &#x2F;&#x2F; 缓存输出流</span><br><span class="line">             PrintWriter pw &#x3D; new PrintWriter(new FileWriter(destFile))) &#123;</span><br><span class="line">            String line;</span><br><span class="line">            while (null !&#x3D; (line &#x3D; br.readLine())) &#123;</span><br><span class="line">                pw.println(line);</span><br><span class="line">            &#125;</span><br><span class="line">            pw.flush();</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125; finally &#123;</span><br><span class="line">            System.out.println(&quot;文件复制完成&quot;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="11-2-复制文件夹"><a href="#11-2-复制文件夹" class="headerlink" title="11.2 复制文件夹"></a>11.2 复制文件夹</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">package io.demo11;</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 复制文件夹，把源文件夹下所有的文件，复制到目标文件夹下（包括子文件夹）</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 流程：使用递归遍历文件夹，遇到文件调用复制文件方法，并获取文件的父目录，在目标文件夹下创建对应的父目录</span><br><span class="line"></span><br><span class="line">import java.io.*;</span><br><span class="line"></span><br><span class="line">public class Practice02 &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        String srcFolder &#x3D; &quot;D:&#x2F;MyBlog&quot;;</span><br><span class="line">        String destFolder &#x3D; &quot;D:&#x2F;a&quot;;</span><br><span class="line">        copyFolder(srcFolder, destFolder);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void copyFolder(String srcFolder, String destFolder) &#123;</span><br><span class="line">        String srcFolderName &#x3D; srcFolder.split(&quot;&#x2F;&quot;)[1];</span><br><span class="line">        File src &#x3D; new File(srcFolder);</span><br><span class="line">        goThroughDirectoryAndCopyFile(src, srcFolderName, destFolder);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void goThroughDirectoryAndCopyFile(File srcFolder, String srcFolderName,</span><br><span class="line">                                                     String destFolder) &#123;</span><br><span class="line">        for (File file : srcFolder.listFiles()) &#123;</span><br><span class="line">            if (file.isDirectory()) &#123;</span><br><span class="line">                goThroughDirectoryAndCopyFile(file, srcFolderName, destFolder);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                System.out.println(&quot;文件名：&quot; + file.getName() +</span><br><span class="line">                        &quot;, 大小为&quot; + file.length() + &quot;字节&quot;);</span><br><span class="line">                copyFile(file, srcFolderName, destFolder);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void copyFile(File srcFile, String srcFolderName, String destFile) &#123;</span><br><span class="line">        &#x2F;&#x2F; 获取源文件的目录</span><br><span class="line">        String srcPath &#x3D; srcFile.getAbsolutePath();</span><br><span class="line">        &#x2F;&#x2F; 按源文件夹名称进行分割，再合并目标文件夹路径则是目标文件路径</span><br><span class="line">        String destPath &#x3D; destFile + srcPath.split(srcFolderName)[1];</span><br><span class="line">        File targetFile &#x3D; new File(destPath);</span><br><span class="line">        if (!targetFile.exists()) &#123;</span><br><span class="line">            targetFile.getParentFile().mkdirs();</span><br><span class="line">        &#125;</span><br><span class="line">        try (BufferedReader br &#x3D; new BufferedReader(new FileReader(srcFile));</span><br><span class="line">             PrintWriter pw &#x3D; new PrintWriter(new FileWriter(targetFile))) &#123;</span><br><span class="line">            String line;</span><br><span class="line">            while (null !&#x3D; (line &#x3D; br.readLine())) &#123;</span><br><span class="line">                pw.println(line);</span><br><span class="line">            &#125;</span><br><span class="line">            pw.flush();</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="11-3-查找文件内容"><a href="#11-3-查找文件内容" class="headerlink" title="11.3 查找文件内容"></a>11.3 查找文件内容</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">package io.demo11;</span><br><span class="line"></span><br><span class="line">&#x2F;*</span><br><span class="line">查找文件内容，假设你的项目目录是e:&#x2F;project, 遍历这个目录下所有的java文件(包括子文件夹)</span><br><span class="line">找出文件内容包括某个字符串的那些文件，并打印出来。</span><br><span class="line"> *&#x2F;</span><br><span class="line"></span><br><span class="line">import java.io.BufferedReader;</span><br><span class="line">import java.io.File;</span><br><span class="line">import java.io.FileReader;</span><br><span class="line">import java.io.IOException;</span><br><span class="line"></span><br><span class="line">public class Practice03 &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        File folder &#x3D; new File(</span><br><span class="line">                &quot;D:\\Simulation and Calculation Projects\\Java\\BasisKnowledgeCode&quot;);</span><br><span class="line">        String search &#x3D; &quot;Practice01&quot;;</span><br><span class="line">        search(folder, search);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void search(File folder, String search) &#123;</span><br><span class="line">        goThroughDirectory(folder, search);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void goThroughDirectory(File folder, String search) &#123;</span><br><span class="line">        for (File file : folder.listFiles()) &#123;</span><br><span class="line">            if (file.isDirectory()) &#123;</span><br><span class="line">                goThroughDirectory(file, search);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                &#x2F;&#x2F; 判断文件是否以.java结尾</span><br><span class="line">                if (file.getAbsolutePath().endsWith(&quot;.java&quot;)) &#123;</span><br><span class="line">                    searchOneFile(file, search);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static void searchOneFile(File file, String search) &#123;</span><br><span class="line">        try (BufferedReader br &#x3D; new BufferedReader(new FileReader(file))) &#123;</span><br><span class="line">            String line;</span><br><span class="line">            while (null !&#x3D; (line &#x3D; br.readLine())) &#123;</span><br><span class="line">                if (line.contains(search)) &#123;</span><br><span class="line">                    System.out.println(String.format(&quot;找到子字符串%s，在文件：%s&quot;,</span><br><span class="line">                            search, file.getAbsolutePath()));</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (IOException e) &#123;</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="12-总结"><a href="#12-总结" class="headerlink" title="12. 总结"></a>12. 总结</h2><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E6%80%BB%E7%BB%93.png" alt=""></p><ul><li>继承InputStream/OutputStream的，为真正意义上的流</li><li>继承Reader/Writer的，是流的处理方式。内部创建了流，解决了编码问题</li><li>继承Buffer的，是流的处理方式。使用外部传入的流，解决IO频繁问题。</li></ul><p>除了这些流之外，还有很多其它流。大体上使用差不多的，只是在一些特殊场合下用起来更加方便，在工作中用到的时候再进行学习就可以了。</p><h2 id="13-参考"><a href="#13-参考" class="headerlink" title="13. 参考"></a>13. 参考</h2><ul><li><a href="https://how2j.cn/k/io/io-file/345.html">HOW2J.CN</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> IO </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java学习笔记-数字与字符串</title>
      <link href="post/9ee3/"/>
      <url>post/9ee3/</url>
      
        <content type="html"><![CDATA[<p>Java SE的内容我是学习过一遍的，但是很长时间不用加上内容比较繁杂，很多知识又忘记了。这里记录一下遗漏的知识点。</p><h2 id="1-装箱拆箱"><a href="#1-装箱拆箱" class="headerlink" title="1. 装箱拆箱"></a>1. 装箱拆箱</h2><h3 id="1-1-封装类"><a href="#1-1-封装类" class="headerlink" title="1.1 封装类"></a>1.1 封装类</h3><p>所有的基本类型，都有对应的类类型。比如int对应的类是Integer，这种类就叫做封装类。</p><p>tips：简单类型变量无法直接获得变量类型。</p><p>数字封装类有Byte，Short，Integer，Long，Float，Double，这些类都是抽象类Number的子类。</p><h3 id="1-2-自动装箱和拆箱"><a href="#1-2-自动装箱和拆箱" class="headerlink" title="1.2 自动装箱和拆箱"></a>1.2 自动装箱和拆箱</h3><p>基本类型转换为封装类，称为装箱；封装类转换为基本类型，称为拆箱。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">package encapsulation;</span><br><span class="line"></span><br><span class="line">public class TestNumber &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        int i &#x3D; 5;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 装箱：把一个基本类型的变量，转换为Integer对象</span><br><span class="line">        Integer it &#x3D; new Integer(i);</span><br><span class="line">        &#x2F;&#x2F; 拆箱：把一个Integer对象，转换为一个基本类型的int</span><br><span class="line">        int it2 &#x3D; it.intValue();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>不需要调用构造方法，通过“=”符号，进行装箱和拆箱，称为自动装箱和自动拆箱。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">package encapsulation;</span><br><span class="line"></span><br><span class="line">public class AutoEncapsulation &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        int i &#x3D; 5;</span><br><span class="line">        </span><br><span class="line">        &#x2F;&#x2F; 自动装箱</span><br><span class="line">        Integer it &#x3D; i;</span><br><span class="line">        &#x2F;&#x2F; 自动拆箱</span><br><span class="line">        int it2 &#x3D; it;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>int的最大值可以通过其对应的封装类Integer.MAX_VALUE获取。</strong></p><p>自动装箱、拆箱，只能应用在对应类型下，不是对应的封装类，只能通过基本类型和封装类转换，进行装箱和拆箱。（Byte类型可以直接拆箱到int类型）。</p><h2 id="2-字符串转换"><a href="#2-字符串转换" class="headerlink" title="2. 字符串转换"></a>2. 字符串转换</h2><h3 id="2-1-数字转字符串"><a href="#2-1-数字转字符串" class="headerlink" title="2.1 数字转字符串"></a>2.1 数字转字符串</h3><p>[1] 使用String类的静态方法valueOf<br>[2] 先把基本类型装箱为对象，然后调用对象的toString</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">package transform;</span><br><span class="line"></span><br><span class="line">public class Number2String &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        int i &#x3D; 25977;</span><br><span class="line"></span><br><span class="line">        &#x2F;&#x2F; 方法1</span><br><span class="line">        String s1 &#x3D; String.valueOf(i);</span><br><span class="line">        &#x2F;&#x2F; 方法2</span><br><span class="line">        Integer it &#x3D; i;</span><br><span class="line">        String s2 &#x3D; it.toString();</span><br><span class="line">        System.out.println(s1);</span><br><span class="line">        System.out.println(s2);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2-2-字符串转数字"><a href="#2-2-字符串转数字" class="headerlink" title="2.2 字符串转数字"></a>2.2 字符串转数字</h3><p>调用Integer的静态方法parseInt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">package transform;</span><br><span class="line"></span><br><span class="line">public class String2Number &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        String s &#x3D; &quot;2578&quot;;</span><br><span class="line">        int i &#x3D; Integer.parseInt(s);</span><br><span class="line">        System.out.println(i);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-格式化字符串"><a href="#3-格式化字符串" class="headerlink" title="3. 格式化字符串"></a>3. 格式化字符串</h2><p>%s表示字符串 %d表示数字 %n表示换行</p><p>System.out.format()方法格式化字符串。</p><h2 id="4-字符类型"><a href="#4-字符类型" class="headerlink" title="4. 字符类型"></a>4. 字符类型</h2><p>char 对应的封装类为Character，只能放一个字符。</p><p>Character有很多静态方法可以用来判断字符类型（比如是否为数字？是否为大写字母？）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">package typeChar;</span><br><span class="line"></span><br><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.List;</span><br><span class="line">import java.util.Scanner;</span><br><span class="line"></span><br><span class="line">public class Practice &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        &#x2F;* 通过Scanner从控制台读取字符串，然后把字符串转换为字符数组，再筛选出读取到的字符串中的</span><br><span class="line">           字母和数字，并打印出来</span><br><span class="line">         *&#x2F;</span><br><span class="line">        Scanner sc &#x3D; new Scanner(System.in);</span><br><span class="line">        String str &#x3D; sc.next();</span><br><span class="line">        &#x2F;&#x2F; 转换为字符数组</span><br><span class="line">        char[] cs &#x3D; str.toCharArray();</span><br><span class="line"></span><br><span class="line">        List&lt;Character&gt; list &#x3D; new ArrayList&lt;&gt;();</span><br><span class="line">        for (char element : cs) &#123;</span><br><span class="line">            if (Character.isUpperCase(element) || Character.isDigit(element)) &#123;</span><br><span class="line">                list.add(element);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(list);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-字符串"><a href="#5-字符串" class="headerlink" title="5. 字符串"></a>5. 字符串</h2><p>字符串即字符的组合，在Java中，字符串是一个类，所以我们见到的字符串都是对象。三种方法创建字符串：</p><ol><li>每当有一个字面值出现的时候，虚拟机就会创建一个字符串</li><li>调用String的构造方法创建字符串</li><li>通过+进行字符串拼接创建字符串</li></ol><p>字符串是不可改变(immutable)的。即不能改变长度、不能增删字符、不能修改字符。一旦创建好这个字符串，里面的内容永远不能改变。</p><p>length()方法返回当前字符串的长度</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">package string;</span><br><span class="line"></span><br><span class="line">import java.util.Random;</span><br><span class="line"></span><br><span class="line">public class Practice &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        &#x2F;&#x2F; 创建一个长度是5的随机字符串，随机字符有可能是数字，大写字母或者小写字母。</span><br><span class="line">        Random r &#x3D; new Random();</span><br><span class="line">        int randomNumber;</span><br><span class="line">        char[] is &#x3D; new char[5];</span><br><span class="line">        for (int i &#x3D; 0; i &lt; is.length; i++) &#123;</span><br><span class="line">            while (true) &#123;</span><br><span class="line">                randomNumber &#x3D; r.nextInt(75) + 45;</span><br><span class="line">                char c &#x3D; (char) randomNumber;</span><br><span class="line">                if (Character.isDigit(c) || Character.isUpperCase(c) || Character.isLowerCase(c)) &#123;</span><br><span class="line">                        is[i] &#x3D; c;</span><br><span class="line">                        break;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        String str &#x3D; new String(is);</span><br><span class="line">        System.out.println(str);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>String类的toLowerCase可以把字符串全转换为小写字母</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">package string;</span><br><span class="line"></span><br><span class="line">import java.util.Random;</span><br><span class="line"></span><br><span class="line">public class Practice2 &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        &#x2F;* 创建一个长度是8的字符串数组，使用8个长度是5的随机字符串初始化这个数组，</span><br><span class="line">           对这个数组进行排序，按照每个字符串的首字母排序。</span><br><span class="line">         *&#x2F;</span><br><span class="line">        String[] strings &#x3D; new String[8];</span><br><span class="line">        for (int i &#x3D; 0; i &lt; strings.length; i++) &#123;</span><br><span class="line">            strings[i] &#x3D; getRandomString();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        for (String string : strings) &#123;</span><br><span class="line">            System.out.println(string);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        System.out.println(&quot;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&quot;);</span><br><span class="line"></span><br><span class="line">        String str;</span><br><span class="line">        for (int i &#x3D; 0; i &lt; strings.length; i++) &#123;</span><br><span class="line">            for (int j &#x3D; i + 1; j &lt; strings.length; j++) &#123;</span><br><span class="line">                char c1 &#x3D; strings[i].toLowerCase().toCharArray()[0];</span><br><span class="line">                char c2 &#x3D; strings[j].toLowerCase().toCharArray()[0];</span><br><span class="line">                if ((short) c1 &gt; (short) c2) &#123;</span><br><span class="line">                    str &#x3D; strings[i];</span><br><span class="line">                    strings[i] &#x3D; strings[j];</span><br><span class="line">                    strings[j] &#x3D; str;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        for (String string : strings) &#123;</span><br><span class="line">            System.out.println(string);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public static String getRandomString() &#123;</span><br><span class="line">        Random r &#x3D; new Random();</span><br><span class="line">        int randomNumber;</span><br><span class="line">        char[] is &#x3D; new char[5];</span><br><span class="line">        for (int i &#x3D; 0; i &lt; is.length; i++) &#123;</span><br><span class="line">            while (true) &#123;</span><br><span class="line">                randomNumber &#x3D; r.nextInt(75) + 45;</span><br><span class="line">                char c &#x3D; (char) randomNumber;</span><br><span class="line">                if (Character.isDigit(c) || Character.isUpperCase(c) || Character.isLowerCase(c)) &#123;</span><br><span class="line">                    is[i] &#x3D; c;</span><br><span class="line">                    break;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        return new String(is);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br><strong>注意理解此处的递归方法</strong><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">package string;</span><br><span class="line"></span><br><span class="line">import java.util.Random;</span><br><span class="line"></span><br><span class="line">public class Practice3 &#123;</span><br><span class="line"></span><br><span class="line">    public static void main(String[] args) &#123;</span><br><span class="line">        &#x2F;* 生成一个长度是3的随机字符串，把这个字符串作为密码；</span><br><span class="line">           使用穷举法生成长度是3的字符串，匹配上述生成的密码。</span><br><span class="line">         *&#x2F;</span><br><span class="line">        &#x2F;&#x2F; 生成长度为3的随机字符串</span><br><span class="line">        String password &#x3D; getRandomString(3);</span><br><span class="line">        System.out.println(&quot;标准密码：&quot; + password);</span><br><span class="line">        char[] passwords &#x3D; new char[3];</span><br><span class="line">        generatePassword(passwords, 0, password);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 生成随机字符串</span><br><span class="line">     * @param length 字符串长度</span><br><span class="line">     * @return</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public static String getRandomString(int length) &#123;</span><br><span class="line">        String stringPool &#x3D; &quot;&quot;;</span><br><span class="line">        for (short i &#x3D; &#39;a&#39;; i &lt;&#x3D; &#39;z&#39;; i++) &#123;</span><br><span class="line">            stringPool +&#x3D; (char) i;</span><br><span class="line">        &#125;</span><br><span class="line">        for (short i &#x3D; &#39;0&#39;; i &lt;&#x3D; &#39;9&#39;; i++) &#123;</span><br><span class="line">            stringPool +&#x3D; (char) i;</span><br><span class="line">        &#125;</span><br><span class="line">        for (short i &#x3D; &#39;A&#39;; i &lt;&#x3D; &#39;Z&#39;; i++) &#123;</span><br><span class="line">            stringPool +&#x3D; (char) i;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        Random r &#x3D; new Random();</span><br><span class="line">        char[] chars &#x3D; new char[length];</span><br><span class="line">        for (int i &#x3D; 0; i &lt; length; i++) &#123;</span><br><span class="line">            int randomIndex &#x3D; r.nextInt(stringPool.length());</span><br><span class="line">            chars[i] &#x3D; stringPool.charAt(randomIndex);</span><br><span class="line">        &#125;</span><br><span class="line">        return new String(chars);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    &#x2F;**</span><br><span class="line">     * 使用递归进行穷举密码</span><br><span class="line">     * @param passwords 字符数组，用来穷举密码</span><br><span class="line">     * @param index 检查密码的第几位</span><br><span class="line">     * @param password 标准密码</span><br><span class="line">     *&#x2F;</span><br><span class="line">    public static void generatePassword(char[] passwords, int index, String password) &#123;</span><br><span class="line">        for (short i &#x3D; &#39;0&#39;; i &lt;&#x3D; &#39;z&#39;; i++) &#123;</span><br><span class="line">            if (!Character.isLetterOrDigit((char) i)) &#123;</span><br><span class="line">                continue;</span><br><span class="line">            &#125;</span><br><span class="line">            passwords[index] &#x3D; (char) i;</span><br><span class="line">            if (index !&#x3D; password.length() - 1) &#123;</span><br><span class="line">                generatePassword(passwords, index + 1, password);</span><br><span class="line">            &#125; else &#123;</span><br><span class="line">                String guess &#x3D; new String(passwords);</span><br><span class="line">&#x2F;&#x2F;                System.out.println(&quot;穷举的密码：&quot; + guess);</span><br><span class="line">                if (guess.equals(password)) &#123;</span><br><span class="line">                    System.out.println(&quot;得到正确的密码：&quot; + guess);</span><br><span class="line">                    return;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure></p><h3 id="5-1-操纵字符串"><a href="#5-1-操纵字符串" class="headerlink" title="5.1 操纵字符串"></a>5.1 操纵字符串</h3><div class="table-container"><table><thead><tr><th>方法</th><th>简介 </th></tr></thead><tbody><tr><td>charAt</td><td>获取字符</td></tr><tr><td>toCharArray</td><td>获取对应的字符数组</td></tr><tr><td>subString</td><td>截取子字符串(左闭右开)</td></tr><tr><td>split</td><td>分割</td></tr><tr><td>trim</td><td>去掉首尾空格</td></tr><tr><td>toLowerCase toUpperCase</td><td>大小写</td></tr><tr><td>indexOf lastIndexOf contains</td><td>定位</td></tr><tr><td>replaceAll replaceFirst</td><td>替换</td></tr></tbody></table></div><h3 id="5-2-比较字符串"><a href="#5-2-比较字符串" class="headerlink" title="5.2 比较字符串"></a>5.2 比较字符串</h3><p>str1和str2的内容相同，但并不是同一个字符串对象。</p><p>特例：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">str1 &#x3D; &quot;the light&quot;;</span><br><span class="line">str2 &#x3D; &quot;the light&quot;;</span><br></pre></td></tr></table></figure><p>一般来说，编译器每碰到一个字符串的字面值，就会创建一个新的对象，所以在str1创建一个新的字符串”the light”，但是在第7行，编译器发现已经存在现成的”the light”，那么就直接拿来使用，而没有进行重复创建。</p><p>使用equals进行字符串内容的比较，必须大小写一致；equalsIgnoreCase忽略大小写判断内容是否一致。</p><p>是否以子字符串开始或结束—startsWith; endsWith</p><p><strong>给字符串数组中的字符串赋值字符串时，不要使用增强for循环，否则会无法赋值。。。</strong></p><h3 id="5-3-StringBuffer"><a href="#5-3-StringBuffer" class="headerlink" title="5.3 StringBuffer"></a>5.3 StringBuffer</h3><p>StringBuffer是可变长的字符串，并且不产生新的未使用对象。</p><div class="table-container"><table><thead><tr><th>方法</th><th>简介</th></tr></thead><tbody><tr><td>append</td><td>追加</td></tr><tr><td>delete</td><td>删除</td></tr><tr><td>insert</td><td>插入</td></tr><tr><td>reverse</td><td>反转</td></tr><tr><td>length</td><td>长度</td></tr><tr><td>capacity</td><td>容量</td></tr></tbody></table></div><p>根据String对象，使用StringBuffer的构造方法创建一个StringBuffer对象。</p><p>为什么StringBuffer可以变长？</p><p>和String内部是一个字符数组一样，StringBuffer也维护了一个字符数组。但是，这个字符数组，留有冗余长度，从而可以进行追加和插入。</p><h3 id="5-4-StringBuilder"><a href="#5-4-StringBuilder" class="headerlink" title="5.4 StringBuilder"></a>5.4 StringBuilder</h3><p>是StringBuffer的一个简易替换，jdk1.5版本起才有的。</p><p>与StringBuffer的不同之处：<br>StringBuffer是同步的，线程安全，但每次操作时都要判断锁，效率低<br>StringBuilder是线程不同步的，不用判断锁，效率高，线程安全性要求高时可以手动同步。<br>开发建议使用StringBuilder.</p><h2 id="6-参考"><a href="#6-参考" class="headerlink" title="6. 参考"></a>6. 参考</h2><ul><li><a href="https://how2j.cn/k/number-string/number-string-wrap/22.html">HOW2J.CN</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git学习-分支</title>
      <link href="post/2353/"/>
      <url>post/2353/</url>
      
        <content type="html"><![CDATA[<p>分支是Git里面一项十分重要的功能。比如你的master分支上用于版本发布，但此时需要你在项目中添加一个新功能，如果继续使用master分支进行开发，那么其他小伙伴就获得不了版本库了（因为版本库不全）。现在就可以新建一个新的分支，在新分支上进行开发，开发好之后再将版本库合并回master分支，就可以解决这个问题~</p><h2 id="1-Git分支过程"><a href="#1-Git分支过程" class="headerlink" title="1. Git分支过程"></a>1. Git分支过程</h2><p>在版本回退中已经了解到，每次提交，Git都会把它们串成一条时间线，这条时间线就是一个分支，HEAD指向当前分支。一开始的时候，master分支是一条线，Git用master指向最新的提交，再用HEAD指向master，就能确定当前分支，以及当前分支的提交点。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E5%88%9B%E5%BB%BA%E5%88%86%E6%94%AF01.png" alt=""></p><p>当我们新建bug分支，Git相当于新建一个bug指针，指向当前分支的最新提交。此时将分支切换到bug分支，则HEAD将会指向bug。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E5%88%9B%E5%BB%BA%E5%88%86%E6%94%AF02.png" alt=""></p><p>接下对工作区的内容进行改动，则是针对bug分支所进行的提交。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E5%88%9B%E5%BB%BA%E5%88%86%E6%94%AF03.png" alt=""></p><p>当bug分支上的工作完成了，就可以把bug分支合并到master分支上。Git怎么合并呢？最简单的方法，就是直接把master指向bug的当前提交，就完成了合并。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E5%88%9B%E5%BB%BA%E5%88%86%E6%94%AF05.png" alt=""></p><p>这样完成了之后还可以删除bug分支，Git也只是删除了bug指针就🆗了。</p><h2 id="2-创建分支"><a href="#2-创建分支" class="headerlink" title="2. 创建分支"></a>2. 创建分支</h2><p>使用<code>git branch bug</code>创建bug分支</p><p>使用<code>git branch</code>命令可以查看分支，*标注则表明现在正处于master分支之上。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E5%88%9B%E5%BB%BA%E5%88%86%E6%94%AF06.png" alt=""></p><h2 id="3-切换分支"><a href="#3-切换分支" class="headerlink" title="3. 切换分支"></a>3. 切换分支</h2><p>使用<code>git checkout bug</code>切换到bug分支</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E5%88%87%E6%8D%A2%E5%88%86%E6%94%AF01.png" alt=""></p><p>使用<code>git checkout -b bug</code>可以新建bug分支并切换到bug分支。</p><h2 id="4-合并分支"><a href="#4-合并分支" class="headerlink" title="4. 合并分支"></a>4. 合并分支</h2><p>先在bug分支上进行两个提交。</p><p>切换到master分支，使用<code>git merge bug</code>将bug分支合并到master分支上。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E5%90%88%E5%B9%B6%E5%88%86%E6%94%AF01.png" alt=""></p><p>可以看到提示Fast-Forward快进模式合并，这种模式下合并分支在历史记录中将看不到有新分支创建。</p><p>不使用快进模式，再切换回bug分支，进行一次提交。</p><p>切换回master分支合并bug分支，此时带上no-ff参数，表示不使用快进模式。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E5%90%88%E5%B9%B6%E5%88%86%E6%94%AF02.png" alt=""></p><p>此时使用带图形的git log命令可以看到分支的存在。但是相当于在最后一个节点还有一次提交记录。</p><h2 id="5-删除分支"><a href="#5-删除分支" class="headerlink" title="5. 删除分支"></a>5. 删除分支</h2><p>确保自己在master分支上，删除bug分支</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git branch -d bug</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E5%90%88%E5%B9%B6%E5%88%86%E6%94%AF03.png" alt=""></p><h2 id="6-总结"><a href="#6-总结" class="headerlink" title="6. 总结"></a>6. 总结</h2><p>创建分支 <code>git branch 分支名</code><br>切换分支 <code>git checkout 分支名</code><br>创建并切换到分支 <code>git checkout -b 分支名</code><br>合并分支 <code>git merge 分支名</code><br>删除分支 <code>git branch -d 分支名</code></p><p>带图形界面的git log命令 <code>git log --oneline --graph</code></p><h2 id="7-参考"><a href="#7-参考" class="headerlink" title="7. 参考"></a>7. 参考</h2><ul><li><a href="https://www.liaoxuefeng.com/wiki/896043488029600">廖雪峰Git教程</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> 版本控制 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git学习-远程仓库</title>
      <link href="post/2476/"/>
      <url>post/2476/</url>
      
        <content type="html"><![CDATA[<p>目前，已经学习了使用Git在本地进行版本控制，不用担心文件在本地的修改和备份问题了。前面提到，Git方便多人之间的协作，有一个方便大家交换版本库的中央服务器，GitHub就是这样一个专门为Git提供代码托管服务的网站。登录<a href="https://github.com/">GitHub</a>网站，注册账号，你就拥有了自己的Git远程服务器了。下面记录了对远程仓库的操作</p><h2 id="1-关联GitHub账号"><a href="#1-关联GitHub账号" class="headerlink" title="1. 关联GitHub账号"></a>1. 关联GitHub账号</h2><p>由于本地Git仓库和GitHub仓库之间的传输是通过SSH(Secure Shell)加密(SSH是较可靠，专为远程登录会话和其他网络服务提供安全性的协议。)的，所以需要设置SSH密钥(公钥和私钥的过程类似于下图)。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/SSH%E5%85%AC%E9%92%A5%E5%92%8C%E7%A7%81%E9%92%A5.png" alt=""></p><h3 id="1-1-生成SSH-Key"><a href="#1-1-生成SSH-Key" class="headerlink" title="1.1 生成SSH Key"></a>1.1 生成SSH Key</h3><p>打开git bash，使用<code>cd ~</code>切换到用户主目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的邮箱地址&quot;</span><br></pre></td></tr></table></figure><p>一切顺利的话，可以在用户目录下找到一个.ssh文件，下面有id_rsa, id_rsa.pub两个文件，其中id_rsa是私钥，需要保存好，不能泄露给别人；而id_rsa.pub是公钥，将它添加到GitHub账户中。</p><p>进入GitHub个人账户，点击Settings，选择SSH and GPG keys，添加SSH key</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/GitHub%E8%AE%BE%E7%BD%AESSH%20Key.png" alt=""></p><p>如果在其它电脑上也需要向这个GitHub账号的仓库中推送版本库怎么办呢？GitHub支持添加多个SSH Key，所以同样地，在那台电脑上生成公钥时候，添加到GitHub账号中就可以了。</p><h2 id="2-添加远程仓库"><a href="#2-添加远程仓库" class="headerlink" title="2. 添加远程仓库"></a>2. 添加远程仓库</h2><p>在GitHub上新建仓库(new repository)，名字为LearnIt</p><p>在之前学习的LearnIt文件夹中打开git bash，使用命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin https:&#x2F;&#x2F;github.com&#x2F;shenshilei1022&#x2F;LearnIt.git</span><br></pre></td></tr></table></figure><p>将本地版本库和远端仓库进行关联</p><p>此时使用</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><p>将本地版本库的内容推送到了远端分支。</p><p>分布式版本系统的最大好处之一是在本地工作完全不需要考虑远程库的存在，也就是有没有联网都可以正常工作，而SVN在没有联网的时候是拒绝干活的！当有网络的时候，再把本地提交推送一下就完成了同步，真是太方便了！</p><h2 id="3-从远程仓库克隆"><a href="#3-从远程仓库克隆" class="headerlink" title="3. 从远程仓库克隆"></a>3. 从远程仓库克隆</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone 仓库地址</span><br></pre></td></tr></table></figure><p>克隆版本库</p><h2 id="4-删除远程仓库的文件"><a href="#4-删除远程仓库的文件" class="headerlink" title="4. 删除远程仓库的文件"></a>4. 删除远程仓库的文件</h2><p>先将远程仓库中的版本库拉下来</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull origin master</span><br></pre></td></tr></table></figure><p>删除文件或文件夹</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git rm 文件名</span><br></pre></td></tr></table></figure><p>提交版本信息</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;删除 文件名&quot;</span><br></pre></td></tr></table></figure><p>将版本库推送回远端</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master</span><br></pre></td></tr></table></figure><h2 id="5-总结"><a href="#5-总结" class="headerlink" title="5. 总结"></a>5. 总结</h2><p>这一部分属于基本操作，需要熟练掌握~</p><h2 id="6-参考"><a href="#6-参考" class="headerlink" title="6. 参考"></a>6. 参考</h2><ul><li><a href="https://www.liaoxuefeng.com/wiki/896043488029600">廖雪峰Git教程</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> 版本控制 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git学习-本地版本控制与版本回溯</title>
      <link href="post/b00a/"/>
      <url>post/b00a/</url>
      
        <content type="html"><![CDATA[<p>以前也了解学习过Git这一版本控制系统，但没有经常使用的情况下，很多命令就忘得一干二净了。正好最近有空闲时间，决定将它重新拾起来，毕竟Git和GitHub作为十分优秀的版本控制和代码托管平台，很有必要把它学好~</p><h2 id="1-Git简介"><a href="#1-Git简介" class="headerlink" title="1. Git简介"></a>1. Git简介</h2><h3 id="1-1-集中式版本控制和分布式版本控制"><a href="#1-1-集中式版本控制和分布式版本控制" class="headerlink" title="1.1 集中式版本控制和分布式版本控制"></a>1.1 集中式版本控制和分布式版本控制</h3><p>Git是Linux创建者Linus使用C语言写的一个分布式版本控制系统。另一非常出名的版本控制系统是SVN，它是集中式的版本控制系统。它们之间有什么区别呢？</p><p>集中式版本控制系统，版本库是集中放在中央服务器的。需要使用的时候，需要先从中央处理器获取最新的版本库，开始进行自己的工作，工作完后再将版本库推送回中央服务器。而这样的最大缺点就是必须要联网，在有些情况下还是有些不方便的。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E9%9B%86%E4%B8%AD%E5%BC%8F.png" alt=""></p><p>而在分布式版本控制系统中，没有所谓的中央服务器，每台PC上都有完整的版本库，工作的时候直接在本地就可以操作。如果两个人之间需要协作，那他们互相推送自己的修改就可以了。但考虑到多人协作的情况，Git也有一个“中央服务器”——GitHub，方便多人交换各自的修改。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/master/imgs/%E5%88%86%E5%B8%83%E5%BC%8F.png" alt=""></p><h3 id="1-2-为什么要使用Git？"><a href="#1-2-为什么要使用Git？" class="headerlink" title="1.2 为什么要使用Git？"></a>1.2 为什么要使用Git？</h3><p>比如当你写毕业论文的时候，最开始的时候是初稿，然后经过修改你的文件夹会变成这样…</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A6%81%E4%BD%BF%E7%94%A8Git.png" alt=""></p><p>这样修改多次之后，就算是记性再好的人也难免记不清每个文档相较于最初做了哪些修改，十分容易混淆。而且如果你想回到之前你修改过的某一个版本，这么多的文档下，也很难记得符合自己要求的是哪一个了吧😂。如果能有下面这样的版本记录，那么对于这些修改就得心应手了。</p><div class="table-container"><table><thead><tr><th>版本</th><th>文件名</th><th>用户</th><th>说明</th><th>日期</th></tr></thead><tbody><tr><td>1</td><td>readme.txt</td><td>小明</td><td>增加readme文档</td><td>2020.1.19</td></tr><tr><td>2</td><td>readme.txt</td><td>小华</td><td>删除配置说明</td><td>2020.2.5</td></tr><tr><td>…</td><td>…</td><td>…</td><td>…</td><td>…</td></tr></tbody></table></div><p>这样就进入了版本控制的20世纪~</p><h3 id="1-3-安装Git"><a href="#1-3-安装Git" class="headerlink" title="1.3 安装Git"></a>1.3 安装Git</h3><p>进入<a href="https://git-scm.com/">Git</a>官网下载Windows版本的二进制文件进行傻瓜式安装即可。</p><p>安装好后，打开git bash，配置用户名和邮箱（因为Git是分布式版本控制系统，因此每台机器都需要表明自己的身份。）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;你的用户名&quot;</span><br><span class="line">git config --global user.email &quot;你的邮箱名&quot;</span><br></pre></td></tr></table></figure><p>global参数表示这台机器上的所有仓库都会使用这个配置。</p><h2 id="2-使用Git在本地进行版本控制"><a href="#2-使用Git在本地进行版本控制" class="headerlink" title="2. 使用Git在本地进行版本控制"></a>2. 使用Git在本地进行版本控制</h2><h3 id="2-1-初始化版本库"><a href="#2-1-初始化版本库" class="headerlink" title="2.1 初始化版本库"></a>2.1 初始化版本库</h3><p>打开git bash，创建新文件夹LearnIt，切换到文件夹中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir LearnIt</span><br><span class="line">cd LearnIt</span><br></pre></td></tr></table></figure><p>使用git init初始化版本库<code>git init</code></p><p>这就在本地创建好了一个新的版本库(<strong>实际上版本库就是文件夹下面的.git文件夹下的内容</strong>[看不见该文件夹的可以打开查看隐藏文件选项])。</p><h3 id="2-2-add和commit"><a href="#2-2-add和commit" class="headerlink" title="2.2 add和commit"></a>2.2 add和commit</h3><p>创建好版本库之后，怎样进行文件的版本控制呢？</p><p>需要先了解一下Git的工作原理</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/Git%E5%B7%A5%E4%BD%9C%E5%8E%9F%E7%90%86.png" alt=""></p><p>这里的工作区(Working Directory)就是LearnIt文件夹下的内容，版本库就是.git文件夹下的内容。版本库分为两个部分：暂存区(stage)和主分支(master)。</p><p>整个版本控制的流程大致就是将工作区的修改先提交到暂存区，再将暂存区的内容推送到主分支上，这样版本库就保存了工作区最新的信息。当工作区的内容更新时，需要进行相同的操作来更新版本库。最终操作版本库就可以对不同版本的工作区内容实现版本控制了。</p><p>那么在LearnIt文件夹下创建readme.txt</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vim readme.txt</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E6%96%B0%E5%BB%BA%E5%B7%A5%E4%BD%9C%E5%8C%BA%E6%96%87%E4%BB%B6.png" alt=""></p><p>输完后按<kbd>Esc</kbd>进入末行模式，输入wq保存退出。</p><p>使用<code>git add readme.txt</code>命令将工作区文件添加到暂存区。</p><p>使用<code>git commit -m &quot;添加readme.txt&quot;</code>命令将暂存区文件添加到master主分支（””内部是这次提交的注释，帮助你了解每个版本究竟干了什么事情。）。</p><p>使用<code>git status</code>查看Git当前状态。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%8F%90%E4%BA%A4%E6%88%90%E5%8A%9F.png" alt=""></p><p>提示工作区是干净的，即工作区的所有修改已经全部提交到了版本库。</p><h3 id="2-3-修改文件进行版本更新"><a href="#2-3-修改文件进行版本更新" class="headerlink" title="2.3 修改文件进行版本更新"></a>2.3 修改文件进行版本更新</h3><figure class="highlight vim"><figcaption><span>readme.txt```进入文本进行修改</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">![](http<span class="variable">s:</span>//gitee.<span class="keyword">com</span>/shenshilei1022/hugo_image_resource/raw/master/imgs/%E4%BF%AE%E6%<span class="number">94</span>%B9readme%E6%<span class="number">96</span>%<span class="number">87</span>%E4%BB%B6.png)</span><br><span class="line"></span><br><span class="line">这时使用```git status```查看Git状态</span><br><span class="line"></span><br><span class="line">![](http<span class="variable">s:</span>//gitee.<span class="keyword">com</span>/shenshilei1022/hugo_image_resource/raw/master/imgs/Git%E7%<span class="number">8</span>A%B6%E6%<span class="number">80</span>%<span class="number">81</span>_2.png)</span><br><span class="line"></span><br><span class="line">提示有修改没有提交到暂存区，且没有commit</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>git add readme.txt<br>git commit -m “append GPL”<br>```</p><p>使用上述命令进行版本库更新。</p><p>使用<code>git log</code>命令就可以查看版本一览了，如果嫌显示信息过于繁杂，则可以带上<code>--oneline</code>参数，显示格式即如博文前面的表格格式了。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/log%E6%98%BE%E7%A4%BA%E7%89%88%E6%9C%AC%E4%B8%80%E8%A7%88.png" alt=""></p><p>黄色的一串字母数字码是commit id(版本号)，之后版本回溯的时候会用到。</p><p>HEAD -&gt; master 表示当前所处的位置在master分支，且指向”append GPL”版本，(HEAD是一个指针，移动它就相当于移动当前所在的版本。之后要用)。</p><h3 id="2-4-版本回溯"><a href="#2-4-版本回溯" class="headerlink" title="2.4 版本回溯"></a>2.4 版本回溯</h3><p>再修改一下readme.txt</p><p>此时先不要add进暂存区，使用<code>git diff</code>命令可以比较目前工作区文件和版本库当前版本文件的区别。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E6%AF%94%E8%BE%83%E5%B7%A5%E4%BD%9C%E5%8C%BA%E5%92%8C%E7%89%88%E6%9C%AC%E5%BA%93%E6%96%87%E4%BB%B6%E7%9A%84%E4%B8%8D%E5%90%8C.png" alt=""></p><p>add commit更新版本库，查看版本一览</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E7%89%88%E6%9C%AC%E4%B8%80%E8%A7%88_%E4%B8%89%E6%9D%A1%E7%89%88%E6%9C%AC%E4%BF%A1%E6%81%AF.png" alt=""></p><p>此时，若觉得当前这个professional版本是多余的，想回到append GPL版本，使用<code>git reset --hard HEAD^</code>来回到上个版本(HEAD^表示当前HEAD的前一个版本，HEAD^^则表示前两个，以此类推。当然，数量多了以后可以使用HEAD~20表示HEAD的前20个版本)。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E7%89%88%E6%9C%AC%E5%9B%9E%E6%BA%AF.png" alt=""></p><p>从而回到了append GPL版本，打开文件，确实回到了之前的版本。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E4%BF%AE%E6%94%B9readme%E6%96%87%E4%BB%B6.png" alt=""></p><p>如果一个版本库中有几十上百个版本，使用HEAD^这种方法很繁杂，这时候轮到commit id出场了，<code>git reset --hard 版本号</code>来切换到版本号对应的版本。<strong>小技巧：版本号不用输全，一般输个四五位就够了~</strong></p><p>但是又有情况出现了，又想回到append professional版本了，可是<code>git log</code>命令已经不能显示append professional版本的版本号了，怎么办呢？使用<code>git reflog</code>命令查看历史操作，可以看到需要的版本号，再使用reset命令即可达到回到未来的操作啦！</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/reflog%E6%9F%A5%E7%9C%8B%E5%8E%86%E5%8F%B2%E5%91%BD%E4%BB%A4.png" alt=""></p><h3 id="2-5-撤销操作"><a href="#2-5-撤销操作" class="headerlink" title="2.5 撤销操作"></a>2.5 撤销操作</h3><p>编辑文件readme.txt.</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E6%96%87%E4%BB%B6%E4%B8%AD%E5%8A%A0%E4%BA%86%E4%B8%8D%E8%83%BD%E6%8F%90%E4%BA%A4%E7%9A%84%E8%AF%9D.png" alt=""></p><p>当保存之后，你突然发现不对，最后一句不能出现在文件当中。此时，再打开文件把这句话删掉吗😂？当然这样也可以，但Git还提供了更简单的方法。使用<code>git checkout -- 文件名</code>可以直接撤销工作区的改动。</p><p>但如果已经把修改提交到了暂存区，需要使用<code>git reset HEAD readme.txt</code>把暂存区的文件撤销回工作区(使用HEAD表示最新的版本)，在使用<code>git checkout -- 文件名</code>撤销工作区的改动。</p><h3 id="2-6-删除操作"><a href="#2-6-删除操作" class="headerlink" title="2.6 删除操作"></a>2.6 删除操作</h3><p>添加一个test.txt文件提交到版本库。通常我们删除文件是从文件管理器中直接删除或是使用rm命令。此时查看Git状态</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E5%88%A0%E9%99%A4%E6%96%87%E4%BB%B6Git%E7%8A%B6%E6%80%81.png" alt=""></p><p>此时，如果你仍旧需要删除文件，则执行<code>git rm 文件名</code>，再进行提交<code>git commit -m &quot;删除test.txt&quot;</code>，现在，文件就从版本库中被删除了。</p><p>另一种情况就是删错文件了，不过不要紧，版本库中还有这个文件，又因为暂存区没有变动。直接执行<code>git checkout -- test.txt</code>来撤销工作区的操作。但是如果已经执行了<code>git rm 文件名</code>，这时暂存区发生了变动，需要先撤销暂存区变动（<code>git reset HEAD 文件名</code>），再撤销工作区变动（<code>git checkout -- 文件名</code>）.</p><p><strong>删除的文件之前必须提交到过版本库才可恢复！</strong></p><h2 id="3-总结"><a href="#3-总结" class="headerlink" title="3. 总结"></a>3. 总结</h2><p>Git在本地进行版本控制分为以下步骤：</p><p>新建版本库<br>add commit实现版本添加<br>reset实现版本回溯<br>checkout reset撤销工作区、暂存区操作<br>rm 删除操作</p><p>log reflog查看版本一览、历史版本信息<br>status查看Git状态</p><h2 id="4-参考"><a href="#4-参考" class="headerlink" title="4. 参考"></a>4. 参考</h2><ul><li><a href="https://www.liaoxuefeng.com/wiki/896043488029600">廖雪峰Git教程</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
          <category> Git </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
            <tag> 版本控制 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>局域网下Windows和iPad之间互传文件</title>
      <link href="post/46ac/"/>
      <url>post/46ac/</url>
      
        <content type="html"><![CDATA[<p>之前老妈说想看电影，这个电影又是爱奇艺上需要VIP才能看的，所以我就在网上找到磁力链接下载到我的Windows电脑上了，大小有2个G。而我的iPad内存又很小，不想将电影保存到上面，电脑我又有用🤣，所以是否有两全其美的方法呢？</p><p>找到一个利用SMB协议实现网络共享的方法。SMB（Server Message Block）通信协议是微软（Microsoft）和英特尔(Intel)在1987年制定的协议，主要是作为Microsoft网络的通讯协议。</p><p>基本过程就是：Windows和iPad在同一局域网下 - Windows上新建共享文件夹 - iPad去访问这个文件夹。这正好满足了我的需求~</p><h2 id="1-Window上新建共享文件夹"><a href="#1-Window上新建共享文件夹" class="headerlink" title="1. Window上新建共享文件夹"></a>1. Window上新建共享文件夹</h2><p>鼠标点击空白处，右键新建文件夹，命名为iPad共享。右键文件夹，选择属性 - 共享。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/Windows%E4%B8%8B%E6%96%87%E4%BB%B6%E5%A4%B9%E5%B1%9E%E6%80%A7%E8%AE%BE%E7%BD%AE.png" alt=""></p><p>点击高级共享，勾选共享此文件夹。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/Windows%E4%B8%8B%E6%96%87%E4%BB%B6%E5%A4%B9%E5%B1%9E%E6%80%A7%E8%AE%BE%E7%BD%AE_2.png" alt=""></p><p>点击权限。勾选完全控制，确定。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/Windows%E4%B8%8B%E6%96%87%E4%BB%B6%E5%A4%B9%E5%B1%9E%E6%80%A7%E8%AE%BE%E7%BD%AE_3.png" alt=""></p><p>再确定，回到共享界面，点击共享。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/Windows%E4%B8%8B%E6%96%87%E4%BB%B6%E5%A4%B9%E5%B1%9E%E6%80%A7%E8%AE%BE%E7%BD%AE_4.png" alt=""></p><p>选择everyone，点击添加。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/Windows%E4%B8%8B%E6%96%87%E4%BB%B6%E5%A4%B9%E5%B1%9E%E6%80%A7%E8%AE%BE%E7%BD%AE_5.png" alt=""></p><p>将everyone的权限改成 读取/写入 ，点击共享。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/Windows%E4%B8%8B%E6%96%87%E4%BB%B6%E5%A4%B9%E5%B1%9E%E6%80%A7%E8%AE%BE%E7%BD%AE_6.png" alt=""></p><p>到这里一个共享文件夹就新建好啦~</p><h2 id="2-查看PC的IP地址"><a href="#2-查看PC的IP地址" class="headerlink" title="2. 查看PC的IP地址"></a>2. 查看PC的IP地址</h2><p><kbd><kbd>win键</kbd>+<kbd>r键</kbd>&lt;/kbd&gt;调出运行面板，输出cmd回车，输入ipconfig命令，在显示的信息找到ipv4的地址，记下来。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E6%9F%A5%E7%9C%8BIP%E5%9C%B0%E5%9D%80.png" alt=""></p><h2 id="3-iPad使用SMB连接共享文件夹"><a href="#3-iPad使用SMB连接共享文件夹" class="headerlink" title="3. iPad使用SMB连接共享文件夹"></a>3. iPad使用SMB连接共享文件夹</h2><p>找到 文件 app，打开后点击左上角的三个点，选择连接服务器。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/iPad%E8%BF%9E%E6%8E%A5_1.png" alt=""></p><p>输入 smb://刚才记录的ipv4地址 </p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/iPad%E8%BF%9E%E6%8E%A5_2.png" alt=""></p><p>选择注册用户，<strong>注意这里的名称和密码十分重要！</strong><br>如果你在Windows上使用的是本地账户，则进入 设置 - 账户 来查看你的用户名，密码则是你之前设置的微软本地账户密码。若使用的是微软账号，则输入注册邮箱@前面的内容(比如邮箱是abc@qq.com，用户名就是abc)和账户密码即可。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/iPad%E8%BF%9E%E6%8E%A5_3.png" alt=""></p><p>这样就连接到PC上的共享文件夹了，实现了我妈用iPad看我电脑上的电影，我还能用电脑干其它的需求~</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>这样做的好处是避免使用iTunes，而且也不需要占用iPad的内存空间，最大的优点是SMB速度很快，这种连接下看电影丝毫没有卡顿。缺点就是两个设备需要处于同一局域网（不过现在这个要求还是很容易达到的👌）。</p>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
          <category> iOS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> iPad </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>给Hugo个人博客添加Valine评论系统</title>
      <link href="post/e277/"/>
      <url>post/e277/</url>
      
        <content type="html"><![CDATA[<p>昨天花时间给个人博客加Valine评论系统。由于所使用的Hugo主题<a href="https://github.com/dillonzq/LoveIt">LoveIt</a>已经支持Valine评论系统，原本以为会比较简单，但是因为自己是小白一只，仍然走了许多弯路。于是在这里总结一下。</p><h2 id="1-Valine评论系统"><a href="#1-Valine评论系统" class="headerlink" title="1. Valine评论系统"></a>1. Valine评论系统</h2><p><a href="https://valine.js.org/">Valine</a>是一款快速、简洁且高效的无后端评论系统，理论上支持但不限于静态博客。</p><h3 id="1-1-获取AppID和AppKey"><a href="#1-1-获取AppID和AppKey" class="headerlink" title="1.1 获取AppID和AppKey"></a>1.1 获取AppID和AppKey</h3><p>进入<a href="https://leancloud.cn/dashboard/login.html#/signup">LearnCloud</a>注册账号。</p><p>登录账号，在主界面点击创建应用按钮D。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/LearnCloud%E5%88%9B%E5%BB%BA%E5%BA%94%E7%94%A8.png" alt=""></p><p>填入应用名（按喜好任意取名即可），个人使用选择开发版，点击创建。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/LearnCloud%E5%88%9B%E5%BB%BA%E5%BA%94%E7%94%A8_2.png" alt=""></p><p>进入所创建的应用。在 设置 - 应用Keys - 获取AppID和AppKey。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/LearnCloud%E8%8E%B7%E5%8F%96id%E5%92%8Ckey.png" alt=""></p><p>在 存储 - 结构化数据 - 创建Class 创建Comment数据库，用来存储评论数据。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/LearnCloud%E5%88%9B%E5%BB%BACommentClass.png" alt=""></p><h2 id="2-修改config-toml配置文件"><a href="#2-修改config-toml配置文件" class="headerlink" title="2. 修改config.toml配置文件"></a>2. 修改config.toml配置文件</h2><p>回到MyBlog根目录下，打开config.toml文件，找到Comment Config设置代码块。将配置做如下修改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"># Comment Config</span><br><span class="line">  [params.comment]</span><br><span class="line">    enable &#x3D; true</span><br><span class="line"></span><br><span class="line">    # Disqus Comment Config (https:&#x2F;&#x2F;disqus.com&#x2F;)</span><br><span class="line">    # [params.comment.disqus]</span><br><span class="line">      # Disqus shortname to use Disqus in posts</span><br><span class="line">    #  shortname &#x3D; &quot;dillonzq&quot;</span><br><span class="line"></span><br><span class="line">    # Gittalk Comment Config (https:&#x2F;&#x2F;github.com&#x2F;gitalk&#x2F;gitalk)</span><br><span class="line">    # [params.comment.gitalk]</span><br><span class="line">    #  owner &#x3D; &quot;&quot;</span><br><span class="line">    #  repo &#x3D; &quot;&quot;</span><br><span class="line">    #  clientId &#x3D; &quot;&quot;</span><br><span class="line">    #  clientSecret &#x3D; &quot;&quot;</span><br><span class="line"></span><br><span class="line">    # Valine Comment Config (https:&#x2F;&#x2F;github.com&#x2F;xCss&#x2F;Valine)</span><br><span class="line">    [params.comment.valine]</span><br><span class="line">      enable &#x3D; true</span><br><span class="line">      appId &#x3D; &quot;你的AppID&quot;</span><br><span class="line">      appKey &#x3D; &quot;你的AppKey&quot;</span><br><span class="line">      placeholder &#x3D; &quot;说点什么吧...&quot;</span><br><span class="line">      notify &#x3D; false </span><br><span class="line">      verify &#x3D; true</span><br><span class="line">      avatar &#x3D; &quot;mp&quot;</span><br><span class="line">      # meta&#x3D; &quot;&quot;</span><br><span class="line">      visitor &#x3D; true</span><br><span class="line">      recordIP &#x3D; true</span><br><span class="line"></span><br><span class="line">    # Facebook Comment Config (https:&#x2F;&#x2F;developers.facebook.com&#x2F;docs&#x2F;plugins&#x2F;comments)</span><br><span class="line">    [params.comment.facebook]</span><br><span class="line">      enable &#x3D; false</span><br><span class="line">      width &#x3D; &quot;100%&quot;</span><br><span class="line">      numPosts &#x3D; 10</span><br><span class="line">      appId &#x3D; &quot;&quot;</span><br><span class="line">      languageCode &#x3D; &quot;en_US&quot;</span><br></pre></td></tr></table></figure><p>由于LoveIt适配了多个评论系统，所以整个评论设置的代码较长，我只需要Valine评论系统，修改Valine部分的设置就🆗。<strong>注意[params.comment]下的enable一定要设置为true，表示是否打开评论功能</strong></p><p>Valine配置中各个参数的意义：</p><div class="table-container"><table><thead><tr><th>Value</th><th>Function</th></tr></thead><tbody><tr><td>appId</td><td>从LearnCloud上获取的AppID</td></tr><tr><td>appKey</td><td>从LearnCloud上获取的AppKey</td></tr><tr><td>placeholder</td><td>评论框内预显示的文本</td></tr><tr><td>notify</td><td>是否使用邮件提醒</td></tr><tr><td>verify</td><td>评论时是否使用验证码验证</td></tr><tr><td>avatar</td><td><a href="https://valine.js.org/avatar.html">头像类型</a></td></tr><tr><td>visitor</td><td>是否开启文章阅读量统计</td></tr><tr><td>recordIP</td><td>是否记录评论者IP地址</td></tr></tbody></table></div><p>进行到这儿，天真的我以为就配置完成了👀，结果启动之后发现文章界面并没有评论框显示。在网上尝试搜教程，发现都是说如何在主题中添加Valine的html代码，而这些LoveIt主题中已经整合好了，不需要自己添加这部分的代码。</p><h2 id="3-设置环境变量"><a href="#3-设置环境变量" class="headerlink" title="3. 设置环境变量"></a>3. 设置环境变量</h2><p>于是在GitHub给LoveIt的作者<a href="https://github.com/dillonzq">Dillon</a>留了言。十分感谢他的回复👍，他提醒我设置评论需要设置环境变量<code>HUGO_ENV=production</code>(环境变量的设置步骤参考<a href="https://shenshilei1022.github.io/2020/02/%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/">使用Hugo搭建静态博客网站</a>设置Hugo的环境变量过程)</p><p>将Hugo环境切换到生产环境。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E6%89%B9%E6%B3%A8%202020-02-22%20114155.png" alt=""></p><h2 id="4-安装Hugo-extended版本"><a href="#4-安装Hugo-extended版本" class="headerlink" title="4. 安装Hugo extended版本"></a>4. 安装Hugo extended版本</h2><p>然而很快问题又来了，上图是我没有添加博文时的情况，可以正常启动。但当我添加了博文之后，报出下面的错误</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E6%89%B9%E6%B3%A8%202020-02-22%20114519.png" alt=""></p><p>我又虚(si)心(pi)请(lai)教(lian)了Dillon，他告诉我要下载extended版本。好的！进入<a href="https://github.com/gohugoio/hugo/releases">Hugo Releases</a>界面下载windows对应的文件，配置好环境变量，启动！我的评论系统终于有了~</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/Hugo%E7%89%88%E6%9C%AC.png" alt=""></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/Valine%E8%AF%84%E8%AE%BA%E7%95%8C%E9%9D%A2.png" alt=""></p><h2 id="5-总结"><a href="#5-总结" class="headerlink" title="5. 总结"></a>5. 总结</h2><p>再次感谢LoveIt作者Dillon帮忙解决问题！<br>自己配置这些开源项目时，也要更加认真的阅读作者给出的文档，避免自己走弯路。</p><h2 id="6-参考"><a href="#6-参考" class="headerlink" title="6. 参考"></a>6. 参考</h2><ul><li><a href="https://valine.js.org/">Valine说明文档</a></li><li><a href="https://github.com/dillonzq/LoveIt/blob/develop/README.zh.md">LoveIt主题/中文文档</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
          <category> Hugo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Valine </tag>
            
            <tag> Hugo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用PicGo+GitHub搭建个人图床</title>
      <link href="post/da73/"/>
      <url>post/da73/</url>
      
        <content type="html"><![CDATA[<p>前两天搭建好了自己的个人博客，但是要上传博文的时候发现了一点问题。由于文档格式是markdown，插入图片时需要引用图片的路径（绝对路径或相对路径），但是这样做的话，博文上传后就无法找到图片的路径，导致图片无法正常显示。所以需要把要显示的图片上传到网络，生成对应的图片链接，利用网络加载图片。</p><p>之前使用过uTools里的图床插件(sm.ms源)，其实还是很方便的。但是其中一个让我感到不方便的地方是我在sm.ms网站上不知道登录哪个账号查看我图床中的图片，只能在uTools的插件中才能看见。没办法，老强迫症了😳。因为个人博客已经部署在GitHub上了，所以图床也想放在GitHub上便于管理。了解到PicGo这一开源图床软件支持GitHub图床，于是便用PicGo+GitHub搭建个人图床。</p><h2 id="1-在GitHub上创建仓库"><a href="#1-在GitHub上创建仓库" class="headerlink" title="1. 在GitHub上创建仓库"></a>1. 在GitHub上创建仓库</h2><p>步骤和<a href="https://shenshilei1022.github.io/2020/02/%E4%BD%BF%E7%94%A8hugo%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E5%8D%9A%E5%AE%A2%E7%BD%91%E7%AB%99/">使用Hugo搭建静态博客网站</a>中将项目部署到远程仓库中的创建仓库相同(<strong>这里的仓库名称随意</strong>)，有问题请移步隔壁帖子进行观看。</p><h2 id="2-安装PicGo"><a href="#2-安装PicGo" class="headerlink" title="2. 安装PicGo"></a>2. 安装PicGo</h2><p>进入<a href="https://github.com/Molunerfinn/PicGo">PicGo</a>的GitHub项目页面，可以从他的README文档中了解到关于PicGo的信息以及使用说明。</p><p><a href="https://github.com/Molunerfinn/PicGo/releases">下载</a>windows对应的PicGo安装包。</p><p>安装十分简单，双击.exe文件，修改安装路径，无脑next的傻瓜式安装。</p><h2 id="3-配置PicGo"><a href="#3-配置PicGo" class="headerlink" title="3. 配置PicGo"></a>3. 配置PicGo</h2><p>打开PicGo，配置GitHub仓库的信息</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/PicGo_Github%E5%9B%BE%E5%BA%8A%E8%AE%BE%E7%BD%AE.png" alt=""></p><p>设置仓库名(我就是因为这个折腾了半天😓)，最初我是从GitHub仓库页面直接复制过来的，设置好之后，上传图片失败。仔细排查后发现，我填的仓库名的”/“前后各有一个空格。。。导致配置失败。所以一定要认真一点，GitHub用户名/仓库名 即可！</p><p>分支名填master即可。</p><p>指定存储路径可填可不填。我这里填的是imgs/，意思是上传的图片保存在仓库的imgs文件夹下。</p><h3 id="3-1-获取token"><a href="#3-1-获取token" class="headerlink" title="3.1 获取token"></a>3.1 获取token</h3><p>Token相当于GitHub的一个“暗号”，程序想获取你GitHub账号下的仓库数据，需要正确的“暗号”。获取token的步骤：</p><ul><li><p>进入GitHub账户设置</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E8%8E%B7%E5%8F%96token_1.png" alt=""></p></li><li><p>选择开发者设置</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E8%8E%B7%E5%8F%96token_2.png" alt=""></p></li><li><p>点击Personal access tokens，再选择Generate new token(可能会要求确认密码，确认就OK~)</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E8%8E%B7%E5%8F%96token_3.png" alt=""></p></li><li><p>在Note中选择备注信息，随便写什么都可以。下面的选择可以都选上，实际勾选上repo就OK。点击Generate token生成token。<br><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E8%8E%B7%E5%8F%96token_4.png" alt=""></p></li><li><p>GitHub会生成一串数字，这就是token，复制它到PicGo的配置栏中就大功告成了！(<strong>由于token的私密性，它只会在生成页面出现一次，以后再进这个页面则不会出现，所以建议将它复制到其它地方保存好，防止丢失。</strong>)</p></li></ul><p>之后就可以愉快的使用PicGo上传图片啦。</p><h2 id="4-总结"><a href="#4-总结" class="headerlink" title="4. 总结"></a>4. 总结</h2><p>填写配置信息细心一点，不要犯这种低级错误🐹。</p><p>注意！上传图片的名称不能重复，否则会上传失败！</p><h2 id="5-参考"><a href="#5-参考" class="headerlink" title="5. 参考"></a>5. 参考</h2><ul><li><a href="https://github.com/Molunerfinn/PicGo">PicGo项目</a></li><li><a href="https://picgo.github.io/PicGo-Doc/zh/guide/getting-started.html">PicGo使用文档</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
          <category> 图床 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> GitHub </tag>
            
            <tag> PicGo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Hugo搭建静态博客网站</title>
      <link href="post/133c/"/>
      <url>post/133c/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.gohugo.org/">Hugo</a>是一个由Go语言实现的静态网站生成器，优点是简单，快速部署。</p><p>之前也使用过其他平台写过博客，登录时的复杂和页面充斥的广告就熄灭了一大半写作的热情。最近了解到相较于Hexo更加简单的Hugo，便花了些时间将自己的个人博客搭好。</p><h2 id="1-安装Hugo"><a href="#1-安装Hugo" class="headerlink" title="1. 安装Hugo"></a>1. 安装Hugo</h2><p>进入<a href="https://github.com/spf13/hugo/releases">Hugo Releases</a>界面下载二进制文件。我的电脑是windows10 64位系统，下载对应的压缩包。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E4%B8%8B%E8%BD%BDHugo.png" alt=""></p><p>下载到本地之后解压，Hugo.exe文件不需要安装，将它放在一个你想放的地方，然后将对应的文件路径添加到环境变量中，就可以在控制台使用Hugo的命令建设网站了。（环境变量设置——此电脑-属性-高级系统设置-环境变量-对应的Path变量中增加放置Hugo.exe的绝对路径。）</p><p>在命令行中使用<code>hugo version</code>，出现下图说明安装成功。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E5%AE%89%E8%A3%85Hugo%E6%88%90%E5%8A%9F.png" alt=""></p><h2 id="2-在本地搭建Hugo站点"><a href="#2-在本地搭建Hugo站点" class="headerlink" title="2. 在本地搭建Hugo站点"></a>2. 在本地搭建Hugo站点</h2><p>进入命令行模式（windows的cmd和git的bash都可以，我个人使用的是git bash）</p><p>使用<code>hugo new site /MyBlog</code>建立新的站点，new site后面的参数是站点文件夹生成的路径。执行命令之后将会在指定目录下生成MyBlog文件夹，文件夹结构如图所示。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/Blog%E6%96%87%E4%BB%B6%E5%A4%B9%E7%BB%93%E6%9E%84.png" alt=""></p><p>其中content文件夹存放博客文档，static文件夹中存放图片资源。</p><p>其实现在整个静态网站已经搭建起来了，但是由于Hugo没有自带主题，所以需要先下载一个主题，我这里使用了<a href="https://github.com/dillonzq/LoveIt">LoveIt</a>主题，原型是基于LeaveIt和KeepIt主题，增添了很多方便的设置。</p><p>先切换到themes文件夹下<code>cd themes/</code></p><p>将主题项目克隆到该文件夹下<code>git clone https://github.com/dillonzq/LoveIt.git</code></p><p>该主题的配置信息可以参照作者给出的文档 <a href="https://github.com/dillonzq/LoveIt/blob/develop/README.zh.md">LoveIt主题/中文文档</a></p><p>切换回MyBlog文件夹<code>cd MyBlog/</code></p><p>执行命令<code>hugo server -t LoveIt --BuildDrafts</code>在本地运行静态网站。</p><p>此时会报出错误</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/LoveIt%E6%8A%A5%E9%94%99.png" alt=""></p><p>当时自己做到这一步，对这个错误有点摸不到头脑。且我将themes/LoveIt/exampleSite/config.toml文件覆盖掉MyBlog文件夹下的config.toml之后，仍然报错，但我使用其它主题却没有发生这种情况。</p><p>经过反复折腾，终于发现了原因。还需要将themes/LoveIt下的config文件夹复制到MyBlog文件夹，config文件夹中有一个_custom.scss文件，可能是因为缺少这个，主题运行不起来。</p><p>网站的一些样式布局在themes/LoveIt/resources中的最底层文件夹中进行修改（目前对css还不了解）</p><p>此时再使用上面的命令再本地运行静态网站，在浏览器中输入localhost:1313，得到如下界面就成功搭建啦</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E6%9C%AC%E5%9C%B0%E8%BF%90%E8%A1%8CHugo.png" alt=""></p><h2 id="3-将个人博客部署到GitHub远程仓库"><a href="#3-将个人博客部署到GitHub远程仓库" class="headerlink" title="3. 将个人博客部署到GitHub远程仓库"></a>3. 将个人博客部署到GitHub远程仓库</h2><p>进入<a href="https://github.com/">GitHub</a>（吐槽一下，GitHub在中国是真滴慢），注册好自己的账号。</p><p>点击右上角的加号，选择New repository创建新仓库。</p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E5%88%9B%E5%BB%BA%E6%96%B0%E4%BB%93%E5%BA%93.png" alt=""></p><p><mark>注意！这里的仓库名称十分重要！必须为 你的Github用户名(全小写) + .github.io<mark></p><p><img src="https://gitee.com/shenshilei1022/hugo_image_resource/raw/master/imgs/%E8%AE%BE%E7%BD%AE%E4%BB%93%E5%BA%93%E5%90%8D.png" alt=""></p><p>此时仓库已建立完毕，回到MyBlog文件夹。执行命令<code>hugo --theme=LoveIt --baseUrl=&quot;https://仓库名&quot; --buildDrafts</code>(这里的—buildDrafts换成-D也行)生成静态网站文件夹。</p><p>运行之后发现MyBlog文件夹下生成public文件夹。这就是我们要推送到远程仓库的文件夹。</p><p>切换到public目录<code>cd public/</code></p><p>对文件夹进行初始化<code>git init</code></p><p>添加文件夹中的所有文件到暂存区<code>git add .</code></p><p>提交文件并附上提交信息（必须）<code>git commit -m &quot;我的Hugo博客第一次提交&quot;</code></p><p>与远端的GitHub账户进行关联<code>git remote add origin https://github.com/用户名/仓库名.git</code></p><p>将文件push到远端仓库<code>git push -u origin master</code></p><p>push成功之后，就可以使用仓库名作为网址，对自己所搭的博客进行访问啦~</p><h2 id="4-总结"><a href="#4-总结" class="headerlink" title="4. 总结"></a>4. 总结</h2><p>对于我这个小白来说，整个过程搭建下来还是很有成就感的，也遇到了不少问题。最折腾的就是LoveIt主题的报错，当时根据报错信息，以为是我是用的Hugo版本太新了，所以从0.54版一直试到了现在0.64版，花费了不少时间，结果是css设置网页格式的问题🤣，我太难了。</p><p>学习了知识还要进行输出，才能记住所学的东西，也希望自己今后能养成写博客的习惯，加油~</p><h2 id="5-参考"><a href="#5-参考" class="headerlink" title="5. 参考"></a>5. 参考</h2><ul><li><a href="https://www.bilibili.com/video/av51574688?t=763">CodeSheep-手把手教你从0开始搭建自己的个人博客 |第二种姿势 | hugo</a></li><li><a href="https://www.gohugo.org/">Hugo中文文档</a></li><li><a href="https://github.com/dillonzq/LoveIt/blob/develop/README.zh.md">LoveIt主题/中文文档</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 工具使用 </category>
          
          <category> Hugo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hugo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
